/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278,
    SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278$,
} from "./sixhundredandtwentynined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278";
import * as z from "zod";

export enum Partner {
    Usa = "USA",
}

export enum PlanType {
    Base = "Base",
    Benefits = "Benefits",
    Corporate = "Corporate",
    Service = "Service",
}

export type NextgenSubscriptionPlan = {
    level: number;
    name: string;
    partner?: Partner | null | undefined;
    planId: string;
    planType: PlanType;
    price: number;
    prices: SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278;
};

/** @internal */
export const Partner$ = z.nativeEnum(Partner);

/** @internal */
export const PlanType$ = z.nativeEnum(PlanType);

/** @internal */
export namespace NextgenSubscriptionPlan$ {
    export type Inbound = {
        level: number;
        name: string;
        partner?: Partner | null | undefined;
        planId: string;
        planType: PlanType;
        price: number;
        prices: SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278$.Inbound;
    };

    export const inboundSchema: z.ZodType<NextgenSubscriptionPlan, z.ZodTypeDef, Inbound> = z
        .object({
            level: z.number(),
            name: z.string(),
            partner: z.nullable(Partner$).optional(),
            planId: z.string(),
            planType: PlanType$,
            price: z.number(),
            prices: SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278$.inboundSchema,
        })
        .transform((v) => {
            return {
                level: v.level,
                name: v.name,
                ...(v.partner === undefined ? null : { partner: v.partner }),
                planId: v.planId,
                planType: v.planType,
                price: v.price,
                prices: v.prices,
            };
        });

    export type Outbound = {
        level: number;
        name: string;
        partner?: Partner | null | undefined;
        planId: string;
        planType: PlanType;
        price: number;
        prices: SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NextgenSubscriptionPlan> = z
        .object({
            level: z.number(),
            name: z.string(),
            partner: z.nullable(Partner$).optional(),
            planId: z.string(),
            planType: PlanType$,
            price: z.number(),
            prices: SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278$.outboundSchema,
        })
        .transform((v) => {
            return {
                level: v.level,
                name: v.name,
                ...(v.partner === undefined ? null : { partner: v.partner }),
                planId: v.planId,
                planType: v.planType,
                price: v.price,
                prices: v.prices,
            };
        });
}
