/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type Remail1099FormResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * Remail 1099 response
   */
  remail1099Response?: shared.Remail1099Response | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const Remail1099FormResponse$inboundSchema: z.ZodType<
  Remail1099FormResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  Remail1099Response: shared.Remail1099Response$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "Remail1099Response": "remail1099Response",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type Remail1099FormResponse$Outbound = {
  ContentType: string;
  Remail1099Response?: shared.Remail1099Response$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const Remail1099FormResponse$outboundSchema: z.ZodType<
  Remail1099FormResponse$Outbound,
  z.ZodTypeDef,
  Remail1099FormResponse
> = z.object({
  contentType: z.string(),
  remail1099Response: shared.Remail1099Response$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    remail1099Response: "Remail1099Response",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Remail1099FormResponse$ {
  /** @deprecated use `Remail1099FormResponse$inboundSchema` instead. */
  export const inboundSchema = Remail1099FormResponse$inboundSchema;
  /** @deprecated use `Remail1099FormResponse$outboundSchema` instead. */
  export const outboundSchema = Remail1099FormResponse$outboundSchema;
  /** @deprecated use `Remail1099FormResponse$Outbound` instead. */
  export type Outbound = Remail1099FormResponse$Outbound;
}

export function remail1099FormResponseToJSON(
  remail1099FormResponse: Remail1099FormResponse,
): string {
  return JSON.stringify(
    Remail1099FormResponse$outboundSchema.parse(remail1099FormResponse),
  );
}

export function remail1099FormResponseFromJSON(
  jsonString: string,
): SafeParseResult<Remail1099FormResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Remail1099FormResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Remail1099FormResponse' from JSON`,
  );
}
