/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum BulkBatchUpdateStatus {
    Open = "Open",
    Pending = "Pending",
    Processing = "Processing",
    Complete = "Complete",
    Failed = "Failed",
    LessThanNilGreaterThan = "<nil>",
}

export type BulkBatchUpdate = {
    labels?: Record<string, string> | null | undefined;
    status?: BulkBatchUpdateStatus | null | undefined;
};

/** @internal */
export const BulkBatchUpdateStatus$ = z.nativeEnum(BulkBatchUpdateStatus);

/** @internal */
export namespace BulkBatchUpdate$ {
    export type Inbound = {
        labels?: Record<string, string> | null | undefined;
        status?: BulkBatchUpdateStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<BulkBatchUpdate, z.ZodTypeDef, Inbound> = z
        .object({
            labels: z.nullable(z.record(z.string())).optional(),
            status: z.nullable(BulkBatchUpdateStatus$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        labels?: Record<string, string> | null | undefined;
        status?: BulkBatchUpdateStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BulkBatchUpdate> = z
        .object({
            labels: z.nullable(z.record(z.string())).optional(),
            status: z.nullable(BulkBatchUpdateStatus$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
