/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetBankingInstitutionRequest = {
    /**
     * Bank Routing Number
     */
    routingNumber: string;
};

export type GetBankingInstitutionResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Institution Response
     */
    institutionResponse?: shared.InstitutionResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const GetBankingInstitutionRequest$inboundSchema: z.ZodType<
    GetBankingInstitutionRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    routingNumber: z.string(),
});

/** @internal */
export type GetBankingInstitutionRequest$Outbound = {
    routingNumber: string;
};

/** @internal */
export const GetBankingInstitutionRequest$outboundSchema: z.ZodType<
    GetBankingInstitutionRequest$Outbound,
    z.ZodTypeDef,
    GetBankingInstitutionRequest
> = z.object({
    routingNumber: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBankingInstitutionRequest$ {
    /** @deprecated use `GetBankingInstitutionRequest$inboundSchema` instead. */
    export const inboundSchema = GetBankingInstitutionRequest$inboundSchema;
    /** @deprecated use `GetBankingInstitutionRequest$outboundSchema` instead. */
    export const outboundSchema = GetBankingInstitutionRequest$outboundSchema;
    /** @deprecated use `GetBankingInstitutionRequest$Outbound` instead. */
    export type Outbound = GetBankingInstitutionRequest$Outbound;
}

/** @internal */
export const GetBankingInstitutionResponse$inboundSchema: z.ZodType<
    GetBankingInstitutionResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        InstitutionResponse: shared.InstitutionResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            InstitutionResponse: "institutionResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type GetBankingInstitutionResponse$Outbound = {
    ContentType: string;
    InstitutionResponse?: shared.InstitutionResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const GetBankingInstitutionResponse$outboundSchema: z.ZodType<
    GetBankingInstitutionResponse$Outbound,
    z.ZodTypeDef,
    GetBankingInstitutionResponse
> = z
    .object({
        contentType: z.string(),
        institutionResponse: shared.InstitutionResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            institutionResponse: "InstitutionResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBankingInstitutionResponse$ {
    /** @deprecated use `GetBankingInstitutionResponse$inboundSchema` instead. */
    export const inboundSchema = GetBankingInstitutionResponse$inboundSchema;
    /** @deprecated use `GetBankingInstitutionResponse$outboundSchema` instead. */
    export const outboundSchema = GetBankingInstitutionResponse$outboundSchema;
    /** @deprecated use `GetBankingInstitutionResponse$Outbound` instead. */
    export type Outbound = GetBankingInstitutionResponse$Outbound;
}
