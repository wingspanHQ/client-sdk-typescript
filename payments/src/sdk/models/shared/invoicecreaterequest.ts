/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FeeHandlingConfig,
  FeeHandlingConfig$inboundSchema,
  FeeHandlingConfig$Outbound,
  FeeHandlingConfig$outboundSchema,
} from "./feehandlingconfig.js";
import {
  InvoiceCollaboratorCreateRequest,
  InvoiceCollaboratorCreateRequest$inboundSchema,
  InvoiceCollaboratorCreateRequest$Outbound,
  InvoiceCollaboratorCreateRequest$outboundSchema,
} from "./invoicecollaboratorcreaterequest.js";
import {
  InvoiceLineItemsCreateRequest,
  InvoiceLineItemsCreateRequest$inboundSchema,
  InvoiceLineItemsCreateRequest$Outbound,
  InvoiceLineItemsCreateRequest$outboundSchema,
} from "./invoicelineitemscreaterequest.js";
import {
  InvoiceMetadata,
  InvoiceMetadata$inboundSchema,
  InvoiceMetadata$Outbound,
  InvoiceMetadata$outboundSchema,
} from "./invoicemetadata.js";
import {
  InvoiceNotificationPreferences,
  InvoiceNotificationPreferences$inboundSchema,
  InvoiceNotificationPreferences$Outbound,
  InvoiceNotificationPreferences$outboundSchema,
} from "./invoicenotificationpreferences.js";
import {
  LateFeeConfigUpdate,
  LateFeeConfigUpdate$inboundSchema,
  LateFeeConfigUpdate$Outbound,
  LateFeeConfigUpdate$outboundSchema,
} from "./latefeeconfigupdate.js";
import {
  ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2,
  ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$inboundSchema,
  ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$Outbound,
  ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$outboundSchema,
} from "./thirtysixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2.js";
import {
  ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461,
  ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$inboundSchema,
  ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$Outbound,
  ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$outboundSchema,
} from "./threebilliononehundredandninetymillionsixhundredandeightyfivethousandeighthundredandthirtytwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461.js";

export const InvoiceCreateRequestAcceptedPaymentMethods = {
  Credit: "Credit",
  Ach: "ACH",
  Manual: "Manual",
} as const;
export type InvoiceCreateRequestAcceptedPaymentMethods = ClosedEnum<
  typeof InvoiceCreateRequestAcceptedPaymentMethods
>;

export type Client = {};

export const InvoiceCreateRequestCurrency = {
  Usd: "USD",
  Cad: "CAD",
} as const;
export type InvoiceCreateRequestCurrency = ClosedEnum<
  typeof InvoiceCreateRequestCurrency
>;

export type Member = {};

export const InvoiceCreateRequestStatus = {
  Draft: "Draft",
  Open: "Open",
  Overdue: "Overdue",
  Cancelled: "Cancelled",
  Pending: "Pending",
  PaymentInTransit: "PaymentInTransit",
  Paid: "Paid",
} as const;
export type InvoiceCreateRequestStatus = ClosedEnum<
  typeof InvoiceCreateRequestStatus
>;

export type InvoiceCreateRequest = {
  acceptedPaymentMethods?:
    | Array<InvoiceCreateRequestAcceptedPaymentMethods>
    | null
    | undefined;
  attachments?:
    | ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2
    | null
    | undefined;
  client?: Client | null | undefined;
  collaborators?: Array<InvoiceCollaboratorCreateRequest> | null | undefined;
  creditFeeHandling: FeeHandlingConfig;
  currency?: InvoiceCreateRequestCurrency | null | undefined;
  dueDate: string;
  integration?:
    | ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461
    | null
    | undefined;
  invoiceNotes?: string | null | undefined;
  labels?: { [k: string]: string } | null | undefined;
  lateFeeHandling?: LateFeeConfigUpdate | null | undefined;
  lineItems: Array<InvoiceLineItemsCreateRequest>;
  member?: Member | null | undefined;
  memberClientId: string;
  metadata?: InvoiceMetadata | null | undefined;
  notificationPreferences?: InvoiceNotificationPreferences | null | undefined;
  status?: InvoiceCreateRequestStatus | null | undefined;
};

/** @internal */
export const InvoiceCreateRequestAcceptedPaymentMethods$inboundSchema:
  z.ZodNativeEnum<typeof InvoiceCreateRequestAcceptedPaymentMethods> = z
    .nativeEnum(InvoiceCreateRequestAcceptedPaymentMethods);

/** @internal */
export const InvoiceCreateRequestAcceptedPaymentMethods$outboundSchema:
  z.ZodNativeEnum<typeof InvoiceCreateRequestAcceptedPaymentMethods> =
    InvoiceCreateRequestAcceptedPaymentMethods$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceCreateRequestAcceptedPaymentMethods$ {
  /** @deprecated use `InvoiceCreateRequestAcceptedPaymentMethods$inboundSchema` instead. */
  export const inboundSchema =
    InvoiceCreateRequestAcceptedPaymentMethods$inboundSchema;
  /** @deprecated use `InvoiceCreateRequestAcceptedPaymentMethods$outboundSchema` instead. */
  export const outboundSchema =
    InvoiceCreateRequestAcceptedPaymentMethods$outboundSchema;
}

/** @internal */
export const Client$inboundSchema: z.ZodType<Client, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Client$Outbound = {};

/** @internal */
export const Client$outboundSchema: z.ZodType<
  Client$Outbound,
  z.ZodTypeDef,
  Client
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Client$ {
  /** @deprecated use `Client$inboundSchema` instead. */
  export const inboundSchema = Client$inboundSchema;
  /** @deprecated use `Client$outboundSchema` instead. */
  export const outboundSchema = Client$outboundSchema;
  /** @deprecated use `Client$Outbound` instead. */
  export type Outbound = Client$Outbound;
}

export function clientToJSON(client: Client): string {
  return JSON.stringify(Client$outboundSchema.parse(client));
}

export function clientFromJSON(
  jsonString: string,
): SafeParseResult<Client, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Client$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Client' from JSON`,
  );
}

/** @internal */
export const InvoiceCreateRequestCurrency$inboundSchema: z.ZodNativeEnum<
  typeof InvoiceCreateRequestCurrency
> = z.nativeEnum(InvoiceCreateRequestCurrency);

/** @internal */
export const InvoiceCreateRequestCurrency$outboundSchema: z.ZodNativeEnum<
  typeof InvoiceCreateRequestCurrency
> = InvoiceCreateRequestCurrency$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceCreateRequestCurrency$ {
  /** @deprecated use `InvoiceCreateRequestCurrency$inboundSchema` instead. */
  export const inboundSchema = InvoiceCreateRequestCurrency$inboundSchema;
  /** @deprecated use `InvoiceCreateRequestCurrency$outboundSchema` instead. */
  export const outboundSchema = InvoiceCreateRequestCurrency$outboundSchema;
}

/** @internal */
export const Member$inboundSchema: z.ZodType<Member, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Member$Outbound = {};

/** @internal */
export const Member$outboundSchema: z.ZodType<
  Member$Outbound,
  z.ZodTypeDef,
  Member
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Member$ {
  /** @deprecated use `Member$inboundSchema` instead. */
  export const inboundSchema = Member$inboundSchema;
  /** @deprecated use `Member$outboundSchema` instead. */
  export const outboundSchema = Member$outboundSchema;
  /** @deprecated use `Member$Outbound` instead. */
  export type Outbound = Member$Outbound;
}

export function memberToJSON(member: Member): string {
  return JSON.stringify(Member$outboundSchema.parse(member));
}

export function memberFromJSON(
  jsonString: string,
): SafeParseResult<Member, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Member$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Member' from JSON`,
  );
}

/** @internal */
export const InvoiceCreateRequestStatus$inboundSchema: z.ZodNativeEnum<
  typeof InvoiceCreateRequestStatus
> = z.nativeEnum(InvoiceCreateRequestStatus);

/** @internal */
export const InvoiceCreateRequestStatus$outboundSchema: z.ZodNativeEnum<
  typeof InvoiceCreateRequestStatus
> = InvoiceCreateRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceCreateRequestStatus$ {
  /** @deprecated use `InvoiceCreateRequestStatus$inboundSchema` instead. */
  export const inboundSchema = InvoiceCreateRequestStatus$inboundSchema;
  /** @deprecated use `InvoiceCreateRequestStatus$outboundSchema` instead. */
  export const outboundSchema = InvoiceCreateRequestStatus$outboundSchema;
}

/** @internal */
export const InvoiceCreateRequest$inboundSchema: z.ZodType<
  InvoiceCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  acceptedPaymentMethods: z.nullable(
    z.array(InvoiceCreateRequestAcceptedPaymentMethods$inboundSchema),
  ).optional(),
  attachments: z.nullable(
    ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$inboundSchema,
  ).optional(),
  client: z.nullable(z.lazy(() => Client$inboundSchema)).optional(),
  collaborators: z.nullable(
    z.array(InvoiceCollaboratorCreateRequest$inboundSchema),
  ).optional(),
  creditFeeHandling: FeeHandlingConfig$inboundSchema,
  currency: z.nullable(InvoiceCreateRequestCurrency$inboundSchema).optional(),
  dueDate: z.string(),
  integration: z.nullable(
    ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$inboundSchema,
  ).optional(),
  invoiceNotes: z.nullable(z.string()).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  lateFeeHandling: z.nullable(LateFeeConfigUpdate$inboundSchema).optional(),
  lineItems: z.array(InvoiceLineItemsCreateRequest$inboundSchema),
  member: z.nullable(z.lazy(() => Member$inboundSchema)).optional(),
  memberClientId: z.string(),
  metadata: z.nullable(InvoiceMetadata$inboundSchema).optional(),
  notificationPreferences: z.nullable(
    InvoiceNotificationPreferences$inboundSchema,
  ).optional(),
  status: z.nullable(InvoiceCreateRequestStatus$inboundSchema).optional(),
});

/** @internal */
export type InvoiceCreateRequest$Outbound = {
  acceptedPaymentMethods?: Array<string> | null | undefined;
  attachments?:
    | ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$Outbound
    | null
    | undefined;
  client?: Client$Outbound | null | undefined;
  collaborators?:
    | Array<InvoiceCollaboratorCreateRequest$Outbound>
    | null
    | undefined;
  creditFeeHandling: FeeHandlingConfig$Outbound;
  currency?: string | null | undefined;
  dueDate: string;
  integration?:
    | ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$Outbound
    | null
    | undefined;
  invoiceNotes?: string | null | undefined;
  labels?: { [k: string]: string } | null | undefined;
  lateFeeHandling?: LateFeeConfigUpdate$Outbound | null | undefined;
  lineItems: Array<InvoiceLineItemsCreateRequest$Outbound>;
  member?: Member$Outbound | null | undefined;
  memberClientId: string;
  metadata?: InvoiceMetadata$Outbound | null | undefined;
  notificationPreferences?:
    | InvoiceNotificationPreferences$Outbound
    | null
    | undefined;
  status?: string | null | undefined;
};

/** @internal */
export const InvoiceCreateRequest$outboundSchema: z.ZodType<
  InvoiceCreateRequest$Outbound,
  z.ZodTypeDef,
  InvoiceCreateRequest
> = z.object({
  acceptedPaymentMethods: z.nullable(
    z.array(InvoiceCreateRequestAcceptedPaymentMethods$outboundSchema),
  ).optional(),
  attachments: z.nullable(
    ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$outboundSchema,
  ).optional(),
  client: z.nullable(z.lazy(() => Client$outboundSchema)).optional(),
  collaborators: z.nullable(
    z.array(InvoiceCollaboratorCreateRequest$outboundSchema),
  ).optional(),
  creditFeeHandling: FeeHandlingConfig$outboundSchema,
  currency: z.nullable(InvoiceCreateRequestCurrency$outboundSchema).optional(),
  dueDate: z.string(),
  integration: z.nullable(
    ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$outboundSchema,
  ).optional(),
  invoiceNotes: z.nullable(z.string()).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  lateFeeHandling: z.nullable(LateFeeConfigUpdate$outboundSchema).optional(),
  lineItems: z.array(InvoiceLineItemsCreateRequest$outboundSchema),
  member: z.nullable(z.lazy(() => Member$outboundSchema)).optional(),
  memberClientId: z.string(),
  metadata: z.nullable(InvoiceMetadata$outboundSchema).optional(),
  notificationPreferences: z.nullable(
    InvoiceNotificationPreferences$outboundSchema,
  ).optional(),
  status: z.nullable(InvoiceCreateRequestStatus$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceCreateRequest$ {
  /** @deprecated use `InvoiceCreateRequest$inboundSchema` instead. */
  export const inboundSchema = InvoiceCreateRequest$inboundSchema;
  /** @deprecated use `InvoiceCreateRequest$outboundSchema` instead. */
  export const outboundSchema = InvoiceCreateRequest$outboundSchema;
  /** @deprecated use `InvoiceCreateRequest$Outbound` instead. */
  export type Outbound = InvoiceCreateRequest$Outbound;
}

export function invoiceCreateRequestToJSON(
  invoiceCreateRequest: InvoiceCreateRequest,
): string {
  return JSON.stringify(
    InvoiceCreateRequest$outboundSchema.parse(invoiceCreateRequest),
  );
}

export function invoiceCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<InvoiceCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvoiceCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvoiceCreateRequest' from JSON`,
  );
}
