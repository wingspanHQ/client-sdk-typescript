/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum NewUserSettingsUserAccountType {
    Member = "member",
    Enterprise = "enterprise",
}

export type NewUserSettings = {
    userAccountType?: NewUserSettingsUserAccountType | null | undefined;
};

/** @internal */
export const NewUserSettingsUserAccountType$ = z.nativeEnum(NewUserSettingsUserAccountType);

/** @internal */
export namespace NewUserSettings$ {
    export type Inbound = {
        userAccountType?: NewUserSettingsUserAccountType | null | undefined;
    };

    export const inboundSchema: z.ZodType<NewUserSettings, z.ZodTypeDef, Inbound> = z
        .object({
            userAccountType: z.nullable(NewUserSettingsUserAccountType$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.userAccountType === undefined
                    ? null
                    : { userAccountType: v.userAccountType }),
            };
        });

    export type Outbound = {
        userAccountType?: NewUserSettingsUserAccountType | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NewUserSettings> = z
        .object({
            userAccountType: z.nullable(NewUserSettingsUserAccountType$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.userAccountType === undefined
                    ? null
                    : { userAccountType: v.userAccountType }),
            };
        });
}
