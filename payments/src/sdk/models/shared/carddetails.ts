/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { Expose, Type } from "class-transformer";

export enum CardDetailsStatus {
    Active = "Active",
    Inactive = "Inactive",
    Stolen = "Stolen",
    Lost = "Lost",
    Frozen = "Frozen",
    ClosedByCustomer = "ClosedByCustomer",
    SuspectedFraud = "SuspectedFraud",
}

export enum CardDetailsType {
    IndividualDebitCard = "individualDebitCard",
    BusinessDebitCard = "businessDebitCard",
    IndividualVirtualDebitCard = "individualVirtualDebitCard",
    BusinessVirtualDebitCard = "businessVirtualDebitCard",
}

export class CardDetails extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    @Type(() => Address)
    address: Address;

    @SpeakeasyMetadata()
    @Expose({ name: "brand" })
    brand: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "expirationDate" })
    expirationDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last4Digits" })
    last4Digits: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "pinSet" })
    pinSet?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: CardDetailsStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: CardDetailsType;
}
