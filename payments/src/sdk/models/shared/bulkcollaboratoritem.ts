/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1,
  Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1$inboundSchema,
  Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1$Outbound,
  Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1$outboundSchema,
} from "./eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1.js";
import {
  MemberClientFormW9Info,
  MemberClientFormW9Info$inboundSchema,
  MemberClientFormW9Info$Outbound,
  MemberClientFormW9Info$outboundSchema,
} from "./memberclientformw9info.js";
import {
  UserRoles,
  UserRoles$inboundSchema,
  UserRoles$Outbound,
  UserRoles$outboundSchema,
} from "./userroles.js";

export const CollaboratorStatus = {
  Active: "Active",
  Inactive: "Inactive",
  Pending: "Pending",
} as const;
export type CollaboratorStatus = ClosedEnum<typeof CollaboratorStatus>;

export const BulkCollaboratorItemStatus = {
  Open: "Open",
  Pending: "Pending",
  Processing: "Processing",
  Complete: "Complete",
  Failed: "Failed",
} as const;
export type BulkCollaboratorItemStatus = ClosedEnum<
  typeof BulkCollaboratorItemStatus
>;

export type BulkCollaboratorItem = {
  bulkCollaboratorBatchId: string;
  bulkCollaboratorItemId: string;
  clientId: string;
  collaboratorGroupId?: string | null | undefined;
  collaboratorId?: string | null | undefined;
  collaboratorStatus: CollaboratorStatus;
  company?: string | null | undefined;
  createdAt: string;
  email?: string | null | undefined;
  eventActors: { [k: string]: string };
  externalId?: string | null | undefined;
  firstLastName?: string | null | undefined;
  formW9Data?: MemberClientFormW9Info | null | undefined;
  labels: { [k: string]: string };
  memberId?: string | null | undefined;
  metadata?:
    | Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1
    | null
    | undefined;
  orgSubAccountId?: string | null | undefined;
  status: BulkCollaboratorItemStatus;
  updatedAt: string;
  userRoles: UserRoles;
};

/** @internal */
export const CollaboratorStatus$inboundSchema: z.ZodNativeEnum<
  typeof CollaboratorStatus
> = z.nativeEnum(CollaboratorStatus);

/** @internal */
export const CollaboratorStatus$outboundSchema: z.ZodNativeEnum<
  typeof CollaboratorStatus
> = CollaboratorStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollaboratorStatus$ {
  /** @deprecated use `CollaboratorStatus$inboundSchema` instead. */
  export const inboundSchema = CollaboratorStatus$inboundSchema;
  /** @deprecated use `CollaboratorStatus$outboundSchema` instead. */
  export const outboundSchema = CollaboratorStatus$outboundSchema;
}

/** @internal */
export const BulkCollaboratorItemStatus$inboundSchema: z.ZodNativeEnum<
  typeof BulkCollaboratorItemStatus
> = z.nativeEnum(BulkCollaboratorItemStatus);

/** @internal */
export const BulkCollaboratorItemStatus$outboundSchema: z.ZodNativeEnum<
  typeof BulkCollaboratorItemStatus
> = BulkCollaboratorItemStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkCollaboratorItemStatus$ {
  /** @deprecated use `BulkCollaboratorItemStatus$inboundSchema` instead. */
  export const inboundSchema = BulkCollaboratorItemStatus$inboundSchema;
  /** @deprecated use `BulkCollaboratorItemStatus$outboundSchema` instead. */
  export const outboundSchema = BulkCollaboratorItemStatus$outboundSchema;
}

/** @internal */
export const BulkCollaboratorItem$inboundSchema: z.ZodType<
  BulkCollaboratorItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  bulkCollaboratorBatchId: z.string(),
  bulkCollaboratorItemId: z.string(),
  clientId: z.string(),
  collaboratorGroupId: z.nullable(z.string()).optional(),
  collaboratorId: z.nullable(z.string()).optional(),
  collaboratorStatus: CollaboratorStatus$inboundSchema,
  company: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  email: z.nullable(z.string()).optional(),
  eventActors: z.record(z.string()),
  externalId: z.nullable(z.string()).optional(),
  firstLastName: z.nullable(z.string()).optional(),
  formW9Data: z.nullable(MemberClientFormW9Info$inboundSchema).optional(),
  labels: z.record(z.string()),
  memberId: z.nullable(z.string()).optional(),
  metadata: z.nullable(
    Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1$inboundSchema,
  ).optional(),
  orgSubAccountId: z.nullable(z.string()).optional(),
  status: BulkCollaboratorItemStatus$inboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$inboundSchema,
});

/** @internal */
export type BulkCollaboratorItem$Outbound = {
  bulkCollaboratorBatchId: string;
  bulkCollaboratorItemId: string;
  clientId: string;
  collaboratorGroupId?: string | null | undefined;
  collaboratorId?: string | null | undefined;
  collaboratorStatus: string;
  company?: string | null | undefined;
  createdAt: string;
  email?: string | null | undefined;
  eventActors: { [k: string]: string };
  externalId?: string | null | undefined;
  firstLastName?: string | null | undefined;
  formW9Data?: MemberClientFormW9Info$Outbound | null | undefined;
  labels: { [k: string]: string };
  memberId?: string | null | undefined;
  metadata?:
    | Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1$Outbound
    | null
    | undefined;
  orgSubAccountId?: string | null | undefined;
  status: string;
  updatedAt: string;
  userRoles: UserRoles$Outbound;
};

/** @internal */
export const BulkCollaboratorItem$outboundSchema: z.ZodType<
  BulkCollaboratorItem$Outbound,
  z.ZodTypeDef,
  BulkCollaboratorItem
> = z.object({
  bulkCollaboratorBatchId: z.string(),
  bulkCollaboratorItemId: z.string(),
  clientId: z.string(),
  collaboratorGroupId: z.nullable(z.string()).optional(),
  collaboratorId: z.nullable(z.string()).optional(),
  collaboratorStatus: CollaboratorStatus$outboundSchema,
  company: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  email: z.nullable(z.string()).optional(),
  eventActors: z.record(z.string()),
  externalId: z.nullable(z.string()).optional(),
  firstLastName: z.nullable(z.string()).optional(),
  formW9Data: z.nullable(MemberClientFormW9Info$outboundSchema).optional(),
  labels: z.record(z.string()),
  memberId: z.nullable(z.string()).optional(),
  metadata: z.nullable(
    Eightcf19a7bc90727398c2780566a4070199559f4723ec14c01c448dc0356efffa1$outboundSchema,
  ).optional(),
  orgSubAccountId: z.nullable(z.string()).optional(),
  status: BulkCollaboratorItemStatus$outboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkCollaboratorItem$ {
  /** @deprecated use `BulkCollaboratorItem$inboundSchema` instead. */
  export const inboundSchema = BulkCollaboratorItem$inboundSchema;
  /** @deprecated use `BulkCollaboratorItem$outboundSchema` instead. */
  export const outboundSchema = BulkCollaboratorItem$outboundSchema;
  /** @deprecated use `BulkCollaboratorItem$Outbound` instead. */
  export type Outbound = BulkCollaboratorItem$Outbound;
}

export function bulkCollaboratorItemToJSON(
  bulkCollaboratorItem: BulkCollaboratorItem,
): string {
  return JSON.stringify(
    BulkCollaboratorItem$outboundSchema.parse(bulkCollaboratorItem),
  );
}

export function bulkCollaboratorItemFromJSON(
  jsonString: string,
): SafeParseResult<BulkCollaboratorItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkCollaboratorItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkCollaboratorItem' from JSON`,
  );
}
