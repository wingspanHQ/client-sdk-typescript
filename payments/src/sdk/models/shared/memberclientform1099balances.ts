/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5,
    Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$,
} from "./eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5";
import { Form1099Correction, Form1099Correction$ } from "./form1099correction";
import { Form1099Events, Form1099Events$ } from "./form1099events";
import { z } from "zod";

export enum MemberClientForm1099BalancesDeliveryMethod {
    Electronic = "Electronic",
    Mail = "Mail",
}

export enum ExclusionReason {
    BelowThreshold = "BelowThreshold",
    CompanyStructure = "CompanyStructure",
    NonUsEntity = "NonUsEntity",
}

export enum MemberClientForm1099BalancesStatus {
    Ready = "Ready",
    NeedsActionInfo = "NeedsActionInfo",
    NeedsActionDispute = "NeedsActionDispute",
    Submitted = "Submitted",
    Rejected = "Rejected",
    Accepted = "Accepted",
    Excluded = "Excluded",
}

export type TaxForm = {};

export enum MemberClientForm1099BalancesType {
    Nec = "NEC",
}

export type MemberClientForm1099Balances = {
    adjustments: number;
    correction?: Form1099Correction | null | undefined;
    deliveryMethod: MemberClientForm1099BalancesDeliveryMethod;
    dispute?:
        | Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5
        | null
        | undefined;
    events?: Form1099Events | null | undefined;
    exclusionReason: ExclusionReason;
    form1099Generated: boolean;
    paymentProcessingFees: number;
    platformIncome: number;
    status: MemberClientForm1099BalancesStatus;
    taxForm?: TaxForm | null | undefined;
    taxFormId?: string | null | undefined;
    type: MemberClientForm1099BalancesType;
};

/** @internal */
export const MemberClientForm1099BalancesDeliveryMethod$ = z.nativeEnum(
    MemberClientForm1099BalancesDeliveryMethod
);

/** @internal */
export const ExclusionReason$ = z.nativeEnum(ExclusionReason);

/** @internal */
export const MemberClientForm1099BalancesStatus$ = z.nativeEnum(MemberClientForm1099BalancesStatus);

/** @internal */
export namespace TaxForm$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<TaxForm, z.ZodTypeDef, Inbound> = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaxForm> = z.object({});
}

/** @internal */
export const MemberClientForm1099BalancesType$ = z.nativeEnum(MemberClientForm1099BalancesType);

/** @internal */
export namespace MemberClientForm1099Balances$ {
    export type Inbound = {
        adjustments: number;
        correction?: Form1099Correction$.Inbound | null | undefined;
        deliveryMethod: MemberClientForm1099BalancesDeliveryMethod;
        dispute?:
            | Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$.Inbound
            | null
            | undefined;
        events?: Form1099Events$.Inbound | null | undefined;
        exclusionReason: ExclusionReason;
        form1099Generated: boolean;
        paymentProcessingFees: number;
        platformIncome: number;
        status: MemberClientForm1099BalancesStatus;
        taxForm?: TaxForm$.Inbound | null | undefined;
        taxFormId?: string | null | undefined;
        type: MemberClientForm1099BalancesType;
    };

    export const inboundSchema: z.ZodType<MemberClientForm1099Balances, z.ZodTypeDef, Inbound> = z
        .object({
            adjustments: z.number(),
            correction: Form1099Correction$.inboundSchema.nullable().optional(),
            deliveryMethod: MemberClientForm1099BalancesDeliveryMethod$,
            dispute:
                Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$.inboundSchema
                    .nullable()
                    .optional(),
            events: Form1099Events$.inboundSchema.nullable().optional(),
            exclusionReason: ExclusionReason$,
            form1099Generated: z.boolean(),
            paymentProcessingFees: z.number(),
            platformIncome: z.number(),
            status: MemberClientForm1099BalancesStatus$,
            taxForm: z
                .lazy(() => TaxForm$.inboundSchema)
                .nullable()
                .optional(),
            taxFormId: z.string().nullable().optional(),
            type: MemberClientForm1099BalancesType$,
        })
        .transform((v) => {
            return {
                adjustments: v.adjustments,
                ...(v.correction === undefined ? null : { correction: v.correction }),
                deliveryMethod: v.deliveryMethod,
                ...(v.dispute === undefined ? null : { dispute: v.dispute }),
                ...(v.events === undefined ? null : { events: v.events }),
                exclusionReason: v.exclusionReason,
                form1099Generated: v.form1099Generated,
                paymentProcessingFees: v.paymentProcessingFees,
                platformIncome: v.platformIncome,
                status: v.status,
                ...(v.taxForm === undefined ? null : { taxForm: v.taxForm }),
                ...(v.taxFormId === undefined ? null : { taxFormId: v.taxFormId }),
                type: v.type,
            };
        });

    export type Outbound = {
        adjustments: number;
        correction?: Form1099Correction$.Outbound | null | undefined;
        deliveryMethod: MemberClientForm1099BalancesDeliveryMethod;
        dispute?:
            | Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$.Outbound
            | null
            | undefined;
        events?: Form1099Events$.Outbound | null | undefined;
        exclusionReason: ExclusionReason;
        form1099Generated: boolean;
        paymentProcessingFees: number;
        platformIncome: number;
        status: MemberClientForm1099BalancesStatus;
        taxForm?: TaxForm$.Outbound | null | undefined;
        taxFormId?: string | null | undefined;
        type: MemberClientForm1099BalancesType;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberClientForm1099Balances> = z
        .object({
            adjustments: z.number(),
            correction: Form1099Correction$.outboundSchema.nullable().optional(),
            deliveryMethod: MemberClientForm1099BalancesDeliveryMethod$,
            dispute:
                Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$.outboundSchema
                    .nullable()
                    .optional(),
            events: Form1099Events$.outboundSchema.nullable().optional(),
            exclusionReason: ExclusionReason$,
            form1099Generated: z.boolean(),
            paymentProcessingFees: z.number(),
            platformIncome: z.number(),
            status: MemberClientForm1099BalancesStatus$,
            taxForm: z
                .lazy(() => TaxForm$.outboundSchema)
                .nullable()
                .optional(),
            taxFormId: z.string().nullable().optional(),
            type: MemberClientForm1099BalancesType$,
        })
        .transform((v) => {
            return {
                adjustments: v.adjustments,
                ...(v.correction === undefined ? null : { correction: v.correction }),
                deliveryMethod: v.deliveryMethod,
                ...(v.dispute === undefined ? null : { dispute: v.dispute }),
                ...(v.events === undefined ? null : { events: v.events }),
                exclusionReason: v.exclusionReason,
                form1099Generated: v.form1099Generated,
                paymentProcessingFees: v.paymentProcessingFees,
                platformIncome: v.platformIncome,
                status: v.status,
                ...(v.taxForm === undefined ? null : { taxForm: v.taxForm }),
                ...(v.taxFormId === undefined ? null : { taxFormId: v.taxFormId }),
                type: v.type,
            };
        });
}
