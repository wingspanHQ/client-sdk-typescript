/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f,
    Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f$inboundSchema,
    Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f$Outbound,
    Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f$outboundSchema,
} from "./eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f.js";
import {
    Form1099Correction,
    Form1099Correction$inboundSchema,
    Form1099Correction$Outbound,
    Form1099Correction$outboundSchema,
} from "./form1099correction.js";
import {
    RecipientVerification,
    RecipientVerification$inboundSchema,
    RecipientVerification$Outbound,
    RecipientVerification$outboundSchema,
} from "./recipientverification.js";
import {
    RedactedMember,
    RedactedMember$inboundSchema,
    RedactedMember$Outbound,
    RedactedMember$outboundSchema,
} from "./redactedmember.js";
import {
    TaxFormEvents,
    TaxFormEvents$inboundSchema,
    TaxFormEvents$Outbound,
    TaxFormEvents$outboundSchema,
} from "./taxformevents.js";
import {
    TaxFormRedactedEvent,
    TaxFormRedactedEvent$inboundSchema,
    TaxFormRedactedEvent$Outbound,
    TaxFormRedactedEvent$outboundSchema,
} from "./taxformredactedevent.js";
import {
    TaxFormRedactedSubmissionData,
    TaxFormRedactedSubmissionData$inboundSchema,
    TaxFormRedactedSubmissionData$Outbound,
    TaxFormRedactedSubmissionData$outboundSchema,
} from "./taxformredactedsubmissiondata.js";
import {
    TaxFormSubmission,
    TaxFormSubmission$inboundSchema,
    TaxFormSubmission$Outbound,
    TaxFormSubmission$outboundSchema,
} from "./taxformsubmission.js";
import {
    TinVerification,
    TinVerification$inboundSchema,
    TinVerification$Outbound,
    TinVerification$outboundSchema,
} from "./tinverification.js";
import {
    UserRoles,
    UserRoles$inboundSchema,
    UserRoles$Outbound,
    UserRoles$outboundSchema,
} from "./userroles.js";
import * as z from "zod";

export const PayerTaxFormResponseDeliveryMethod = {
    Electronic: "Electronic",
    Mail: "Mail",
} as const;
export type PayerTaxFormResponseDeliveryMethod = ClosedEnum<
    typeof PayerTaxFormResponseDeliveryMethod
>;

export type DeprecatedTaxForm = {};

export const PayerTaxFormResponseStatus = {
    Pending: "Pending",
    ReadyToSubmitToIrs: "ReadyToSubmitToIrs",
    SubmittedToIrs: "SubmittedToIrs",
    AcceptedByIrs: "AcceptedByIrs",
    RejectedByIrs: "RejectedByIrs",
    PendingCorrection: "PendingCorrection",
    Excluded: "Excluded",
    Ineligible: "Ineligible",
} as const;
export type PayerTaxFormResponseStatus = ClosedEnum<typeof PayerTaxFormResponseStatus>;

export const PayerTaxFormResponseType = {
    Form1099Nec: "Form1099Nec",
} as const;
export type PayerTaxFormResponseType = ClosedEnum<typeof PayerTaxFormResponseType>;

export type PayerTaxFormResponse = {
    activeSubmissionId: string;
    adjustments: number;
    clientId: string;
    correction?: Form1099Correction | null | undefined;
    createdAt: string;
    data: TaxFormRedactedSubmissionData;
    deliveryMethod: PayerTaxFormResponseDeliveryMethod;
    deprecatedTaxForm: DeprecatedTaxForm;
    eventActors: { [k: string]: string };
    eventHistory: Array<TaxFormRedactedEvent>;
    events?: TaxFormEvents | null | undefined;
    filingStateCode: string;
    labels: { [k: string]: string };
    memberEmail?: string | null | undefined;
    memberExternalId?: string | null | undefined;
    memberId: string;
    payee?: RedactedMember | null | undefined;
    payer?: RedactedMember | null | undefined;
    payerConfirmedW9Info?: boolean | null | undefined;
    payerPayee?:
        | Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f
        | null
        | undefined;
    payerPayeeId: string;
    paymentProcessingFees: number;
    platformIncome: number;
    recipientConfirmedW9Info: boolean;
    recipientReadyToSubmitW9: boolean;
    recipientSyncEnabled: boolean;
    recipientVerification?: RecipientVerification | null | undefined;
    status: PayerTaxFormResponseStatus;
    submissions: Array<TaxFormSubmission>;
    taxFormId: string;
    tinVerification?: TinVerification | null | undefined;
    type: PayerTaxFormResponseType;
    unsyncedRecipientData?: TaxFormRedactedSubmissionData | null | undefined;
    unsyncedUpdateAvailable?: boolean | null | undefined;
    updatedAt: string;
    userRoles: UserRoles;
    year: number;
};

/** @internal */
export const PayerTaxFormResponseDeliveryMethod$inboundSchema: z.ZodNativeEnum<
    typeof PayerTaxFormResponseDeliveryMethod
> = z.nativeEnum(PayerTaxFormResponseDeliveryMethod);

/** @internal */
export const PayerTaxFormResponseDeliveryMethod$outboundSchema: z.ZodNativeEnum<
    typeof PayerTaxFormResponseDeliveryMethod
> = PayerTaxFormResponseDeliveryMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayerTaxFormResponseDeliveryMethod$ {
    /** @deprecated use `PayerTaxFormResponseDeliveryMethod$inboundSchema` instead. */
    export const inboundSchema = PayerTaxFormResponseDeliveryMethod$inboundSchema;
    /** @deprecated use `PayerTaxFormResponseDeliveryMethod$outboundSchema` instead. */
    export const outboundSchema = PayerTaxFormResponseDeliveryMethod$outboundSchema;
}

/** @internal */
export const DeprecatedTaxForm$inboundSchema: z.ZodType<DeprecatedTaxForm, z.ZodTypeDef, unknown> =
    z.object({});

/** @internal */
export type DeprecatedTaxForm$Outbound = {};

/** @internal */
export const DeprecatedTaxForm$outboundSchema: z.ZodType<
    DeprecatedTaxForm$Outbound,
    z.ZodTypeDef,
    DeprecatedTaxForm
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeprecatedTaxForm$ {
    /** @deprecated use `DeprecatedTaxForm$inboundSchema` instead. */
    export const inboundSchema = DeprecatedTaxForm$inboundSchema;
    /** @deprecated use `DeprecatedTaxForm$outboundSchema` instead. */
    export const outboundSchema = DeprecatedTaxForm$outboundSchema;
    /** @deprecated use `DeprecatedTaxForm$Outbound` instead. */
    export type Outbound = DeprecatedTaxForm$Outbound;
}

/** @internal */
export const PayerTaxFormResponseStatus$inboundSchema: z.ZodNativeEnum<
    typeof PayerTaxFormResponseStatus
> = z.nativeEnum(PayerTaxFormResponseStatus);

/** @internal */
export const PayerTaxFormResponseStatus$outboundSchema: z.ZodNativeEnum<
    typeof PayerTaxFormResponseStatus
> = PayerTaxFormResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayerTaxFormResponseStatus$ {
    /** @deprecated use `PayerTaxFormResponseStatus$inboundSchema` instead. */
    export const inboundSchema = PayerTaxFormResponseStatus$inboundSchema;
    /** @deprecated use `PayerTaxFormResponseStatus$outboundSchema` instead. */
    export const outboundSchema = PayerTaxFormResponseStatus$outboundSchema;
}

/** @internal */
export const PayerTaxFormResponseType$inboundSchema: z.ZodNativeEnum<
    typeof PayerTaxFormResponseType
> = z.nativeEnum(PayerTaxFormResponseType);

/** @internal */
export const PayerTaxFormResponseType$outboundSchema: z.ZodNativeEnum<
    typeof PayerTaxFormResponseType
> = PayerTaxFormResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayerTaxFormResponseType$ {
    /** @deprecated use `PayerTaxFormResponseType$inboundSchema` instead. */
    export const inboundSchema = PayerTaxFormResponseType$inboundSchema;
    /** @deprecated use `PayerTaxFormResponseType$outboundSchema` instead. */
    export const outboundSchema = PayerTaxFormResponseType$outboundSchema;
}

/** @internal */
export const PayerTaxFormResponse$inboundSchema: z.ZodType<
    PayerTaxFormResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    activeSubmissionId: z.string(),
    adjustments: z.number(),
    clientId: z.string(),
    correction: z.nullable(Form1099Correction$inboundSchema).optional(),
    createdAt: z.string(),
    data: TaxFormRedactedSubmissionData$inboundSchema,
    deliveryMethod: PayerTaxFormResponseDeliveryMethod$inboundSchema,
    deprecatedTaxForm: z.lazy(() => DeprecatedTaxForm$inboundSchema),
    eventActors: z.record(z.string()),
    eventHistory: z.array(TaxFormRedactedEvent$inboundSchema),
    events: z.nullable(TaxFormEvents$inboundSchema).optional(),
    filingStateCode: z.string(),
    labels: z.record(z.string()),
    memberEmail: z.nullable(z.string()).optional(),
    memberExternalId: z.nullable(z.string()).optional(),
    memberId: z.string(),
    payee: z.nullable(RedactedMember$inboundSchema).optional(),
    payer: z.nullable(RedactedMember$inboundSchema).optional(),
    payerConfirmedW9Info: z.nullable(z.boolean()).optional(),
    payerPayee: z
        .nullable(
            Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f$inboundSchema
        )
        .optional(),
    payerPayeeId: z.string(),
    paymentProcessingFees: z.number(),
    platformIncome: z.number(),
    recipientConfirmedW9Info: z.boolean(),
    recipientReadyToSubmitW9: z.boolean(),
    recipientSyncEnabled: z.boolean(),
    recipientVerification: z.nullable(RecipientVerification$inboundSchema).optional(),
    status: PayerTaxFormResponseStatus$inboundSchema,
    submissions: z.array(TaxFormSubmission$inboundSchema),
    taxFormId: z.string(),
    tinVerification: z.nullable(TinVerification$inboundSchema).optional(),
    type: PayerTaxFormResponseType$inboundSchema,
    unsyncedRecipientData: z.nullable(TaxFormRedactedSubmissionData$inboundSchema).optional(),
    unsyncedUpdateAvailable: z.nullable(z.boolean()).optional(),
    updatedAt: z.string(),
    userRoles: UserRoles$inboundSchema,
    year: z.number(),
});

/** @internal */
export type PayerTaxFormResponse$Outbound = {
    activeSubmissionId: string;
    adjustments: number;
    clientId: string;
    correction?: Form1099Correction$Outbound | null | undefined;
    createdAt: string;
    data: TaxFormRedactedSubmissionData$Outbound;
    deliveryMethod: string;
    deprecatedTaxForm: DeprecatedTaxForm$Outbound;
    eventActors: { [k: string]: string };
    eventHistory: Array<TaxFormRedactedEvent$Outbound>;
    events?: TaxFormEvents$Outbound | null | undefined;
    filingStateCode: string;
    labels: { [k: string]: string };
    memberEmail?: string | null | undefined;
    memberExternalId?: string | null | undefined;
    memberId: string;
    payee?: RedactedMember$Outbound | null | undefined;
    payer?: RedactedMember$Outbound | null | undefined;
    payerConfirmedW9Info?: boolean | null | undefined;
    payerPayee?:
        | Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f$Outbound
        | null
        | undefined;
    payerPayeeId: string;
    paymentProcessingFees: number;
    platformIncome: number;
    recipientConfirmedW9Info: boolean;
    recipientReadyToSubmitW9: boolean;
    recipientSyncEnabled: boolean;
    recipientVerification?: RecipientVerification$Outbound | null | undefined;
    status: string;
    submissions: Array<TaxFormSubmission$Outbound>;
    taxFormId: string;
    tinVerification?: TinVerification$Outbound | null | undefined;
    type: string;
    unsyncedRecipientData?: TaxFormRedactedSubmissionData$Outbound | null | undefined;
    unsyncedUpdateAvailable?: boolean | null | undefined;
    updatedAt: string;
    userRoles: UserRoles$Outbound;
    year: number;
};

/** @internal */
export const PayerTaxFormResponse$outboundSchema: z.ZodType<
    PayerTaxFormResponse$Outbound,
    z.ZodTypeDef,
    PayerTaxFormResponse
> = z.object({
    activeSubmissionId: z.string(),
    adjustments: z.number(),
    clientId: z.string(),
    correction: z.nullable(Form1099Correction$outboundSchema).optional(),
    createdAt: z.string(),
    data: TaxFormRedactedSubmissionData$outboundSchema,
    deliveryMethod: PayerTaxFormResponseDeliveryMethod$outboundSchema,
    deprecatedTaxForm: z.lazy(() => DeprecatedTaxForm$outboundSchema),
    eventActors: z.record(z.string()),
    eventHistory: z.array(TaxFormRedactedEvent$outboundSchema),
    events: z.nullable(TaxFormEvents$outboundSchema).optional(),
    filingStateCode: z.string(),
    labels: z.record(z.string()),
    memberEmail: z.nullable(z.string()).optional(),
    memberExternalId: z.nullable(z.string()).optional(),
    memberId: z.string(),
    payee: z.nullable(RedactedMember$outboundSchema).optional(),
    payer: z.nullable(RedactedMember$outboundSchema).optional(),
    payerConfirmedW9Info: z.nullable(z.boolean()).optional(),
    payerPayee: z
        .nullable(
            Eightd013dd0cdafb98addfde478aafc44fc8914592071f79bc8d2aa0096744c099f$outboundSchema
        )
        .optional(),
    payerPayeeId: z.string(),
    paymentProcessingFees: z.number(),
    platformIncome: z.number(),
    recipientConfirmedW9Info: z.boolean(),
    recipientReadyToSubmitW9: z.boolean(),
    recipientSyncEnabled: z.boolean(),
    recipientVerification: z.nullable(RecipientVerification$outboundSchema).optional(),
    status: PayerTaxFormResponseStatus$outboundSchema,
    submissions: z.array(TaxFormSubmission$outboundSchema),
    taxFormId: z.string(),
    tinVerification: z.nullable(TinVerification$outboundSchema).optional(),
    type: PayerTaxFormResponseType$outboundSchema,
    unsyncedRecipientData: z.nullable(TaxFormRedactedSubmissionData$outboundSchema).optional(),
    unsyncedUpdateAvailable: z.nullable(z.boolean()).optional(),
    updatedAt: z.string(),
    userRoles: UserRoles$outboundSchema,
    year: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayerTaxFormResponse$ {
    /** @deprecated use `PayerTaxFormResponse$inboundSchema` instead. */
    export const inboundSchema = PayerTaxFormResponse$inboundSchema;
    /** @deprecated use `PayerTaxFormResponse$outboundSchema` instead. */
    export const outboundSchema = PayerTaxFormResponse$outboundSchema;
    /** @deprecated use `PayerTaxFormResponse$Outbound` instead. */
    export type Outbound = PayerTaxFormResponse$Outbound;
}
