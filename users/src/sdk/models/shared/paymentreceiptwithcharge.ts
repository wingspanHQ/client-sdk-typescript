/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Charge } from "./charge";
import { Expose, Type } from "class-transformer";

export enum PaymentReceiptWithChargeInvoiceStatus {
    Draft = "draft",
    Open = "open",
    Paid = "paid",
    Uncollectible = "uncollectible",
    Void = "void",
}

export class PaymentReceiptWithCharge extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amountPaid" })
    amountPaid: number;

    @SpeakeasyMetadata()
    @Expose({ name: "charge" })
    @Type(() => Charge)
    charge: Charge;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceId" })
    invoiceId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "invoicePdf" })
    invoicePdf: string;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceStatus" })
    invoiceStatus: PaymentReceiptWithChargeInvoiceStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "nextPaymentAttempt" })
    nextPaymentAttempt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "paidAt" })
    paidAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "periodEnd" })
    periodEnd: string;

    @SpeakeasyMetadata()
    @Expose({ name: "periodStart" })
    periodStart: string;

    @SpeakeasyMetadata()
    @Expose({ name: "startingBalance" })
    startingBalance: number;
}
