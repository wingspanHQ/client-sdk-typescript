/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClientInvoice } from "./clientinvoice";
import { Frequency } from "./frequency";
import { ScheduleDate } from "./scheduledate";
import { Expose, Type } from "class-transformer";

export enum ClientInvoiceTemplateStatus {
    Active = "Active",
    Draft = "Draft",
    Expired = "Expired",
    Cancelled = "Cancelled",
}

export class ClientInvoiceTemplate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "accountId" })
    accountId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdInvoiceId" })
    createdInvoiceId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dueInDays" })
    dueInDays?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "frequency" })
    @Type(() => Frequency)
    frequency?: Frequency;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceData" })
    @Type(() => ClientInvoice)
    invoiceData: ClientInvoice;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceTemplateId" })
    invoiceTemplateId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "memberId" })
    memberId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "nextInvoiceDate" })
    nextInvoiceDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "paymentMethodId" })
    paymentMethodId?: string;

    @SpeakeasyMetadata({ elemType: ScheduleDate })
    @Expose({ name: "scheduleDates" })
    @Type(() => ScheduleDate)
    scheduleDates: ScheduleDate[];

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: ClientInvoiceTemplateStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;
}
