/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c,
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$inboundSchema,
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$Outbound,
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$outboundSchema,
} from "./b9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c.js";
import {
    ClientData,
    ClientData$inboundSchema,
    ClientData$Outbound,
    ClientData$outboundSchema,
} from "./clientdata.js";
import {
    ExternalIds,
    ExternalIds$inboundSchema,
    ExternalIds$Outbound,
    ExternalIds$outboundSchema,
} from "./externalids.js";
import {
    MemberClientEvents,
    MemberClientEvents$inboundSchema,
    MemberClientEvents$Outbound,
    MemberClientEvents$outboundSchema,
} from "./memberclientevents.js";
import {
    MemberClientFormW9Info,
    MemberClientFormW9Info$inboundSchema,
    MemberClientFormW9Info$Outbound,
    MemberClientFormW9Info$outboundSchema,
} from "./memberclientformw9info.js";
import {
    MemberClientRequirementResponse,
    MemberClientRequirementResponse$inboundSchema,
    MemberClientRequirementResponse$Outbound,
    MemberClientRequirementResponse$outboundSchema,
} from "./memberclientrequirementresponse.js";
import {
    MemberClientWireAccount,
    MemberClientWireAccount$inboundSchema,
    MemberClientWireAccount$Outbound,
    MemberClientWireAccount$outboundSchema,
} from "./memberclientwireaccount.js";
import {
    MemberData,
    MemberData$inboundSchema,
    MemberData$Outbound,
    MemberData$outboundSchema,
} from "./memberdata.js";
import {
    RedactedMember,
    RedactedMember$inboundSchema,
    RedactedMember$Outbound,
    RedactedMember$outboundSchema,
} from "./redactedmember.js";
import {
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f,
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$inboundSchema,
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$Outbound,
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$outboundSchema,
} from "./threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f.js";
import {
    UserRoles,
    UserRoles$inboundSchema,
    UserRoles$Outbound,
    UserRoles$outboundSchema,
} from "./userroles.js";
import * as z from "zod";

export const ClientUserAccountType = {
    Member: "member",
    Enterprise: "enterprise",
} as const;
export type ClientUserAccountType = ClosedEnum<typeof ClientUserAccountType>;

export const MemberClientStatus = {
    Active: "Active",
    Inactive: "Inactive",
    Pending: "Pending",
} as const;
export type MemberClientStatus = ClosedEnum<typeof MemberClientStatus>;

export const MemberClientTaxStatus = {
    Complete: "Complete",
    Failed: "Failed",
    Pending: "Pending",
    Incomplete: "Incomplete",
} as const;
export type MemberClientTaxStatus = ClosedEnum<typeof MemberClientTaxStatus>;

export type MemberClient = {
    achCreditAccount: MemberClientWireAccount;
    client: RedactedMember;
    clientData: ClientData;
    clientId: string;
    clientUserAccountType: ClientUserAccountType;
    collaboratorGroupId?: string | null | undefined;
    collaboratorGroupIds?: Array<string> | null | undefined;
    company?: string | null | undefined;
    createdAt: string;
    eligibilityRequirements?: Array<MemberClientRequirementResponse> | null | undefined;
    emailCC?: Array<string> | null | undefined;
    emailTo: string;
    eventActors: { [k: string]: string };
    events: MemberClientEvents;
    externalIds: ExternalIds;
    form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c;
    formW9Data: MemberClientFormW9Info;
    integration?:
        | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f
        | null
        | undefined;
    internationalWireAccount: MemberClientWireAccount;
    labels: { [k: string]: string };
    member: RedactedMember;
    memberClientId: string;
    memberData: MemberData;
    memberId: string;
    name?: string | null | undefined;
    parentMemberClientId: string;
    payerPayeeId: string;
    status: MemberClientStatus;
    taxStatus: MemberClientTaxStatus;
    updatedAt: string;
    userRoles: UserRoles;
};

/** @internal */
export const ClientUserAccountType$inboundSchema: z.ZodNativeEnum<typeof ClientUserAccountType> =
    z.nativeEnum(ClientUserAccountType);

/** @internal */
export const ClientUserAccountType$outboundSchema: z.ZodNativeEnum<typeof ClientUserAccountType> =
    ClientUserAccountType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientUserAccountType$ {
    /** @deprecated use `ClientUserAccountType$inboundSchema` instead. */
    export const inboundSchema = ClientUserAccountType$inboundSchema;
    /** @deprecated use `ClientUserAccountType$outboundSchema` instead. */
    export const outboundSchema = ClientUserAccountType$outboundSchema;
}

/** @internal */
export const MemberClientStatus$inboundSchema: z.ZodNativeEnum<typeof MemberClientStatus> =
    z.nativeEnum(MemberClientStatus);

/** @internal */
export const MemberClientStatus$outboundSchema: z.ZodNativeEnum<typeof MemberClientStatus> =
    MemberClientStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientStatus$ {
    /** @deprecated use `MemberClientStatus$inboundSchema` instead. */
    export const inboundSchema = MemberClientStatus$inboundSchema;
    /** @deprecated use `MemberClientStatus$outboundSchema` instead. */
    export const outboundSchema = MemberClientStatus$outboundSchema;
}

/** @internal */
export const MemberClientTaxStatus$inboundSchema: z.ZodNativeEnum<typeof MemberClientTaxStatus> =
    z.nativeEnum(MemberClientTaxStatus);

/** @internal */
export const MemberClientTaxStatus$outboundSchema: z.ZodNativeEnum<typeof MemberClientTaxStatus> =
    MemberClientTaxStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientTaxStatus$ {
    /** @deprecated use `MemberClientTaxStatus$inboundSchema` instead. */
    export const inboundSchema = MemberClientTaxStatus$inboundSchema;
    /** @deprecated use `MemberClientTaxStatus$outboundSchema` instead. */
    export const outboundSchema = MemberClientTaxStatus$outboundSchema;
}

/** @internal */
export const MemberClient$inboundSchema: z.ZodType<MemberClient, z.ZodTypeDef, unknown> = z.object({
    achCreditAccount: MemberClientWireAccount$inboundSchema,
    client: RedactedMember$inboundSchema,
    clientData: ClientData$inboundSchema,
    clientId: z.string(),
    clientUserAccountType: ClientUserAccountType$inboundSchema,
    collaboratorGroupId: z.nullable(z.string()).optional(),
    collaboratorGroupIds: z.nullable(z.array(z.string())).optional(),
    company: z.nullable(z.string()).optional(),
    createdAt: z.string(),
    eligibilityRequirements: z
        .nullable(z.array(MemberClientRequirementResponse$inboundSchema))
        .optional(),
    emailCC: z.nullable(z.array(z.string())).optional(),
    emailTo: z.string(),
    eventActors: z.record(z.string()),
    events: MemberClientEvents$inboundSchema,
    externalIds: ExternalIds$inboundSchema,
    form1099Balances:
        B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$inboundSchema,
    formW9Data: MemberClientFormW9Info$inboundSchema,
    integration: z
        .nullable(
            Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$inboundSchema
        )
        .optional(),
    internationalWireAccount: MemberClientWireAccount$inboundSchema,
    labels: z.record(z.string()),
    member: RedactedMember$inboundSchema,
    memberClientId: z.string(),
    memberData: MemberData$inboundSchema,
    memberId: z.string(),
    name: z.nullable(z.string()).optional(),
    parentMemberClientId: z.string(),
    payerPayeeId: z.string(),
    status: MemberClientStatus$inboundSchema,
    taxStatus: MemberClientTaxStatus$inboundSchema,
    updatedAt: z.string(),
    userRoles: UserRoles$inboundSchema,
});

/** @internal */
export type MemberClient$Outbound = {
    achCreditAccount: MemberClientWireAccount$Outbound;
    client: RedactedMember$Outbound;
    clientData: ClientData$Outbound;
    clientId: string;
    clientUserAccountType: string;
    collaboratorGroupId?: string | null | undefined;
    collaboratorGroupIds?: Array<string> | null | undefined;
    company?: string | null | undefined;
    createdAt: string;
    eligibilityRequirements?: Array<MemberClientRequirementResponse$Outbound> | null | undefined;
    emailCC?: Array<string> | null | undefined;
    emailTo: string;
    eventActors: { [k: string]: string };
    events: MemberClientEvents$Outbound;
    externalIds: ExternalIds$Outbound;
    form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$Outbound;
    formW9Data: MemberClientFormW9Info$Outbound;
    integration?:
        | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$Outbound
        | null
        | undefined;
    internationalWireAccount: MemberClientWireAccount$Outbound;
    labels: { [k: string]: string };
    member: RedactedMember$Outbound;
    memberClientId: string;
    memberData: MemberData$Outbound;
    memberId: string;
    name?: string | null | undefined;
    parentMemberClientId: string;
    payerPayeeId: string;
    status: string;
    taxStatus: string;
    updatedAt: string;
    userRoles: UserRoles$Outbound;
};

/** @internal */
export const MemberClient$outboundSchema: z.ZodType<
    MemberClient$Outbound,
    z.ZodTypeDef,
    MemberClient
> = z.object({
    achCreditAccount: MemberClientWireAccount$outboundSchema,
    client: RedactedMember$outboundSchema,
    clientData: ClientData$outboundSchema,
    clientId: z.string(),
    clientUserAccountType: ClientUserAccountType$outboundSchema,
    collaboratorGroupId: z.nullable(z.string()).optional(),
    collaboratorGroupIds: z.nullable(z.array(z.string())).optional(),
    company: z.nullable(z.string()).optional(),
    createdAt: z.string(),
    eligibilityRequirements: z
        .nullable(z.array(MemberClientRequirementResponse$outboundSchema))
        .optional(),
    emailCC: z.nullable(z.array(z.string())).optional(),
    emailTo: z.string(),
    eventActors: z.record(z.string()),
    events: MemberClientEvents$outboundSchema,
    externalIds: ExternalIds$outboundSchema,
    form1099Balances:
        B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$outboundSchema,
    formW9Data: MemberClientFormW9Info$outboundSchema,
    integration: z
        .nullable(
            Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$outboundSchema
        )
        .optional(),
    internationalWireAccount: MemberClientWireAccount$outboundSchema,
    labels: z.record(z.string()),
    member: RedactedMember$outboundSchema,
    memberClientId: z.string(),
    memberData: MemberData$outboundSchema,
    memberId: z.string(),
    name: z.nullable(z.string()).optional(),
    parentMemberClientId: z.string(),
    payerPayeeId: z.string(),
    status: MemberClientStatus$outboundSchema,
    taxStatus: MemberClientTaxStatus$outboundSchema,
    updatedAt: z.string(),
    userRoles: UserRoles$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClient$ {
    /** @deprecated use `MemberClient$inboundSchema` instead. */
    export const inboundSchema = MemberClient$inboundSchema;
    /** @deprecated use `MemberClient$outboundSchema` instead. */
    export const outboundSchema = MemberClient$outboundSchema;
    /** @deprecated use `MemberClient$Outbound` instead. */
    export type Outbound = MemberClient$Outbound;
}
