/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum Benefits {
    Disabled = "Disabled",
    Enabled = "Enabled",
    Pending = "Pending",
}

export enum Payments {
    Disabled = "Disabled",
    Enabled = "Enabled",
    Pending = "Pending",
}

export type ServiceStatus = {
    benefits?: Benefits | null | undefined;
    payments?: Payments | null | undefined;
};

/** @internal */
export const Benefits$ = z.nativeEnum(Benefits);

/** @internal */
export const Payments$ = z.nativeEnum(Payments);

/** @internal */
export namespace ServiceStatus$ {
    export type Inbound = {
        benefits?: Benefits | null | undefined;
        payments?: Payments | null | undefined;
    };

    export const inboundSchema: z.ZodType<ServiceStatus, z.ZodTypeDef, Inbound> = z
        .object({
            benefits: z.nullable(Benefits$).optional(),
            payments: z.nullable(Payments$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.benefits === undefined ? null : { benefits: v.benefits }),
                ...(v.payments === undefined ? null : { payments: v.payments }),
            };
        });

    export type Outbound = {
        benefits?: Benefits | null | undefined;
        payments?: Payments | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ServiceStatus> = z
        .object({
            benefits: z.nullable(Benefits$).optional(),
            payments: z.nullable(Payments$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.benefits === undefined ? null : { benefits: v.benefits }),
                ...(v.payments === undefined ? null : { payments: v.payments }),
            };
        });
}
