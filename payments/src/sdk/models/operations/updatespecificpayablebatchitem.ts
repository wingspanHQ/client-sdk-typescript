/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type UpdateSpecificPayableBatchItemRequest = {
    bulkPayableItemUpdate?: shared.BulkPayableItemUpdate | undefined;
    /**
     * Unique identifier for a batch
     */
    batchId: string;
    /**
     * Unique identifier for an item in a batch
     */
    batchItemId: string;
};

export type UpdateSpecificPayableBatchItemResponse = {
    /**
     * An item that will be converted into a payable
     */
    bulkPayableItem?: shared.BulkPayableItem | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const UpdateSpecificPayableBatchItemRequest$inboundSchema: z.ZodType<
    UpdateSpecificPayableBatchItemRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        BulkPayableItemUpdate: shared.BulkPayableItemUpdate$inboundSchema.optional(),
        batchId: z.string(),
        batchItemId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            BulkPayableItemUpdate: "bulkPayableItemUpdate",
        });
    });

/** @internal */
export type UpdateSpecificPayableBatchItemRequest$Outbound = {
    BulkPayableItemUpdate?: shared.BulkPayableItemUpdate$Outbound | undefined;
    batchId: string;
    batchItemId: string;
};

/** @internal */
export const UpdateSpecificPayableBatchItemRequest$outboundSchema: z.ZodType<
    UpdateSpecificPayableBatchItemRequest$Outbound,
    z.ZodTypeDef,
    UpdateSpecificPayableBatchItemRequest
> = z
    .object({
        bulkPayableItemUpdate: shared.BulkPayableItemUpdate$outboundSchema.optional(),
        batchId: z.string(),
        batchItemId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            bulkPayableItemUpdate: "BulkPayableItemUpdate",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSpecificPayableBatchItemRequest$ {
    /** @deprecated use `UpdateSpecificPayableBatchItemRequest$inboundSchema` instead. */
    export const inboundSchema = UpdateSpecificPayableBatchItemRequest$inboundSchema;
    /** @deprecated use `UpdateSpecificPayableBatchItemRequest$outboundSchema` instead. */
    export const outboundSchema = UpdateSpecificPayableBatchItemRequest$outboundSchema;
    /** @deprecated use `UpdateSpecificPayableBatchItemRequest$Outbound` instead. */
    export type Outbound = UpdateSpecificPayableBatchItemRequest$Outbound;
}

/** @internal */
export const UpdateSpecificPayableBatchItemResponse$inboundSchema: z.ZodType<
    UpdateSpecificPayableBatchItemResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        BulkPayableItem: shared.BulkPayableItem$inboundSchema.optional(),
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            BulkPayableItem: "bulkPayableItem",
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type UpdateSpecificPayableBatchItemResponse$Outbound = {
    BulkPayableItem?: shared.BulkPayableItem$Outbound | undefined;
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const UpdateSpecificPayableBatchItemResponse$outboundSchema: z.ZodType<
    UpdateSpecificPayableBatchItemResponse$Outbound,
    z.ZodTypeDef,
    UpdateSpecificPayableBatchItemResponse
> = z
    .object({
        bulkPayableItem: shared.BulkPayableItem$outboundSchema.optional(),
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            bulkPayableItem: "BulkPayableItem",
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateSpecificPayableBatchItemResponse$ {
    /** @deprecated use `UpdateSpecificPayableBatchItemResponse$inboundSchema` instead. */
    export const inboundSchema = UpdateSpecificPayableBatchItemResponse$inboundSchema;
    /** @deprecated use `UpdateSpecificPayableBatchItemResponse$outboundSchema` instead. */
    export const outboundSchema = UpdateSpecificPayableBatchItemResponse$outboundSchema;
    /** @deprecated use `UpdateSpecificPayableBatchItemResponse$Outbound` instead. */
    export type Outbound = UpdateSpecificPayableBatchItemResponse$Outbound;
}
