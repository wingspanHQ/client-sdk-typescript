/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  PayerTaxFormResponse,
  PayerTaxFormResponse$inboundSchema,
  PayerTaxFormResponse$Outbound,
  PayerTaxFormResponse$outboundSchema,
} from "./payertaxformresponse.js";

export type TaxFormResponse =
  | PayerTaxFormResponse
  | Array<PayerTaxFormResponse>;

/** @internal */
export const TaxFormResponse$inboundSchema: z.ZodType<
  TaxFormResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  PayerTaxFormResponse$inboundSchema,
  z.array(PayerTaxFormResponse$inboundSchema),
]);

/** @internal */
export type TaxFormResponse$Outbound =
  | PayerTaxFormResponse$Outbound
  | Array<PayerTaxFormResponse$Outbound>;

/** @internal */
export const TaxFormResponse$outboundSchema: z.ZodType<
  TaxFormResponse$Outbound,
  z.ZodTypeDef,
  TaxFormResponse
> = z.union([
  PayerTaxFormResponse$outboundSchema,
  z.array(PayerTaxFormResponse$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxFormResponse$ {
  /** @deprecated use `TaxFormResponse$inboundSchema` instead. */
  export const inboundSchema = TaxFormResponse$inboundSchema;
  /** @deprecated use `TaxFormResponse$outboundSchema` instead. */
  export const outboundSchema = TaxFormResponse$outboundSchema;
  /** @deprecated use `TaxFormResponse$Outbound` instead. */
  export type Outbound = TaxFormResponse$Outbound;
}
