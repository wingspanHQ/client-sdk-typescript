/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type SessionCreateRequest = {
    email?: string | null | undefined;
    expiration?: string | null | undefined;
    otpExpiration?: string | null | undefined;
    password?: string | null | undefined;
};

/** @internal */
export namespace SessionCreateRequest$ {
    export type Inbound = {
        email?: string | null | undefined;
        expiration?: string | null | undefined;
        otpExpiration?: string | null | undefined;
        password?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<SessionCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.nullable(z.string()).optional(),
            expiration: z.nullable(z.string()).optional(),
            otpExpiration: z.nullable(z.string()).optional(),
            password: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.expiration === undefined ? null : { expiration: v.expiration }),
                ...(v.otpExpiration === undefined ? null : { otpExpiration: v.otpExpiration }),
                ...(v.password === undefined ? null : { password: v.password }),
            };
        });

    export type Outbound = {
        email?: string | null | undefined;
        expiration?: string | null | undefined;
        otpExpiration?: string | null | undefined;
        password?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SessionCreateRequest> = z
        .object({
            email: z.nullable(z.string()).optional(),
            expiration: z.nullable(z.string()).optional(),
            otpExpiration: z.nullable(z.string()).optional(),
            password: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.expiration === undefined ? null : { expiration: v.expiration }),
                ...(v.otpExpiration === undefined ? null : { otpExpiration: v.otpExpiration }),
                ...(v.password === undefined ? null : { password: v.password }),
            };
        });
}
