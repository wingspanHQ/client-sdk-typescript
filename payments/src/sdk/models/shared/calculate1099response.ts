/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  MemberClient,
  MemberClient$inboundSchema,
  MemberClient$Outbound,
  MemberClient$outboundSchema,
} from "./memberclient.js";

export type Calculate1099Response = {
  memberClient: MemberClient;
};

/** @internal */
export const Calculate1099Response$inboundSchema: z.ZodType<
  Calculate1099Response,
  z.ZodTypeDef,
  unknown
> = z.object({
  memberClient: MemberClient$inboundSchema,
});

/** @internal */
export type Calculate1099Response$Outbound = {
  memberClient: MemberClient$Outbound;
};

/** @internal */
export const Calculate1099Response$outboundSchema: z.ZodType<
  Calculate1099Response$Outbound,
  z.ZodTypeDef,
  Calculate1099Response
> = z.object({
  memberClient: MemberClient$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Calculate1099Response$ {
  /** @deprecated use `Calculate1099Response$inboundSchema` instead. */
  export const inboundSchema = Calculate1099Response$inboundSchema;
  /** @deprecated use `Calculate1099Response$outboundSchema` instead. */
  export const outboundSchema = Calculate1099Response$outboundSchema;
  /** @deprecated use `Calculate1099Response$Outbound` instead. */
  export type Outbound = Calculate1099Response$Outbound;
}
