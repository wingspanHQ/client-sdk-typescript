/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum AutoPayRequirement {
    All = "All",
    None = "None",
}

export enum ShareTaxDocument {
    Allow = "Allow",
    Decline = "Decline",
}

export type MemberData = {
    autoPayRequirement?: AutoPayRequirement | null | undefined;
    externalId?: string | null | undefined;
    shareTaxDocument?: ShareTaxDocument | null | undefined;
};

/** @internal */
export const AutoPayRequirement$ = z.nativeEnum(AutoPayRequirement);

/** @internal */
export const ShareTaxDocument$ = z.nativeEnum(ShareTaxDocument);

/** @internal */
export namespace MemberData$ {
    export type Inbound = {
        autoPayRequirement?: AutoPayRequirement | null | undefined;
        externalId?: string | null | undefined;
        shareTaxDocument?: ShareTaxDocument | null | undefined;
    };

    export const inboundSchema: z.ZodType<MemberData, z.ZodTypeDef, Inbound> = z
        .object({
            autoPayRequirement: z.nullable(AutoPayRequirement$).optional(),
            externalId: z.nullable(z.string()).optional(),
            shareTaxDocument: z.nullable(ShareTaxDocument$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.autoPayRequirement === undefined
                    ? null
                    : { autoPayRequirement: v.autoPayRequirement }),
                ...(v.externalId === undefined ? null : { externalId: v.externalId }),
                ...(v.shareTaxDocument === undefined
                    ? null
                    : { shareTaxDocument: v.shareTaxDocument }),
            };
        });

    export type Outbound = {
        autoPayRequirement?: AutoPayRequirement | null | undefined;
        externalId?: string | null | undefined;
        shareTaxDocument?: ShareTaxDocument | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberData> = z
        .object({
            autoPayRequirement: z.nullable(AutoPayRequirement$).optional(),
            externalId: z.nullable(z.string()).optional(),
            shareTaxDocument: z.nullable(ShareTaxDocument$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.autoPayRequirement === undefined
                    ? null
                    : { autoPayRequirement: v.autoPayRequirement }),
                ...(v.externalId === undefined ? null : { externalId: v.externalId }),
                ...(v.shareTaxDocument === undefined
                    ? null
                    : { shareTaxDocument: v.shareTaxDocument }),
            };
        });
}
