/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum WorkflowStatus {
    Pending = "Pending",
    PreApproved = "PreApproved",
    Approved = "Approved",
    PaymentInitiated = "PaymentInitiated",
    Funded = "Funded",
    Declined = "Declined",
    LessThanNilGreaterThan = "<nil>",
}

export enum ClientOptionsWorkflowSubStatus {
    Submitted = "Submitted",
    LessThanNilGreaterThan = "<nil>",
}

export type ClientOptions = {
    comment?: string | null | undefined;
    payDate?: string | null | undefined;
    workflowStatus?: WorkflowStatus | null | undefined;
    workflowSubStatus?: ClientOptionsWorkflowSubStatus | null | undefined;
};

/** @internal */
export const WorkflowStatus$ = z.nativeEnum(WorkflowStatus);

/** @internal */
export const ClientOptionsWorkflowSubStatus$ = z.nativeEnum(ClientOptionsWorkflowSubStatus);

/** @internal */
export namespace ClientOptions$ {
    export type Inbound = {
        comment?: string | null | undefined;
        payDate?: string | null | undefined;
        workflowStatus?: WorkflowStatus | null | undefined;
        workflowSubStatus?: ClientOptionsWorkflowSubStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<ClientOptions, z.ZodTypeDef, Inbound> = z
        .object({
            comment: z.string().nullable().optional(),
            payDate: z.string().nullable().optional(),
            workflowStatus: WorkflowStatus$.nullable().optional(),
            workflowSubStatus: ClientOptionsWorkflowSubStatus$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.comment === undefined ? null : { comment: v.comment }),
                ...(v.payDate === undefined ? null : { payDate: v.payDate }),
                ...(v.workflowStatus === undefined ? null : { workflowStatus: v.workflowStatus }),
                ...(v.workflowSubStatus === undefined
                    ? null
                    : { workflowSubStatus: v.workflowSubStatus }),
            };
        });

    export type Outbound = {
        comment?: string | null | undefined;
        payDate?: string | null | undefined;
        workflowStatus?: WorkflowStatus | null | undefined;
        workflowSubStatus?: ClientOptionsWorkflowSubStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClientOptions> = z
        .object({
            comment: z.string().nullable().optional(),
            payDate: z.string().nullable().optional(),
            workflowStatus: WorkflowStatus$.nullable().optional(),
            workflowSubStatus: ClientOptionsWorkflowSubStatus$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.comment === undefined ? null : { comment: v.comment }),
                ...(v.payDate === undefined ? null : { payDate: v.payDate }),
                ...(v.workflowStatus === undefined ? null : { workflowStatus: v.workflowStatus }),
                ...(v.workflowSubStatus === undefined
                    ? null
                    : { workflowSubStatus: v.workflowSubStatus }),
            };
        });
}
