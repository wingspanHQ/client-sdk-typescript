/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NewUserSettings } from "./newusersettings";
import { UserNotificationSettings } from "./usernotificationsettings";
import { UserProfile } from "./userprofile";
import { Expose, Type } from "class-transformer";

export enum UserCreateRequestStatus {
    Pending = "Pending",
    Active = "Active",
    Disabled = "Disabled",
    LessThanNilGreaterThan = "<nil>",
}

export class UserCreateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email: string;

    @SpeakeasyMetadata()
    @Expose({ name: "notificationSettings" })
    @Type(() => UserNotificationSettings)
    notificationSettings?: UserNotificationSettings;

    @SpeakeasyMetadata()
    @Expose({ name: "password" })
    password?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "profile" })
    @Type(() => UserProfile)
    profile?: UserProfile;

    @SpeakeasyMetadata()
    @Expose({ name: "settings" })
    @Type(() => NewUserSettings)
    settings?: NewUserSettings;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: UserCreateRequestStatus;
}
