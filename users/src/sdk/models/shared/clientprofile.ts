/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Address, Address$ } from "./address";
import { Company, Company$ } from "./company";
import { CreditCard, CreditCard$ } from "./creditcard";
import { DefaultPaymentMethod, DefaultPaymentMethod$ } from "./defaultpaymentmethod";
import { z } from "zod";

export type ClientProfile = {
    address?: Address | null | undefined;
    company?: Company | null | undefined;
    defaultPaymentMethod: DefaultPaymentMethod;
    phone?: string | null | undefined;
    savedPaymentMethods?: Array<CreditCard> | null | undefined;
    subscriptionPaymentMethod: DefaultPaymentMethod;
};

/** @internal */
export namespace ClientProfile$ {
    export type Inbound = {
        address?: Address$.Inbound | null | undefined;
        company?: Company$.Inbound | null | undefined;
        defaultPaymentMethod: DefaultPaymentMethod$.Inbound;
        phone?: string | null | undefined;
        savedPaymentMethods?: Array<CreditCard$.Inbound> | null | undefined;
        subscriptionPaymentMethod: DefaultPaymentMethod$.Inbound;
    };

    export const inboundSchema: z.ZodType<ClientProfile, z.ZodTypeDef, Inbound> = z
        .object({
            address: z.nullable(Address$.inboundSchema).optional(),
            company: z.nullable(Company$.inboundSchema).optional(),
            defaultPaymentMethod: DefaultPaymentMethod$.inboundSchema,
            phone: z.nullable(z.string()).optional(),
            savedPaymentMethods: z.nullable(z.array(CreditCard$.inboundSchema)).optional(),
            subscriptionPaymentMethod: DefaultPaymentMethod$.inboundSchema,
        })
        .transform((v) => {
            return {
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.company === undefined ? null : { company: v.company }),
                defaultPaymentMethod: v.defaultPaymentMethod,
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.savedPaymentMethods === undefined
                    ? null
                    : { savedPaymentMethods: v.savedPaymentMethods }),
                subscriptionPaymentMethod: v.subscriptionPaymentMethod,
            };
        });

    export type Outbound = {
        address?: Address$.Outbound | null | undefined;
        company?: Company$.Outbound | null | undefined;
        defaultPaymentMethod: DefaultPaymentMethod$.Outbound;
        phone?: string | null | undefined;
        savedPaymentMethods?: Array<CreditCard$.Outbound> | null | undefined;
        subscriptionPaymentMethod: DefaultPaymentMethod$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClientProfile> = z
        .object({
            address: z.nullable(Address$.outboundSchema).optional(),
            company: z.nullable(Company$.outboundSchema).optional(),
            defaultPaymentMethod: DefaultPaymentMethod$.outboundSchema,
            phone: z.nullable(z.string()).optional(),
            savedPaymentMethods: z.nullable(z.array(CreditCard$.outboundSchema)).optional(),
            subscriptionPaymentMethod: DefaultPaymentMethod$.outboundSchema,
        })
        .transform((v) => {
            return {
                ...(v.address === undefined ? null : { address: v.address }),
                ...(v.company === undefined ? null : { company: v.company }),
                defaultPaymentMethod: v.defaultPaymentMethod,
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.savedPaymentMethods === undefined
                    ? null
                    : { savedPaymentMethods: v.savedPaymentMethods }),
                subscriptionPaymentMethod: v.subscriptionPaymentMethod,
            };
        });
}
