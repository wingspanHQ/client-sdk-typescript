/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InvoiceFeeCalculation = {
  creditFeeTotal: number;
};

/** @internal */
export const InvoiceFeeCalculation$inboundSchema: z.ZodType<
  InvoiceFeeCalculation,
  z.ZodTypeDef,
  unknown
> = z.object({
  creditFeeTotal: z.number(),
});

/** @internal */
export type InvoiceFeeCalculation$Outbound = {
  creditFeeTotal: number;
};

/** @internal */
export const InvoiceFeeCalculation$outboundSchema: z.ZodType<
  InvoiceFeeCalculation$Outbound,
  z.ZodTypeDef,
  InvoiceFeeCalculation
> = z.object({
  creditFeeTotal: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceFeeCalculation$ {
  /** @deprecated use `InvoiceFeeCalculation$inboundSchema` instead. */
  export const inboundSchema = InvoiceFeeCalculation$inboundSchema;
  /** @deprecated use `InvoiceFeeCalculation$outboundSchema` instead. */
  export const outboundSchema = InvoiceFeeCalculation$outboundSchema;
  /** @deprecated use `InvoiceFeeCalculation$Outbound` instead. */
  export type Outbound = InvoiceFeeCalculation$Outbound;
}

export function invoiceFeeCalculationToJSON(
  invoiceFeeCalculation: InvoiceFeeCalculation,
): string {
  return JSON.stringify(
    InvoiceFeeCalculation$outboundSchema.parse(invoiceFeeCalculation),
  );
}

export function invoiceFeeCalculationFromJSON(
  jsonString: string,
): SafeParseResult<InvoiceFeeCalculation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvoiceFeeCalculation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvoiceFeeCalculation' from JSON`,
  );
}
