/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type UpdateCalculation1099BatchRequest = {
  bulkBatchUpdate?: shared.BulkBatchUpdate | undefined;
  /**
   * Unique identifier for a batch
   */
  batchId: string;
};

export type UpdateCalculation1099BatchResponse = {
  /**
   * A batch of items for importing as calculation 1099s
   */
  bulkCalculation1099Batch?: shared.BulkCalculation1099Batch | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const UpdateCalculation1099BatchRequest$inboundSchema: z.ZodType<
  UpdateCalculation1099BatchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  BulkBatchUpdate: shared.BulkBatchUpdate$inboundSchema.optional(),
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    "BulkBatchUpdate": "bulkBatchUpdate",
  });
});

/** @internal */
export type UpdateCalculation1099BatchRequest$Outbound = {
  BulkBatchUpdate?: shared.BulkBatchUpdate$Outbound | undefined;
  batchId: string;
};

/** @internal */
export const UpdateCalculation1099BatchRequest$outboundSchema: z.ZodType<
  UpdateCalculation1099BatchRequest$Outbound,
  z.ZodTypeDef,
  UpdateCalculation1099BatchRequest
> = z.object({
  bulkBatchUpdate: shared.BulkBatchUpdate$outboundSchema.optional(),
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    bulkBatchUpdate: "BulkBatchUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCalculation1099BatchRequest$ {
  /** @deprecated use `UpdateCalculation1099BatchRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateCalculation1099BatchRequest$inboundSchema;
  /** @deprecated use `UpdateCalculation1099BatchRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateCalculation1099BatchRequest$outboundSchema;
  /** @deprecated use `UpdateCalculation1099BatchRequest$Outbound` instead. */
  export type Outbound = UpdateCalculation1099BatchRequest$Outbound;
}

export function updateCalculation1099BatchRequestToJSON(
  updateCalculation1099BatchRequest: UpdateCalculation1099BatchRequest,
): string {
  return JSON.stringify(
    UpdateCalculation1099BatchRequest$outboundSchema.parse(
      updateCalculation1099BatchRequest,
    ),
  );
}

export function updateCalculation1099BatchRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCalculation1099BatchRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateCalculation1099BatchRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCalculation1099BatchRequest' from JSON`,
  );
}

/** @internal */
export const UpdateCalculation1099BatchResponse$inboundSchema: z.ZodType<
  UpdateCalculation1099BatchResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BulkCalculation1099Batch: shared.BulkCalculation1099Batch$inboundSchema
    .optional(),
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "BulkCalculation1099Batch": "bulkCalculation1099Batch",
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type UpdateCalculation1099BatchResponse$Outbound = {
  BulkCalculation1099Batch?:
    | shared.BulkCalculation1099Batch$Outbound
    | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const UpdateCalculation1099BatchResponse$outboundSchema: z.ZodType<
  UpdateCalculation1099BatchResponse$Outbound,
  z.ZodTypeDef,
  UpdateCalculation1099BatchResponse
> = z.object({
  bulkCalculation1099Batch: shared.BulkCalculation1099Batch$outboundSchema
    .optional(),
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    bulkCalculation1099Batch: "BulkCalculation1099Batch",
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateCalculation1099BatchResponse$ {
  /** @deprecated use `UpdateCalculation1099BatchResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateCalculation1099BatchResponse$inboundSchema;
  /** @deprecated use `UpdateCalculation1099BatchResponse$outboundSchema` instead. */
  export const outboundSchema =
    UpdateCalculation1099BatchResponse$outboundSchema;
  /** @deprecated use `UpdateCalculation1099BatchResponse$Outbound` instead. */
  export type Outbound = UpdateCalculation1099BatchResponse$Outbound;
}

export function updateCalculation1099BatchResponseToJSON(
  updateCalculation1099BatchResponse: UpdateCalculation1099BatchResponse,
): string {
  return JSON.stringify(
    UpdateCalculation1099BatchResponse$outboundSchema.parse(
      updateCalculation1099BatchResponse,
    ),
  );
}

export function updateCalculation1099BatchResponseFromJSON(
  jsonString: string,
): SafeParseResult<UpdateCalculation1099BatchResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateCalculation1099BatchResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateCalculation1099BatchResponse' from JSON`,
  );
}
