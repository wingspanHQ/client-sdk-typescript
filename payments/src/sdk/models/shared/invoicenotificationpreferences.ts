/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InvoiceNotificationPreferences = {
  sendInvoice?: boolean | null | undefined;
  sendReceipt?: boolean | null | undefined;
  sendReminders: boolean;
};

/** @internal */
export const InvoiceNotificationPreferences$inboundSchema: z.ZodType<
  InvoiceNotificationPreferences,
  z.ZodTypeDef,
  unknown
> = z.object({
  sendInvoice: z.nullable(z.boolean()).optional(),
  sendReceipt: z.nullable(z.boolean()).optional(),
  sendReminders: z.boolean(),
});

/** @internal */
export type InvoiceNotificationPreferences$Outbound = {
  sendInvoice?: boolean | null | undefined;
  sendReceipt?: boolean | null | undefined;
  sendReminders: boolean;
};

/** @internal */
export const InvoiceNotificationPreferences$outboundSchema: z.ZodType<
  InvoiceNotificationPreferences$Outbound,
  z.ZodTypeDef,
  InvoiceNotificationPreferences
> = z.object({
  sendInvoice: z.nullable(z.boolean()).optional(),
  sendReceipt: z.nullable(z.boolean()).optional(),
  sendReminders: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceNotificationPreferences$ {
  /** @deprecated use `InvoiceNotificationPreferences$inboundSchema` instead. */
  export const inboundSchema = InvoiceNotificationPreferences$inboundSchema;
  /** @deprecated use `InvoiceNotificationPreferences$outboundSchema` instead. */
  export const outboundSchema = InvoiceNotificationPreferences$outboundSchema;
  /** @deprecated use `InvoiceNotificationPreferences$Outbound` instead. */
  export type Outbound = InvoiceNotificationPreferences$Outbound;
}

export function invoiceNotificationPreferencesToJSON(
  invoiceNotificationPreferences: InvoiceNotificationPreferences,
): string {
  return JSON.stringify(
    InvoiceNotificationPreferences$outboundSchema.parse(
      invoiceNotificationPreferences,
    ),
  );
}

export function invoiceNotificationPreferencesFromJSON(
  jsonString: string,
): SafeParseResult<InvoiceNotificationPreferences, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvoiceNotificationPreferences$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvoiceNotificationPreferences' from JSON`,
  );
}
