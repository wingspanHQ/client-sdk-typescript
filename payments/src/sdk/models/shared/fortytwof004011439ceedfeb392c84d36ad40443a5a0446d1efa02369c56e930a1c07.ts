/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum Status {
    Draft = "Draft",
    Open = "Open",
    Overdue = "Overdue",
    Cancelled = "Cancelled",
    Pending = "Pending",
    PaymentInTransit = "PaymentInTransit",
    Paid = "Paid",
}

export type FortyTwof004011439ceedfeb392c84d36ad40443a5a0446d1efa02369c56e930a1c07 = {
    createdAt: string;
    depositedDate?: string | null | undefined;
    dueDate: string;
    invoiceId: string;
    invoiceNumber: string;
    notes?: string | null | undefined;
    paidDate?: string | null | undefined;
    status: Status;
    updatedAt: string;
};

/** @internal */
export const Status$ = z.nativeEnum(Status);

/** @internal */
export namespace FortyTwof004011439ceedfeb392c84d36ad40443a5a0446d1efa02369c56e930a1c07$ {
    export type Inbound = {
        createdAt: string;
        depositedDate?: string | null | undefined;
        dueDate: string;
        invoiceId: string;
        invoiceNumber: string;
        notes?: string | null | undefined;
        paidDate?: string | null | undefined;
        status: Status;
        updatedAt: string;
    };

    export const inboundSchema: z.ZodType<
        FortyTwof004011439ceedfeb392c84d36ad40443a5a0446d1efa02369c56e930a1c07,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            createdAt: z.string(),
            depositedDate: z.nullable(z.string()).optional(),
            dueDate: z.string(),
            invoiceId: z.string(),
            invoiceNumber: z.string(),
            notes: z.nullable(z.string()).optional(),
            paidDate: z.nullable(z.string()).optional(),
            status: Status$,
            updatedAt: z.string(),
        })
        .transform((v) => {
            return {
                createdAt: v.createdAt,
                ...(v.depositedDate === undefined ? null : { depositedDate: v.depositedDate }),
                dueDate: v.dueDate,
                invoiceId: v.invoiceId,
                invoiceNumber: v.invoiceNumber,
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.paidDate === undefined ? null : { paidDate: v.paidDate }),
                status: v.status,
                updatedAt: v.updatedAt,
            };
        });

    export type Outbound = {
        createdAt: string;
        depositedDate?: string | null | undefined;
        dueDate: string;
        invoiceId: string;
        invoiceNumber: string;
        notes?: string | null | undefined;
        paidDate?: string | null | undefined;
        status: Status;
        updatedAt: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FortyTwof004011439ceedfeb392c84d36ad40443a5a0446d1efa02369c56e930a1c07
    > = z
        .object({
            createdAt: z.string(),
            depositedDate: z.nullable(z.string()).optional(),
            dueDate: z.string(),
            invoiceId: z.string(),
            invoiceNumber: z.string(),
            notes: z.nullable(z.string()).optional(),
            paidDate: z.nullable(z.string()).optional(),
            status: Status$,
            updatedAt: z.string(),
        })
        .transform((v) => {
            return {
                createdAt: v.createdAt,
                ...(v.depositedDate === undefined ? null : { depositedDate: v.depositedDate }),
                dueDate: v.dueDate,
                invoiceId: v.invoiceId,
                invoiceNumber: v.invoiceNumber,
                ...(v.notes === undefined ? null : { notes: v.notes }),
                ...(v.paidDate === undefined ? null : { paidDate: v.paidDate }),
                status: v.status,
                updatedAt: v.updatedAt,
            };
        });
}
