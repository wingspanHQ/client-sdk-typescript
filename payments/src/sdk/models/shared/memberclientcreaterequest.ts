/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0,
  D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$inboundSchema,
  D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$Outbound,
  D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$outboundSchema,
} from "./d750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0.js";
import {
  MemberData,
  MemberData$inboundSchema,
  MemberData$Outbound,
  MemberData$outboundSchema,
} from "./memberdata.js";

export const MemberClientCreateRequestStatus = {
  Active: "Active",
  Inactive: "Inactive",
  Pending: "Pending",
} as const;
export type MemberClientCreateRequestStatus = ClosedEnum<
  typeof MemberClientCreateRequestStatus
>;

export type MemberClientCreateRequest = {
  clientId?: string | null | undefined;
  company?: string | null | undefined;
  emailCC?: Array<string> | null | undefined;
  emailTo?: string | null | undefined;
  integration?:
    | D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0
    | null
    | undefined;
  labels?: { [k: string]: string } | null | undefined;
  memberData?: MemberData | null | undefined;
  memberId?: string | null | undefined;
  name?: string | null | undefined;
  status?: MemberClientCreateRequestStatus | null | undefined;
};

/** @internal */
export const MemberClientCreateRequestStatus$inboundSchema: z.ZodNativeEnum<
  typeof MemberClientCreateRequestStatus
> = z.nativeEnum(MemberClientCreateRequestStatus);

/** @internal */
export const MemberClientCreateRequestStatus$outboundSchema: z.ZodNativeEnum<
  typeof MemberClientCreateRequestStatus
> = MemberClientCreateRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientCreateRequestStatus$ {
  /** @deprecated use `MemberClientCreateRequestStatus$inboundSchema` instead. */
  export const inboundSchema = MemberClientCreateRequestStatus$inboundSchema;
  /** @deprecated use `MemberClientCreateRequestStatus$outboundSchema` instead. */
  export const outboundSchema = MemberClientCreateRequestStatus$outboundSchema;
}

/** @internal */
export const MemberClientCreateRequest$inboundSchema: z.ZodType<
  MemberClientCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  clientId: z.nullable(z.string()).optional(),
  company: z.nullable(z.string()).optional(),
  emailCC: z.nullable(z.array(z.string())).optional(),
  emailTo: z.nullable(z.string()).optional(),
  integration: z.nullable(
    D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$inboundSchema,
  ).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  memberData: z.nullable(MemberData$inboundSchema).optional(),
  memberId: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  status: z.nullable(MemberClientCreateRequestStatus$inboundSchema).optional(),
});

/** @internal */
export type MemberClientCreateRequest$Outbound = {
  clientId?: string | null | undefined;
  company?: string | null | undefined;
  emailCC?: Array<string> | null | undefined;
  emailTo?: string | null | undefined;
  integration?:
    | D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$Outbound
    | null
    | undefined;
  labels?: { [k: string]: string } | null | undefined;
  memberData?: MemberData$Outbound | null | undefined;
  memberId?: string | null | undefined;
  name?: string | null | undefined;
  status?: string | null | undefined;
};

/** @internal */
export const MemberClientCreateRequest$outboundSchema: z.ZodType<
  MemberClientCreateRequest$Outbound,
  z.ZodTypeDef,
  MemberClientCreateRequest
> = z.object({
  clientId: z.nullable(z.string()).optional(),
  company: z.nullable(z.string()).optional(),
  emailCC: z.nullable(z.array(z.string())).optional(),
  emailTo: z.nullable(z.string()).optional(),
  integration: z.nullable(
    D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$outboundSchema,
  ).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  memberData: z.nullable(MemberData$outboundSchema).optional(),
  memberId: z.nullable(z.string()).optional(),
  name: z.nullable(z.string()).optional(),
  status: z.nullable(MemberClientCreateRequestStatus$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientCreateRequest$ {
  /** @deprecated use `MemberClientCreateRequest$inboundSchema` instead. */
  export const inboundSchema = MemberClientCreateRequest$inboundSchema;
  /** @deprecated use `MemberClientCreateRequest$outboundSchema` instead. */
  export const outboundSchema = MemberClientCreateRequest$outboundSchema;
  /** @deprecated use `MemberClientCreateRequest$Outbound` instead. */
  export type Outbound = MemberClientCreateRequest$Outbound;
}

export function memberClientCreateRequestToJSON(
  memberClientCreateRequest: MemberClientCreateRequest,
): string {
  return JSON.stringify(
    MemberClientCreateRequest$outboundSchema.parse(memberClientCreateRequest),
  );
}

export function memberClientCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<MemberClientCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MemberClientCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MemberClientCreateRequest' from JSON`,
  );
}
