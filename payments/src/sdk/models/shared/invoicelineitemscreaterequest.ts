/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b } from "./facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b";
import { ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461 } from "./threebilliononehundredandninetymillionsixhundredandeightyfivethousandeighthundredandthirtytwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461";
import { Expose, Type } from "class-transformer";

export class InvoiceLineItemsCreateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "costPerUnit" })
    costPerUnit?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "detail" })
    detail?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "discount" })
    @Type(() => Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b)
    discount?: Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b;

    @SpeakeasyMetadata()
    @Expose({ name: "integration" })
    @Type(
        () =>
            ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461
    )
    integration?: ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "quantity" })
    quantity?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "reimbursableExpense" })
    reimbursableExpense?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "totalCost" })
    totalCost?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "unit" })
    unit?: string;
}
