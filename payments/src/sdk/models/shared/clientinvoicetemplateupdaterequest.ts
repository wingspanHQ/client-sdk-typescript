/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ClientInvoiceTemplateUpdateRequest = {
  accountId?: string | null | undefined;
  clientId: string;
  paymentMethodId?: string | null | undefined;
};

/** @internal */
export const ClientInvoiceTemplateUpdateRequest$inboundSchema: z.ZodType<
  ClientInvoiceTemplateUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.nullable(z.string()).optional(),
  clientId: z.string(),
  paymentMethodId: z.nullable(z.string()).optional(),
});

/** @internal */
export type ClientInvoiceTemplateUpdateRequest$Outbound = {
  accountId?: string | null | undefined;
  clientId: string;
  paymentMethodId?: string | null | undefined;
};

/** @internal */
export const ClientInvoiceTemplateUpdateRequest$outboundSchema: z.ZodType<
  ClientInvoiceTemplateUpdateRequest$Outbound,
  z.ZodTypeDef,
  ClientInvoiceTemplateUpdateRequest
> = z.object({
  accountId: z.nullable(z.string()).optional(),
  clientId: z.string(),
  paymentMethodId: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientInvoiceTemplateUpdateRequest$ {
  /** @deprecated use `ClientInvoiceTemplateUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = ClientInvoiceTemplateUpdateRequest$inboundSchema;
  /** @deprecated use `ClientInvoiceTemplateUpdateRequest$outboundSchema` instead. */
  export const outboundSchema =
    ClientInvoiceTemplateUpdateRequest$outboundSchema;
  /** @deprecated use `ClientInvoiceTemplateUpdateRequest$Outbound` instead. */
  export type Outbound = ClientInvoiceTemplateUpdateRequest$Outbound;
}

export function clientInvoiceTemplateUpdateRequestToJSON(
  clientInvoiceTemplateUpdateRequest: ClientInvoiceTemplateUpdateRequest,
): string {
  return JSON.stringify(
    ClientInvoiceTemplateUpdateRequest$outboundSchema.parse(
      clientInvoiceTemplateUpdateRequest,
    ),
  );
}

export function clientInvoiceTemplateUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientInvoiceTemplateUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ClientInvoiceTemplateUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientInvoiceTemplateUpdateRequest' from JSON`,
  );
}
