/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    ClientInvoiceDataCreateRequest,
    ClientInvoiceDataCreateRequest$,
} from "./clientinvoicedatacreaterequest";
import { Frequency, Frequency$ } from "./frequency";
import { ScheduleDate, ScheduleDate$ } from "./scheduledate";
import { z } from "zod";

export enum ClientInvoiceTemplateCreateRequestStatus {
    Active = "Active",
    Draft = "Draft",
    Expired = "Expired",
    Cancelled = "Cancelled",
}

export type ClientInvoiceTemplateCreateRequest = {
    accountId?: string | null | undefined;
    clientCompany?: string | null | undefined;
    clientEmail: string;
    clientEmailCC?: Array<string> | null | undefined;
    clientFirstName?: string | null | undefined;
    clientLastName?: string | null | undefined;
    dueInDays?: number | null | undefined;
    frequency?: Frequency | null | undefined;
    invoiceData: ClientInvoiceDataCreateRequest;
    memberId: string;
    paymentMethodId?: string | null | undefined;
    scheduleDates?: Array<ScheduleDate> | null | undefined;
    status: ClientInvoiceTemplateCreateRequestStatus;
};

/** @internal */
export const ClientInvoiceTemplateCreateRequestStatus$ = z.nativeEnum(
    ClientInvoiceTemplateCreateRequestStatus
);

/** @internal */
export namespace ClientInvoiceTemplateCreateRequest$ {
    export type Inbound = {
        accountId?: string | null | undefined;
        clientCompany?: string | null | undefined;
        clientEmail: string;
        clientEmailCC?: Array<string> | null | undefined;
        clientFirstName?: string | null | undefined;
        clientLastName?: string | null | undefined;
        dueInDays?: number | null | undefined;
        frequency?: Frequency$.Inbound | null | undefined;
        invoiceData: ClientInvoiceDataCreateRequest$.Inbound;
        memberId: string;
        paymentMethodId?: string | null | undefined;
        scheduleDates?: Array<ScheduleDate$.Inbound> | null | undefined;
        status: ClientInvoiceTemplateCreateRequestStatus;
    };

    export const inboundSchema: z.ZodType<
        ClientInvoiceTemplateCreateRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            accountId: z.string().nullable().optional(),
            clientCompany: z.string().nullable().optional(),
            clientEmail: z.string(),
            clientEmailCC: z.array(z.string()).nullable().optional(),
            clientFirstName: z.string().nullable().optional(),
            clientLastName: z.string().nullable().optional(),
            dueInDays: z.number().nullable().optional(),
            frequency: Frequency$.inboundSchema.nullable().optional(),
            invoiceData: ClientInvoiceDataCreateRequest$.inboundSchema,
            memberId: z.string(),
            paymentMethodId: z.string().nullable().optional(),
            scheduleDates: z.array(ScheduleDate$.inboundSchema).nullable().optional(),
            status: ClientInvoiceTemplateCreateRequestStatus$,
        })
        .transform((v) => {
            return {
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.clientCompany === undefined ? null : { clientCompany: v.clientCompany }),
                clientEmail: v.clientEmail,
                ...(v.clientEmailCC === undefined ? null : { clientEmailCC: v.clientEmailCC }),
                ...(v.clientFirstName === undefined
                    ? null
                    : { clientFirstName: v.clientFirstName }),
                ...(v.clientLastName === undefined ? null : { clientLastName: v.clientLastName }),
                ...(v.dueInDays === undefined ? null : { dueInDays: v.dueInDays }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                invoiceData: v.invoiceData,
                memberId: v.memberId,
                ...(v.paymentMethodId === undefined
                    ? null
                    : { paymentMethodId: v.paymentMethodId }),
                ...(v.scheduleDates === undefined ? null : { scheduleDates: v.scheduleDates }),
                status: v.status,
            };
        });

    export type Outbound = {
        accountId?: string | null | undefined;
        clientCompany?: string | null | undefined;
        clientEmail: string;
        clientEmailCC?: Array<string> | null | undefined;
        clientFirstName?: string | null | undefined;
        clientLastName?: string | null | undefined;
        dueInDays?: number | null | undefined;
        frequency?: Frequency$.Outbound | null | undefined;
        invoiceData: ClientInvoiceDataCreateRequest$.Outbound;
        memberId: string;
        paymentMethodId?: string | null | undefined;
        scheduleDates?: Array<ScheduleDate$.Outbound> | null | undefined;
        status: ClientInvoiceTemplateCreateRequestStatus;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ClientInvoiceTemplateCreateRequest
    > = z
        .object({
            accountId: z.string().nullable().optional(),
            clientCompany: z.string().nullable().optional(),
            clientEmail: z.string(),
            clientEmailCC: z.array(z.string()).nullable().optional(),
            clientFirstName: z.string().nullable().optional(),
            clientLastName: z.string().nullable().optional(),
            dueInDays: z.number().nullable().optional(),
            frequency: Frequency$.outboundSchema.nullable().optional(),
            invoiceData: ClientInvoiceDataCreateRequest$.outboundSchema,
            memberId: z.string(),
            paymentMethodId: z.string().nullable().optional(),
            scheduleDates: z.array(ScheduleDate$.outboundSchema).nullable().optional(),
            status: ClientInvoiceTemplateCreateRequestStatus$,
        })
        .transform((v) => {
            return {
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.clientCompany === undefined ? null : { clientCompany: v.clientCompany }),
                clientEmail: v.clientEmail,
                ...(v.clientEmailCC === undefined ? null : { clientEmailCC: v.clientEmailCC }),
                ...(v.clientFirstName === undefined
                    ? null
                    : { clientFirstName: v.clientFirstName }),
                ...(v.clientLastName === undefined ? null : { clientLastName: v.clientLastName }),
                ...(v.dueInDays === undefined ? null : { dueInDays: v.dueInDays }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                invoiceData: v.invoiceData,
                memberId: v.memberId,
                ...(v.paymentMethodId === undefined
                    ? null
                    : { paymentMethodId: v.paymentMethodId }),
                ...(v.scheduleDates === undefined ? null : { scheduleDates: v.scheduleDates }),
                status: v.status,
            };
        });
}
