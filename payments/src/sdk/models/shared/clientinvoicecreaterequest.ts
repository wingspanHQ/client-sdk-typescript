/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FeeHandlingConfig, FeeHandlingConfig$ } from "./feehandlingconfig";
import {
    InvoiceLineItemsCreateRequest,
    InvoiceLineItemsCreateRequest$,
} from "./invoicelineitemscreaterequest";
import { z } from "zod";

export enum ClientInvoiceCreateRequestCurrency {
    Usd = "USD",
    Cad = "CAD",
}

export type ClientInvoiceCreateRequest = {
    clientCompany?: string | null | undefined;
    clientEmail: string;
    clientEmailCC?: Array<string> | null | undefined;
    clientFirstName?: string | null | undefined;
    clientLastName?: string | null | undefined;
    creditFeeHandling?: FeeHandlingConfig | null | undefined;
    currency?: ClientInvoiceCreateRequestCurrency | null | undefined;
    dueDate: string;
    lineItems: Array<InvoiceLineItemsCreateRequest>;
    memberId: string;
};

/** @internal */
export const ClientInvoiceCreateRequestCurrency$ = z.nativeEnum(ClientInvoiceCreateRequestCurrency);

/** @internal */
export namespace ClientInvoiceCreateRequest$ {
    export type Inbound = {
        clientCompany?: string | null | undefined;
        clientEmail: string;
        clientEmailCC?: Array<string> | null | undefined;
        clientFirstName?: string | null | undefined;
        clientLastName?: string | null | undefined;
        creditFeeHandling?: FeeHandlingConfig$.Inbound | null | undefined;
        currency?: ClientInvoiceCreateRequestCurrency | null | undefined;
        dueDate: string;
        lineItems: Array<InvoiceLineItemsCreateRequest$.Inbound>;
        memberId: string;
    };

    export const inboundSchema: z.ZodType<ClientInvoiceCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            clientCompany: z.nullable(z.string()).optional(),
            clientEmail: z.string(),
            clientEmailCC: z.nullable(z.array(z.string())).optional(),
            clientFirstName: z.nullable(z.string()).optional(),
            clientLastName: z.nullable(z.string()).optional(),
            creditFeeHandling: z.nullable(FeeHandlingConfig$.inboundSchema).optional(),
            currency: z.nullable(ClientInvoiceCreateRequestCurrency$).optional(),
            dueDate: z.string(),
            lineItems: z.array(InvoiceLineItemsCreateRequest$.inboundSchema),
            memberId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.clientCompany === undefined ? null : { clientCompany: v.clientCompany }),
                clientEmail: v.clientEmail,
                ...(v.clientEmailCC === undefined ? null : { clientEmailCC: v.clientEmailCC }),
                ...(v.clientFirstName === undefined
                    ? null
                    : { clientFirstName: v.clientFirstName }),
                ...(v.clientLastName === undefined ? null : { clientLastName: v.clientLastName }),
                ...(v.creditFeeHandling === undefined
                    ? null
                    : { creditFeeHandling: v.creditFeeHandling }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                dueDate: v.dueDate,
                lineItems: v.lineItems,
                memberId: v.memberId,
            };
        });

    export type Outbound = {
        clientCompany?: string | null | undefined;
        clientEmail: string;
        clientEmailCC?: Array<string> | null | undefined;
        clientFirstName?: string | null | undefined;
        clientLastName?: string | null | undefined;
        creditFeeHandling?: FeeHandlingConfig$.Outbound | null | undefined;
        currency?: ClientInvoiceCreateRequestCurrency | null | undefined;
        dueDate: string;
        lineItems: Array<InvoiceLineItemsCreateRequest$.Outbound>;
        memberId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClientInvoiceCreateRequest> = z
        .object({
            clientCompany: z.nullable(z.string()).optional(),
            clientEmail: z.string(),
            clientEmailCC: z.nullable(z.array(z.string())).optional(),
            clientFirstName: z.nullable(z.string()).optional(),
            clientLastName: z.nullable(z.string()).optional(),
            creditFeeHandling: z.nullable(FeeHandlingConfig$.outboundSchema).optional(),
            currency: z.nullable(ClientInvoiceCreateRequestCurrency$).optional(),
            dueDate: z.string(),
            lineItems: z.array(InvoiceLineItemsCreateRequest$.outboundSchema),
            memberId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.clientCompany === undefined ? null : { clientCompany: v.clientCompany }),
                clientEmail: v.clientEmail,
                ...(v.clientEmailCC === undefined ? null : { clientEmailCC: v.clientEmailCC }),
                ...(v.clientFirstName === undefined
                    ? null
                    : { clientFirstName: v.clientFirstName }),
                ...(v.clientLastName === undefined ? null : { clientLastName: v.clientLastName }),
                ...(v.creditFeeHandling === undefined
                    ? null
                    : { creditFeeHandling: v.creditFeeHandling }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                dueDate: v.dueDate,
                lineItems: v.lineItems,
                memberId: v.memberId,
            };
        });
}
