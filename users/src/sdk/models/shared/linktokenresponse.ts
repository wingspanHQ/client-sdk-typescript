/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type LinkTokenResponse = {
    expiration: string;
    linkToken: string;
};

/** @internal */
export namespace LinkTokenResponse$ {
    export type Inbound = {
        expiration: string;
        linkToken: string;
    };

    export const inboundSchema: z.ZodType<LinkTokenResponse, z.ZodTypeDef, Inbound> = z
        .object({
            expiration: z.string(),
            linkToken: z.string(),
        })
        .transform((v) => {
            return {
                expiration: v.expiration,
                linkToken: v.linkToken,
            };
        });

    export type Outbound = {
        expiration: string;
        linkToken: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LinkTokenResponse> = z
        .object({
            expiration: z.string(),
            linkToken: z.string(),
        })
        .transform((v) => {
            return {
                expiration: v.expiration,
                linkToken: v.linkToken,
            };
        });
}
