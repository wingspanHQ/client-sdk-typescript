/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type F8c6f82160a6fdfd5126819f1852fc694cb8161367b6d04413104146646d63fb = {
    assetId?: string | null | undefined;
    bankAccountId?: string | null | undefined;
    expenseId?: string | null | undefined;
    liabilityId?: string | null | undefined;
};

/** @internal */
export namespace F8c6f82160a6fdfd5126819f1852fc694cb8161367b6d04413104146646d63fb$ {
    export type Inbound = {
        assetId?: string | null | undefined;
        bankAccountId?: string | null | undefined;
        expenseId?: string | null | undefined;
        liabilityId?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        F8c6f82160a6fdfd5126819f1852fc694cb8161367b6d04413104146646d63fb,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            assetId: z.nullable(z.string()).optional(),
            bankAccountId: z.nullable(z.string()).optional(),
            expenseId: z.nullable(z.string()).optional(),
            liabilityId: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.assetId === undefined ? null : { assetId: v.assetId }),
                ...(v.bankAccountId === undefined ? null : { bankAccountId: v.bankAccountId }),
                ...(v.expenseId === undefined ? null : { expenseId: v.expenseId }),
                ...(v.liabilityId === undefined ? null : { liabilityId: v.liabilityId }),
            };
        });

    export type Outbound = {
        assetId?: string | null | undefined;
        bankAccountId?: string | null | undefined;
        expenseId?: string | null | undefined;
        liabilityId?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        F8c6f82160a6fdfd5126819f1852fc694cb8161367b6d04413104146646d63fb
    > = z
        .object({
            assetId: z.nullable(z.string()).optional(),
            bankAccountId: z.nullable(z.string()).optional(),
            expenseId: z.nullable(z.string()).optional(),
            liabilityId: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.assetId === undefined ? null : { assetId: v.assetId }),
                ...(v.bankAccountId === undefined ? null : { bankAccountId: v.bankAccountId }),
                ...(v.expenseId === undefined ? null : { expenseId: v.expenseId }),
                ...(v.liabilityId === undefined ? null : { liabilityId: v.liabilityId }),
            };
        });
}
