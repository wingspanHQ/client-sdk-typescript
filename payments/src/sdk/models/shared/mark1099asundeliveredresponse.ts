/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Mark1099AsUndeliveredResponse = {};

/** @internal */
export const Mark1099AsUndeliveredResponse$inboundSchema: z.ZodType<
  Mark1099AsUndeliveredResponse,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type Mark1099AsUndeliveredResponse$Outbound = {};

/** @internal */
export const Mark1099AsUndeliveredResponse$outboundSchema: z.ZodType<
  Mark1099AsUndeliveredResponse$Outbound,
  z.ZodTypeDef,
  Mark1099AsUndeliveredResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Mark1099AsUndeliveredResponse$ {
  /** @deprecated use `Mark1099AsUndeliveredResponse$inboundSchema` instead. */
  export const inboundSchema = Mark1099AsUndeliveredResponse$inboundSchema;
  /** @deprecated use `Mark1099AsUndeliveredResponse$outboundSchema` instead. */
  export const outboundSchema = Mark1099AsUndeliveredResponse$outboundSchema;
  /** @deprecated use `Mark1099AsUndeliveredResponse$Outbound` instead. */
  export type Outbound = Mark1099AsUndeliveredResponse$Outbound;
}

export function mark1099AsUndeliveredResponseToJSON(
  mark1099AsUndeliveredResponse: Mark1099AsUndeliveredResponse,
): string {
  return JSON.stringify(
    Mark1099AsUndeliveredResponse$outboundSchema.parse(
      mark1099AsUndeliveredResponse,
    ),
  );
}

export function mark1099AsUndeliveredResponseFromJSON(
  jsonString: string,
): SafeParseResult<Mark1099AsUndeliveredResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Mark1099AsUndeliveredResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Mark1099AsUndeliveredResponse' from JSON`,
  );
}
