/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../../../sdk/models/shared";
import { z } from "zod";

export type PatchUsersActivityIdRequest = {
    activityUpdateRequest?: shared.ActivityUpdateRequest | undefined;
    /**
     * Unique identifier
     */
    id: string;
};

export type PatchUsersActivityIdResponse = {
    /**
     * A member's activity
     */
    activity?: shared.Activity | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace PatchUsersActivityIdRequest$ {
    export type Inbound = {
        ActivityUpdateRequest?: shared.ActivityUpdateRequest$.Inbound | undefined;
        id: string;
    };

    export const inboundSchema: z.ZodType<PatchUsersActivityIdRequest, z.ZodTypeDef, Inbound> = z
        .object({
            ActivityUpdateRequest: shared.ActivityUpdateRequest$.inboundSchema.optional(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.ActivityUpdateRequest === undefined
                    ? null
                    : { activityUpdateRequest: v.ActivityUpdateRequest }),
                id: v.id,
            };
        });

    export type Outbound = {
        ActivityUpdateRequest?: shared.ActivityUpdateRequest$.Outbound | undefined;
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PatchUsersActivityIdRequest> = z
        .object({
            activityUpdateRequest: shared.ActivityUpdateRequest$.outboundSchema.optional(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.activityUpdateRequest === undefined
                    ? null
                    : { ActivityUpdateRequest: v.activityUpdateRequest }),
                id: v.id,
            };
        });
}

/** @internal */
export namespace PatchUsersActivityIdResponse$ {
    export type Inbound = {
        Activity?: shared.Activity$.Inbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<PatchUsersActivityIdResponse, z.ZodTypeDef, Inbound> = z
        .object({
            Activity: shared.Activity$.inboundSchema.optional(),
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                ...(v.Activity === undefined ? null : { activity: v.Activity }),
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        Activity?: shared.Activity$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PatchUsersActivityIdResponse> = z
        .object({
            activity: shared.Activity$.outboundSchema.optional(),
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ...(v.activity === undefined ? null : { Activity: v.activity }),
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
