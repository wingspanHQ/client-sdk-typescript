/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PayoutDestinationResponse, PayoutDestinationResponse$ } from "./payoutdestinationresponse";
import { z } from "zod";

export enum PayoutSettingsResponsePayoutPreferences {
    Standard = "Standard",
    Instant = "Instant",
    Expedited = "Expedited",
    Check = "Check",
    ECheck = "ECheck",
}

export type PayoutSettingsResponse = {
    payoutDestinations: Array<PayoutDestinationResponse>;
    payoutPreferences: PayoutSettingsResponsePayoutPreferences;
};

/** @internal */
export const PayoutSettingsResponsePayoutPreferences$ = z.nativeEnum(
    PayoutSettingsResponsePayoutPreferences
);

/** @internal */
export namespace PayoutSettingsResponse$ {
    export type Inbound = {
        payoutDestinations: Array<PayoutDestinationResponse$.Inbound>;
        payoutPreferences: PayoutSettingsResponsePayoutPreferences;
    };

    export const inboundSchema: z.ZodType<PayoutSettingsResponse, z.ZodTypeDef, Inbound> = z
        .object({
            payoutDestinations: z.array(PayoutDestinationResponse$.inboundSchema),
            payoutPreferences: PayoutSettingsResponsePayoutPreferences$,
        })
        .transform((v) => {
            return {
                payoutDestinations: v.payoutDestinations,
                payoutPreferences: v.payoutPreferences,
            };
        });

    export type Outbound = {
        payoutDestinations: Array<PayoutDestinationResponse$.Outbound>;
        payoutPreferences: PayoutSettingsResponsePayoutPreferences;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PayoutSettingsResponse> = z
        .object({
            payoutDestinations: z.array(PayoutDestinationResponse$.outboundSchema),
            payoutPreferences: PayoutSettingsResponsePayoutPreferences$,
        })
        .transform((v) => {
            return {
                payoutDestinations: v.payoutDestinations,
                payoutPreferences: v.payoutPreferences,
            };
        });
}
