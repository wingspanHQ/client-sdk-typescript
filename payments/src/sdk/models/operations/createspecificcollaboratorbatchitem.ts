/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type CreateSpecificCollaboratorBatchItemRequest = {
  bulkCollaboratorItemCreate?: shared.BulkCollaboratorItemCreate | undefined;
  /**
   * Unique identifier for a batch
   */
  batchId: string;
};

export type CreateSpecificCollaboratorBatchItemResponse = {
  /**
   * An item that will be converted into a collaborator
   */
  bulkCollaboratorItem?: shared.BulkCollaboratorItem | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const CreateSpecificCollaboratorBatchItemRequest$inboundSchema:
  z.ZodType<CreateSpecificCollaboratorBatchItemRequest, z.ZodTypeDef, unknown> =
    z.object({
      BulkCollaboratorItemCreate: shared
        .BulkCollaboratorItemCreate$inboundSchema.optional(),
      batchId: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "BulkCollaboratorItemCreate": "bulkCollaboratorItemCreate",
      });
    });

/** @internal */
export type CreateSpecificCollaboratorBatchItemRequest$Outbound = {
  BulkCollaboratorItemCreate?:
    | shared.BulkCollaboratorItemCreate$Outbound
    | undefined;
  batchId: string;
};

/** @internal */
export const CreateSpecificCollaboratorBatchItemRequest$outboundSchema:
  z.ZodType<
    CreateSpecificCollaboratorBatchItemRequest$Outbound,
    z.ZodTypeDef,
    CreateSpecificCollaboratorBatchItemRequest
  > = z.object({
    bulkCollaboratorItemCreate: shared.BulkCollaboratorItemCreate$outboundSchema
      .optional(),
    batchId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      bulkCollaboratorItemCreate: "BulkCollaboratorItemCreate",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSpecificCollaboratorBatchItemRequest$ {
  /** @deprecated use `CreateSpecificCollaboratorBatchItemRequest$inboundSchema` instead. */
  export const inboundSchema =
    CreateSpecificCollaboratorBatchItemRequest$inboundSchema;
  /** @deprecated use `CreateSpecificCollaboratorBatchItemRequest$outboundSchema` instead. */
  export const outboundSchema =
    CreateSpecificCollaboratorBatchItemRequest$outboundSchema;
  /** @deprecated use `CreateSpecificCollaboratorBatchItemRequest$Outbound` instead. */
  export type Outbound = CreateSpecificCollaboratorBatchItemRequest$Outbound;
}

/** @internal */
export const CreateSpecificCollaboratorBatchItemResponse$inboundSchema:
  z.ZodType<
    CreateSpecificCollaboratorBatchItemResponse,
    z.ZodTypeDef,
    unknown
  > = z.object({
    BulkCollaboratorItem: shared.BulkCollaboratorItem$inboundSchema.optional(),
    ContentType: z.string(),
    StatusCode: z.number().int(),
    RawResponse: z.instanceof(Response),
  }).transform((v) => {
    return remap$(v, {
      "BulkCollaboratorItem": "bulkCollaboratorItem",
      "ContentType": "contentType",
      "StatusCode": "statusCode",
      "RawResponse": "rawResponse",
    });
  });

/** @internal */
export type CreateSpecificCollaboratorBatchItemResponse$Outbound = {
  BulkCollaboratorItem?: shared.BulkCollaboratorItem$Outbound | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const CreateSpecificCollaboratorBatchItemResponse$outboundSchema:
  z.ZodType<
    CreateSpecificCollaboratorBatchItemResponse$Outbound,
    z.ZodTypeDef,
    CreateSpecificCollaboratorBatchItemResponse
  > = z.object({
    bulkCollaboratorItem: shared.BulkCollaboratorItem$outboundSchema.optional(),
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
  }).transform((v) => {
    return remap$(v, {
      bulkCollaboratorItem: "BulkCollaboratorItem",
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSpecificCollaboratorBatchItemResponse$ {
  /** @deprecated use `CreateSpecificCollaboratorBatchItemResponse$inboundSchema` instead. */
  export const inboundSchema =
    CreateSpecificCollaboratorBatchItemResponse$inboundSchema;
  /** @deprecated use `CreateSpecificCollaboratorBatchItemResponse$outboundSchema` instead. */
  export const outboundSchema =
    CreateSpecificCollaboratorBatchItemResponse$outboundSchema;
  /** @deprecated use `CreateSpecificCollaboratorBatchItemResponse$Outbound` instead. */
  export type Outbound = CreateSpecificCollaboratorBatchItemResponse$Outbound;
}
