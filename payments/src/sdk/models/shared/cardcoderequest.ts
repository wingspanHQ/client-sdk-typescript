/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CardCodeRequest = {
  channel: string;
};

/** @internal */
export const CardCodeRequest$inboundSchema: z.ZodType<
  CardCodeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  channel: z.string(),
});

/** @internal */
export type CardCodeRequest$Outbound = {
  channel: string;
};

/** @internal */
export const CardCodeRequest$outboundSchema: z.ZodType<
  CardCodeRequest$Outbound,
  z.ZodTypeDef,
  CardCodeRequest
> = z.object({
  channel: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardCodeRequest$ {
  /** @deprecated use `CardCodeRequest$inboundSchema` instead. */
  export const inboundSchema = CardCodeRequest$inboundSchema;
  /** @deprecated use `CardCodeRequest$outboundSchema` instead. */
  export const outboundSchema = CardCodeRequest$outboundSchema;
  /** @deprecated use `CardCodeRequest$Outbound` instead. */
  export type Outbound = CardCodeRequest$Outbound;
}

export function cardCodeRequestToJSON(
  cardCodeRequest: CardCodeRequest,
): string {
  return JSON.stringify(CardCodeRequest$outboundSchema.parse(cardCodeRequest));
}

export function cardCodeRequestFromJSON(
  jsonString: string,
): SafeParseResult<CardCodeRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardCodeRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardCodeRequest' from JSON`,
  );
}
