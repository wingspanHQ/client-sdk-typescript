/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type TestInvoiceCreate = {
    contactName: string;
    email: string;
};

/** @internal */
export namespace TestInvoiceCreate$ {
    export type Inbound = {
        contactName: string;
        email: string;
    };

    export const inboundSchema: z.ZodType<TestInvoiceCreate, z.ZodTypeDef, Inbound> = z
        .object({
            contactName: z.string(),
            email: z.string(),
        })
        .transform((v) => {
            return {
                contactName: v.contactName,
                email: v.email,
            };
        });

    export type Outbound = {
        contactName: string;
        email: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TestInvoiceCreate> = z
        .object({
            contactName: z.string(),
            email: z.string(),
        })
        .transform((v) => {
            return {
                contactName: v.contactName,
                email: v.email,
            };
        });
}
