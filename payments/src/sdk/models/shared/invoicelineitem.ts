/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b,
    Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$,
} from "./facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b";
import { InvoiceIntegrations, InvoiceIntegrations$ } from "./invoiceintegrations";
import { z } from "zod";

export type InvoiceLineItem = {
    costPerUnit: number;
    createdAt: string;
    description?: string | null | undefined;
    detail?: string | null | undefined;
    discount?: Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b | null | undefined;
    integration?: InvoiceIntegrations | null | undefined;
    labels: Record<string, string>;
    labelsBak2: Record<string, string>;
    quantity: number;
    reimbursableExpense: boolean;
    totalCost: number;
    unit: string;
    updatedAt: string;
};

/** @internal */
export namespace InvoiceLineItem$ {
    export type Inbound = {
        costPerUnit: number;
        createdAt: string;
        description?: string | null | undefined;
        detail?: string | null | undefined;
        discount?:
            | Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.Inbound
            | null
            | undefined;
        integration?: InvoiceIntegrations$.Inbound | null | undefined;
        labels: Record<string, string>;
        labelsBak2: Record<string, string>;
        quantity: number;
        reimbursableExpense: boolean;
        totalCost: number;
        unit: string;
        updatedAt: string;
    };

    export const inboundSchema: z.ZodType<InvoiceLineItem, z.ZodTypeDef, Inbound> = z
        .object({
            costPerUnit: z.number(),
            createdAt: z.string(),
            description: z.string().nullable().optional(),
            detail: z.string().nullable().optional(),
            discount:
                Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.inboundSchema
                    .nullable()
                    .optional(),
            integration: InvoiceIntegrations$.inboundSchema.nullable().optional(),
            labels: z.record(z.string()),
            labelsBak2: z.record(z.string()),
            quantity: z.number(),
            reimbursableExpense: z.boolean(),
            totalCost: z.number(),
            unit: z.string(),
            updatedAt: z.string(),
        })
        .transform((v) => {
            return {
                costPerUnit: v.costPerUnit,
                createdAt: v.createdAt,
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.detail === undefined ? null : { detail: v.detail }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                labels: v.labels,
                labelsBak2: v.labelsBak2,
                quantity: v.quantity,
                reimbursableExpense: v.reimbursableExpense,
                totalCost: v.totalCost,
                unit: v.unit,
                updatedAt: v.updatedAt,
            };
        });

    export type Outbound = {
        costPerUnit: number;
        createdAt: string;
        description?: string | null | undefined;
        detail?: string | null | undefined;
        discount?:
            | Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.Outbound
            | null
            | undefined;
        integration?: InvoiceIntegrations$.Outbound | null | undefined;
        labels: Record<string, string>;
        labelsBak2: Record<string, string>;
        quantity: number;
        reimbursableExpense: boolean;
        totalCost: number;
        unit: string;
        updatedAt: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceLineItem> = z
        .object({
            costPerUnit: z.number(),
            createdAt: z.string(),
            description: z.string().nullable().optional(),
            detail: z.string().nullable().optional(),
            discount:
                Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.outboundSchema
                    .nullable()
                    .optional(),
            integration: InvoiceIntegrations$.outboundSchema.nullable().optional(),
            labels: z.record(z.string()),
            labelsBak2: z.record(z.string()),
            quantity: z.number(),
            reimbursableExpense: z.boolean(),
            totalCost: z.number(),
            unit: z.string(),
            updatedAt: z.string(),
        })
        .transform((v) => {
            return {
                costPerUnit: v.costPerUnit,
                createdAt: v.createdAt,
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.detail === undefined ? null : { detail: v.detail }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                labels: v.labels,
                labelsBak2: v.labelsBak2,
                quantity: v.quantity,
                reimbursableExpense: v.reimbursableExpense,
                totalCost: v.totalCost,
                unit: v.unit,
                updatedAt: v.updatedAt,
            };
        });
}
