/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountPurpose } from "./accountpurpose";
import { SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d } from "./sixhundredandsixtytwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d";
import { Expose, Type } from "class-transformer";

export enum AccountUpdateRequestStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
    Disconnected = "Disconnected",
    Ephemeral = "Ephemeral",
    LessThanNilGreaterThan = "<nil>",
}

export enum AccountUpdateRequestUsage {
    Business = "Business",
    Personal = "Personal",
    Mixed = "Mixed",
    LessThanNilGreaterThan = "<nil>",
}

export class AccountUpdateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "integration" })
    @Type(() => SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d)
    integration?: SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: AccountUpdateRequestStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "usage" })
    usage?: AccountUpdateRequestUsage;

    @SpeakeasyMetadata()
    @Expose({ name: "usedFor" })
    @Type(() => AccountPurpose)
    usedFor?: AccountPurpose;
}
