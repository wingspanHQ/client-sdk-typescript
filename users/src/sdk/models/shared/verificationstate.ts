/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum VerificationStateStatus {
    None = "None",
    Pending = "Pending",
    Failed = "Failed",
    Verified = "Verified",
}

export type VerificationState = {
    externalTinFingerprint?: string | null | undefined;
    finalizedAt?: string | null | undefined;
    manuallyVerified: boolean;
    requestedAt: string;
    status: VerificationStateStatus;
    tinFingerprint: string;
};

/** @internal */
export const VerificationStateStatus$ = z.nativeEnum(VerificationStateStatus);

/** @internal */
export namespace VerificationState$ {
    export type Inbound = {
        externalTinFingerprint?: string | null | undefined;
        finalizedAt?: string | null | undefined;
        manuallyVerified: boolean;
        requestedAt: string;
        status: VerificationStateStatus;
        tinFingerprint: string;
    };

    export const inboundSchema: z.ZodType<VerificationState, z.ZodTypeDef, Inbound> = z
        .object({
            externalTinFingerprint: z.nullable(z.string()).optional(),
            finalizedAt: z.nullable(z.string()).optional(),
            manuallyVerified: z.boolean(),
            requestedAt: z.string(),
            status: VerificationStateStatus$,
            tinFingerprint: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.externalTinFingerprint === undefined
                    ? null
                    : { externalTinFingerprint: v.externalTinFingerprint }),
                ...(v.finalizedAt === undefined ? null : { finalizedAt: v.finalizedAt }),
                manuallyVerified: v.manuallyVerified,
                requestedAt: v.requestedAt,
                status: v.status,
                tinFingerprint: v.tinFingerprint,
            };
        });

    export type Outbound = {
        externalTinFingerprint?: string | null | undefined;
        finalizedAt?: string | null | undefined;
        manuallyVerified: boolean;
        requestedAt: string;
        status: VerificationStateStatus;
        tinFingerprint: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VerificationState> = z
        .object({
            externalTinFingerprint: z.nullable(z.string()).optional(),
            finalizedAt: z.nullable(z.string()).optional(),
            manuallyVerified: z.boolean(),
            requestedAt: z.string(),
            status: VerificationStateStatus$,
            tinFingerprint: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.externalTinFingerprint === undefined
                    ? null
                    : { externalTinFingerprint: v.externalTinFingerprint }),
                ...(v.finalizedAt === undefined ? null : { finalizedAt: v.finalizedAt }),
                manuallyVerified: v.manuallyVerified,
                requestedAt: v.requestedAt,
                status: v.status,
                tinFingerprint: v.tinFingerprint,
            };
        });
}
