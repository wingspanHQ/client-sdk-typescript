/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    CollaboratorGroupRequirement,
    CollaboratorGroupRequirement$inboundSchema,
    CollaboratorGroupRequirement$Outbound,
    CollaboratorGroupRequirement$outboundSchema,
} from "./collaboratorgrouprequirement.js";
import * as z from "zod";

export type CollaboratorGroupCreateRequest = {
    collaboratorSettings?: { [k: string]: string } | null | undefined;
    description: string;
    eligibilityRequirements?: Array<CollaboratorGroupRequirement> | null | undefined;
    name: string;
};

/** @internal */
export const CollaboratorGroupCreateRequest$inboundSchema: z.ZodType<
    CollaboratorGroupCreateRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    collaboratorSettings: z.nullable(z.record(z.string())).optional(),
    description: z.string(),
    eligibilityRequirements: z
        .nullable(z.array(CollaboratorGroupRequirement$inboundSchema))
        .optional(),
    name: z.string(),
});

/** @internal */
export type CollaboratorGroupCreateRequest$Outbound = {
    collaboratorSettings?: { [k: string]: string } | null | undefined;
    description: string;
    eligibilityRequirements?: Array<CollaboratorGroupRequirement$Outbound> | null | undefined;
    name: string;
};

/** @internal */
export const CollaboratorGroupCreateRequest$outboundSchema: z.ZodType<
    CollaboratorGroupCreateRequest$Outbound,
    z.ZodTypeDef,
    CollaboratorGroupCreateRequest
> = z.object({
    collaboratorSettings: z.nullable(z.record(z.string())).optional(),
    description: z.string(),
    eligibilityRequirements: z
        .nullable(z.array(CollaboratorGroupRequirement$outboundSchema))
        .optional(),
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollaboratorGroupCreateRequest$ {
    /** @deprecated use `CollaboratorGroupCreateRequest$inboundSchema` instead. */
    export const inboundSchema = CollaboratorGroupCreateRequest$inboundSchema;
    /** @deprecated use `CollaboratorGroupCreateRequest$outboundSchema` instead. */
    export const outboundSchema = CollaboratorGroupCreateRequest$outboundSchema;
    /** @deprecated use `CollaboratorGroupCreateRequest$Outbound` instead. */
    export type Outbound = CollaboratorGroupCreateRequest$Outbound;
}
