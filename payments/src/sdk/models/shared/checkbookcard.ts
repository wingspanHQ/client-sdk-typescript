/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { Expose, Type } from "class-transformer";

export enum CheckbookCardBrand {
    AmericanExpress = "AmericanExpress",
    Visa = "Visa",
    Mastercard = "Mastercard",
    Discover = "Discover",
    DinersClub = "DinersClub",
    Jcb = "JCB",
}

export class CheckbookCard extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "address" })
    @Type(() => Address)
    address: Address;

    @SpeakeasyMetadata()
    @Expose({ name: "brand" })
    brand: CheckbookCardBrand;

    @SpeakeasyMetadata()
    @Expose({ name: "cardId" })
    cardId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "expirationMM" })
    expirationMM: string;

    @SpeakeasyMetadata()
    @Expose({ name: "expirationYYYY" })
    expirationYYYY: string;

    @SpeakeasyMetadata()
    @Expose({ name: "last4" })
    last4: string;
}
