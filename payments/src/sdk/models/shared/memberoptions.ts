/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const PayoutPreferences = {
  Standard: "Standard",
  Instant: "Instant",
  Expedited: "Expedited",
  Check: "Check",
  ECheck: "ECheck",
} as const;
export type PayoutPreferences = ClosedEnum<typeof PayoutPreferences>;

export const MemberOptionsWorkflowStatus = {
  Disputed: "Disputed",
  Accepted: "Accepted",
  Resubmitted: "Resubmitted",
} as const;
export type MemberOptionsWorkflowStatus = ClosedEnum<
  typeof MemberOptionsWorkflowStatus
>;

export const MemberOptionsWorkflowSubStatus = {
  Submitted: "Submitted",
} as const;
export type MemberOptionsWorkflowSubStatus = ClosedEnum<
  typeof MemberOptionsWorkflowSubStatus
>;

export type MemberOptions = {
  comment?: string | null | undefined;
  payoutPreferences?: PayoutPreferences | null | undefined;
  workflowStatus?: MemberOptionsWorkflowStatus | null | undefined;
  workflowSubStatus?: MemberOptionsWorkflowSubStatus | null | undefined;
};

/** @internal */
export const PayoutPreferences$inboundSchema: z.ZodNativeEnum<
  typeof PayoutPreferences
> = z.nativeEnum(PayoutPreferences);

/** @internal */
export const PayoutPreferences$outboundSchema: z.ZodNativeEnum<
  typeof PayoutPreferences
> = PayoutPreferences$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayoutPreferences$ {
  /** @deprecated use `PayoutPreferences$inboundSchema` instead. */
  export const inboundSchema = PayoutPreferences$inboundSchema;
  /** @deprecated use `PayoutPreferences$outboundSchema` instead. */
  export const outboundSchema = PayoutPreferences$outboundSchema;
}

/** @internal */
export const MemberOptionsWorkflowStatus$inboundSchema: z.ZodNativeEnum<
  typeof MemberOptionsWorkflowStatus
> = z.nativeEnum(MemberOptionsWorkflowStatus);

/** @internal */
export const MemberOptionsWorkflowStatus$outboundSchema: z.ZodNativeEnum<
  typeof MemberOptionsWorkflowStatus
> = MemberOptionsWorkflowStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberOptionsWorkflowStatus$ {
  /** @deprecated use `MemberOptionsWorkflowStatus$inboundSchema` instead. */
  export const inboundSchema = MemberOptionsWorkflowStatus$inboundSchema;
  /** @deprecated use `MemberOptionsWorkflowStatus$outboundSchema` instead. */
  export const outboundSchema = MemberOptionsWorkflowStatus$outboundSchema;
}

/** @internal */
export const MemberOptionsWorkflowSubStatus$inboundSchema: z.ZodNativeEnum<
  typeof MemberOptionsWorkflowSubStatus
> = z.nativeEnum(MemberOptionsWorkflowSubStatus);

/** @internal */
export const MemberOptionsWorkflowSubStatus$outboundSchema: z.ZodNativeEnum<
  typeof MemberOptionsWorkflowSubStatus
> = MemberOptionsWorkflowSubStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberOptionsWorkflowSubStatus$ {
  /** @deprecated use `MemberOptionsWorkflowSubStatus$inboundSchema` instead. */
  export const inboundSchema = MemberOptionsWorkflowSubStatus$inboundSchema;
  /** @deprecated use `MemberOptionsWorkflowSubStatus$outboundSchema` instead. */
  export const outboundSchema = MemberOptionsWorkflowSubStatus$outboundSchema;
}

/** @internal */
export const MemberOptions$inboundSchema: z.ZodType<
  MemberOptions,
  z.ZodTypeDef,
  unknown
> = z.object({
  comment: z.nullable(z.string()).optional(),
  payoutPreferences: z.nullable(PayoutPreferences$inboundSchema).optional(),
  workflowStatus: z.nullable(MemberOptionsWorkflowStatus$inboundSchema)
    .optional(),
  workflowSubStatus: z.nullable(MemberOptionsWorkflowSubStatus$inboundSchema)
    .optional(),
});

/** @internal */
export type MemberOptions$Outbound = {
  comment?: string | null | undefined;
  payoutPreferences?: string | null | undefined;
  workflowStatus?: string | null | undefined;
  workflowSubStatus?: string | null | undefined;
};

/** @internal */
export const MemberOptions$outboundSchema: z.ZodType<
  MemberOptions$Outbound,
  z.ZodTypeDef,
  MemberOptions
> = z.object({
  comment: z.nullable(z.string()).optional(),
  payoutPreferences: z.nullable(PayoutPreferences$outboundSchema).optional(),
  workflowStatus: z.nullable(MemberOptionsWorkflowStatus$outboundSchema)
    .optional(),
  workflowSubStatus: z.nullable(MemberOptionsWorkflowSubStatus$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberOptions$ {
  /** @deprecated use `MemberOptions$inboundSchema` instead. */
  export const inboundSchema = MemberOptions$inboundSchema;
  /** @deprecated use `MemberOptions$outboundSchema` instead. */
  export const outboundSchema = MemberOptions$outboundSchema;
  /** @deprecated use `MemberOptions$Outbound` instead. */
  export type Outbound = MemberOptions$Outbound;
}
