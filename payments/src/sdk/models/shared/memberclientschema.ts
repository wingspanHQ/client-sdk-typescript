/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c,
  B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$inboundSchema,
  B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$Outbound,
  B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$outboundSchema,
} from "./b9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c.js";
import {
  MemberClientRequirementResponse,
  MemberClientRequirementResponse$inboundSchema,
  MemberClientRequirementResponse$Outbound,
  MemberClientRequirementResponse$outboundSchema,
} from "./memberclientrequirementresponse.js";
import {
  MemberClientWireAccount,
  MemberClientWireAccount$inboundSchema,
  MemberClientWireAccount$Outbound,
  MemberClientWireAccount$outboundSchema,
} from "./memberclientwireaccount.js";
import {
  RedactedMember,
  RedactedMember$inboundSchema,
  RedactedMember$Outbound,
  RedactedMember$outboundSchema,
} from "./redactedmember.js";
import {
  Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f,
  Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$inboundSchema,
  Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$Outbound,
  Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$outboundSchema,
} from "./threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f.js";
import {
  UserRoles,
  UserRoles$inboundSchema,
  UserRoles$Outbound,
  UserRoles$outboundSchema,
} from "./userroles.js";

export const MemberClientSchemaClientUserAccountType = {
  Member: "member",
  Enterprise: "enterprise",
} as const;
export type MemberClientSchemaClientUserAccountType = ClosedEnum<
  typeof MemberClientSchemaClientUserAccountType
>;

export const MemberClientSchemaStatus = {
  Active: "Active",
  Inactive: "Inactive",
  Pending: "Pending",
} as const;
export type MemberClientSchemaStatus = ClosedEnum<
  typeof MemberClientSchemaStatus
>;

export type MemberClientSchema = {
  achCreditAccount: MemberClientWireAccount;
  client: RedactedMember;
  clientId: string;
  clientUserAccountType: MemberClientSchemaClientUserAccountType;
  collaboratorGroupIds?: Array<string> | null | undefined;
  company?: string | null | undefined;
  createdAt: string;
  eligibilityRequirements?:
    | Array<MemberClientRequirementResponse>
    | null
    | undefined;
  emailCC?: Array<string> | null | undefined;
  emailTo: string;
  eventActors: { [k: string]: string };
  form1099Balances:
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c;
  integration?:
    | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f
    | null
    | undefined;
  internationalWireAccount: MemberClientWireAccount;
  labels: { [k: string]: string };
  memberClientId: string;
  name?: string | null | undefined;
  status: MemberClientSchemaStatus;
  updatedAt: string;
  userRoles: UserRoles;
};

/** @internal */
export const MemberClientSchemaClientUserAccountType$inboundSchema:
  z.ZodNativeEnum<typeof MemberClientSchemaClientUserAccountType> = z
    .nativeEnum(MemberClientSchemaClientUserAccountType);

/** @internal */
export const MemberClientSchemaClientUserAccountType$outboundSchema:
  z.ZodNativeEnum<typeof MemberClientSchemaClientUserAccountType> =
    MemberClientSchemaClientUserAccountType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientSchemaClientUserAccountType$ {
  /** @deprecated use `MemberClientSchemaClientUserAccountType$inboundSchema` instead. */
  export const inboundSchema =
    MemberClientSchemaClientUserAccountType$inboundSchema;
  /** @deprecated use `MemberClientSchemaClientUserAccountType$outboundSchema` instead. */
  export const outboundSchema =
    MemberClientSchemaClientUserAccountType$outboundSchema;
}

/** @internal */
export const MemberClientSchemaStatus$inboundSchema: z.ZodNativeEnum<
  typeof MemberClientSchemaStatus
> = z.nativeEnum(MemberClientSchemaStatus);

/** @internal */
export const MemberClientSchemaStatus$outboundSchema: z.ZodNativeEnum<
  typeof MemberClientSchemaStatus
> = MemberClientSchemaStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientSchemaStatus$ {
  /** @deprecated use `MemberClientSchemaStatus$inboundSchema` instead. */
  export const inboundSchema = MemberClientSchemaStatus$inboundSchema;
  /** @deprecated use `MemberClientSchemaStatus$outboundSchema` instead. */
  export const outboundSchema = MemberClientSchemaStatus$outboundSchema;
}

/** @internal */
export const MemberClientSchema$inboundSchema: z.ZodType<
  MemberClientSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  achCreditAccount: MemberClientWireAccount$inboundSchema,
  client: RedactedMember$inboundSchema,
  clientId: z.string(),
  clientUserAccountType: MemberClientSchemaClientUserAccountType$inboundSchema,
  collaboratorGroupIds: z.nullable(z.array(z.string())).optional(),
  company: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  eligibilityRequirements: z.nullable(
    z.array(MemberClientRequirementResponse$inboundSchema),
  ).optional(),
  emailCC: z.nullable(z.array(z.string())).optional(),
  emailTo: z.string(),
  eventActors: z.record(z.string()),
  form1099Balances:
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$inboundSchema,
  integration: z.nullable(
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$inboundSchema,
  ).optional(),
  internationalWireAccount: MemberClientWireAccount$inboundSchema,
  labels: z.record(z.string()),
  memberClientId: z.string(),
  name: z.nullable(z.string()).optional(),
  status: MemberClientSchemaStatus$inboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$inboundSchema,
});

/** @internal */
export type MemberClientSchema$Outbound = {
  achCreditAccount: MemberClientWireAccount$Outbound;
  client: RedactedMember$Outbound;
  clientId: string;
  clientUserAccountType: string;
  collaboratorGroupIds?: Array<string> | null | undefined;
  company?: string | null | undefined;
  createdAt: string;
  eligibilityRequirements?:
    | Array<MemberClientRequirementResponse$Outbound>
    | null
    | undefined;
  emailCC?: Array<string> | null | undefined;
  emailTo: string;
  eventActors: { [k: string]: string };
  form1099Balances:
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$Outbound;
  integration?:
    | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$Outbound
    | null
    | undefined;
  internationalWireAccount: MemberClientWireAccount$Outbound;
  labels: { [k: string]: string };
  memberClientId: string;
  name?: string | null | undefined;
  status: string;
  updatedAt: string;
  userRoles: UserRoles$Outbound;
};

/** @internal */
export const MemberClientSchema$outboundSchema: z.ZodType<
  MemberClientSchema$Outbound,
  z.ZodTypeDef,
  MemberClientSchema
> = z.object({
  achCreditAccount: MemberClientWireAccount$outboundSchema,
  client: RedactedMember$outboundSchema,
  clientId: z.string(),
  clientUserAccountType: MemberClientSchemaClientUserAccountType$outboundSchema,
  collaboratorGroupIds: z.nullable(z.array(z.string())).optional(),
  company: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  eligibilityRequirements: z.nullable(
    z.array(MemberClientRequirementResponse$outboundSchema),
  ).optional(),
  emailCC: z.nullable(z.array(z.string())).optional(),
  emailTo: z.string(),
  eventActors: z.record(z.string()),
  form1099Balances:
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$outboundSchema,
  integration: z.nullable(
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$outboundSchema,
  ).optional(),
  internationalWireAccount: MemberClientWireAccount$outboundSchema,
  labels: z.record(z.string()),
  memberClientId: z.string(),
  name: z.nullable(z.string()).optional(),
  status: MemberClientSchemaStatus$outboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientSchema$ {
  /** @deprecated use `MemberClientSchema$inboundSchema` instead. */
  export const inboundSchema = MemberClientSchema$inboundSchema;
  /** @deprecated use `MemberClientSchema$outboundSchema` instead. */
  export const outboundSchema = MemberClientSchema$outboundSchema;
  /** @deprecated use `MemberClientSchema$Outbound` instead. */
  export type Outbound = MemberClientSchema$Outbound;
}
