/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type ListCustomDataCollaboratorMembersResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
  /**
   * A list of custom data-points
   */
  classes?: Array<shared.AdditionalData> | undefined;
};

/** @internal */
export const ListCustomDataCollaboratorMembersResponse$inboundSchema: z.ZodType<
  ListCustomDataCollaboratorMembersResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
  classes: z.array(shared.AdditionalData$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type ListCustomDataCollaboratorMembersResponse$Outbound = {
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
  classes?: Array<shared.AdditionalData$Outbound> | undefined;
};

/** @internal */
export const ListCustomDataCollaboratorMembersResponse$outboundSchema:
  z.ZodType<
    ListCustomDataCollaboratorMembersResponse$Outbound,
    z.ZodTypeDef,
    ListCustomDataCollaboratorMembersResponse
  > = z.object({
    contentType: z.string(),
    statusCode: z.number().int(),
    rawResponse: z.instanceof(Response).transform(() => {
      throw new Error("Response cannot be serialized");
    }),
    classes: z.array(shared.AdditionalData$outboundSchema).optional(),
  }).transform((v) => {
    return remap$(v, {
      contentType: "ContentType",
      statusCode: "StatusCode",
      rawResponse: "RawResponse",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCustomDataCollaboratorMembersResponse$ {
  /** @deprecated use `ListCustomDataCollaboratorMembersResponse$inboundSchema` instead. */
  export const inboundSchema =
    ListCustomDataCollaboratorMembersResponse$inboundSchema;
  /** @deprecated use `ListCustomDataCollaboratorMembersResponse$outboundSchema` instead. */
  export const outboundSchema =
    ListCustomDataCollaboratorMembersResponse$outboundSchema;
  /** @deprecated use `ListCustomDataCollaboratorMembersResponse$Outbound` instead. */
  export type Outbound = ListCustomDataCollaboratorMembersResponse$Outbound;
}
