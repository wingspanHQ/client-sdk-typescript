/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NextgenSubscriptionPrice, NextgenSubscriptionPrice$ } from "./nextgensubscriptionprice";
import * as z from "zod";

export type SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278 = {
    monthly: NextgenSubscriptionPrice;
    yearly: NextgenSubscriptionPrice;
};

/** @internal */
export namespace SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278$ {
    export type Inbound = {
        Monthly: NextgenSubscriptionPrice$.Inbound;
        Yearly: NextgenSubscriptionPrice$.Inbound;
    };

    export const inboundSchema: z.ZodType<
        SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            Monthly: NextgenSubscriptionPrice$.inboundSchema,
            Yearly: NextgenSubscriptionPrice$.inboundSchema,
        })
        .transform((v) => {
            return {
                monthly: v.Monthly,
                yearly: v.Yearly,
            };
        });

    export type Outbound = {
        Monthly: NextgenSubscriptionPrice$.Outbound;
        Yearly: NextgenSubscriptionPrice$.Outbound;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        SixHundredAndTwentyNined384730e878960087338a314c3117c9abb8337ea9c58dda95ee9d8385a278
    > = z
        .object({
            monthly: NextgenSubscriptionPrice$.outboundSchema,
            yearly: NextgenSubscriptionPrice$.outboundSchema,
        })
        .transform((v) => {
            return {
                Monthly: v.monthly,
                Yearly: v.yearly,
            };
        });
}
