/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  InvoiceAttachments,
  InvoiceAttachments$inboundSchema,
  InvoiceAttachments$Outbound,
  InvoiceAttachments$outboundSchema,
} from "./invoiceattachments.js";

export type InvoicePdfGenerationResponse = {
  attachments: InvoiceAttachments;
  invoiceId: string;
};

/** @internal */
export const InvoicePdfGenerationResponse$inboundSchema: z.ZodType<
  InvoicePdfGenerationResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  attachments: InvoiceAttachments$inboundSchema,
  invoiceId: z.string(),
});

/** @internal */
export type InvoicePdfGenerationResponse$Outbound = {
  attachments: InvoiceAttachments$Outbound;
  invoiceId: string;
};

/** @internal */
export const InvoicePdfGenerationResponse$outboundSchema: z.ZodType<
  InvoicePdfGenerationResponse$Outbound,
  z.ZodTypeDef,
  InvoicePdfGenerationResponse
> = z.object({
  attachments: InvoiceAttachments$outboundSchema,
  invoiceId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoicePdfGenerationResponse$ {
  /** @deprecated use `InvoicePdfGenerationResponse$inboundSchema` instead. */
  export const inboundSchema = InvoicePdfGenerationResponse$inboundSchema;
  /** @deprecated use `InvoicePdfGenerationResponse$outboundSchema` instead. */
  export const outboundSchema = InvoicePdfGenerationResponse$outboundSchema;
  /** @deprecated use `InvoicePdfGenerationResponse$Outbound` instead. */
  export type Outbound = InvoicePdfGenerationResponse$Outbound;
}

export function invoicePdfGenerationResponseToJSON(
  invoicePdfGenerationResponse: InvoicePdfGenerationResponse,
): string {
  return JSON.stringify(
    InvoicePdfGenerationResponse$outboundSchema.parse(
      invoicePdfGenerationResponse,
    ),
  );
}

export function invoicePdfGenerationResponseFromJSON(
  jsonString: string,
): SafeParseResult<InvoicePdfGenerationResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvoicePdfGenerationResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvoicePdfGenerationResponse' from JSON`,
  );
}
