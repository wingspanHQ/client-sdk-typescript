/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeleteMemberClientAssociationRequest = {
    /**
     * Unique identifier
     */
    id: string;
};

export type DeleteMemberClientAssociationResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Describes details of member and client
     */
    memberClientSchema?: shared.MemberClientSchema | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const DeleteMemberClientAssociationRequest$inboundSchema: z.ZodType<
    DeleteMemberClientAssociationRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type DeleteMemberClientAssociationRequest$Outbound = {
    id: string;
};

/** @internal */
export const DeleteMemberClientAssociationRequest$outboundSchema: z.ZodType<
    DeleteMemberClientAssociationRequest$Outbound,
    z.ZodTypeDef,
    DeleteMemberClientAssociationRequest
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMemberClientAssociationRequest$ {
    /** @deprecated use `DeleteMemberClientAssociationRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteMemberClientAssociationRequest$inboundSchema;
    /** @deprecated use `DeleteMemberClientAssociationRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteMemberClientAssociationRequest$outboundSchema;
    /** @deprecated use `DeleteMemberClientAssociationRequest$Outbound` instead. */
    export type Outbound = DeleteMemberClientAssociationRequest$Outbound;
}

/** @internal */
export const DeleteMemberClientAssociationResponse$inboundSchema: z.ZodType<
    DeleteMemberClientAssociationResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        MemberClientSchema: shared.MemberClientSchema$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            MemberClientSchema: "memberClientSchema",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type DeleteMemberClientAssociationResponse$Outbound = {
    ContentType: string;
    MemberClientSchema?: shared.MemberClientSchema$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const DeleteMemberClientAssociationResponse$outboundSchema: z.ZodType<
    DeleteMemberClientAssociationResponse$Outbound,
    z.ZodTypeDef,
    DeleteMemberClientAssociationResponse
> = z
    .object({
        contentType: z.string(),
        memberClientSchema: shared.MemberClientSchema$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            memberClientSchema: "MemberClientSchema",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteMemberClientAssociationResponse$ {
    /** @deprecated use `DeleteMemberClientAssociationResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteMemberClientAssociationResponse$inboundSchema;
    /** @deprecated use `DeleteMemberClientAssociationResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteMemberClientAssociationResponse$outboundSchema;
    /** @deprecated use `DeleteMemberClientAssociationResponse$Outbound` instead. */
    export type Outbound = DeleteMemberClientAssociationResponse$Outbound;
}
