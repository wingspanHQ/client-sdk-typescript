/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Address, Address$ } from "./address";
import { z } from "zod";

export enum Brand {
    AmericanExpress = "AmericanExpress",
    Visa = "Visa",
    Mastercard = "Mastercard",
    Discover = "Discover",
    DinersClub = "DinersClub",
    Jcb = "JCB",
}

export type CheckbookCard = {
    address: Address;
    brand: Brand;
    cardId: string;
    expirationMM: string;
    expirationYYYY: string;
    last4: string;
};

/** @internal */
export const Brand$ = z.nativeEnum(Brand);

/** @internal */
export namespace CheckbookCard$ {
    export type Inbound = {
        address: Address$.Inbound;
        brand: Brand;
        cardId: string;
        expirationMM: string;
        expirationYYYY: string;
        last4: string;
    };

    export const inboundSchema: z.ZodType<CheckbookCard, z.ZodTypeDef, Inbound> = z
        .object({
            address: Address$.inboundSchema,
            brand: Brand$,
            cardId: z.string(),
            expirationMM: z.string(),
            expirationYYYY: z.string(),
            last4: z.string(),
        })
        .transform((v) => {
            return {
                address: v.address,
                brand: v.brand,
                cardId: v.cardId,
                expirationMM: v.expirationMM,
                expirationYYYY: v.expirationYYYY,
                last4: v.last4,
            };
        });

    export type Outbound = {
        address: Address$.Outbound;
        brand: Brand;
        cardId: string;
        expirationMM: string;
        expirationYYYY: string;
        last4: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CheckbookCard> = z
        .object({
            address: Address$.outboundSchema,
            brand: Brand$,
            cardId: z.string(),
            expirationMM: z.string(),
            expirationYYYY: z.string(),
            last4: z.string(),
        })
        .transform((v) => {
            return {
                address: v.address,
                brand: v.brand,
                cardId: v.cardId,
                expirationMM: v.expirationMM,
                expirationYYYY: v.expirationYYYY,
                last4: v.last4,
            };
        });
}
