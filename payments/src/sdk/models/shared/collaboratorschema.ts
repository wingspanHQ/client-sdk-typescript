/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c,
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$,
} from "./b9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c";
import { ClientData, ClientData$ } from "./clientdata";
import { MemberClientFormW9Info, MemberClientFormW9Info$ } from "./memberclientformw9info";
import {
    MemberClientRequirementResponse,
    MemberClientRequirementResponse$,
} from "./memberclientrequirementresponse";
import { MemberClientWireAccount, MemberClientWireAccount$ } from "./memberclientwireaccount";
import { MemberData, MemberData$ } from "./memberdata";
import { RedactedMember, RedactedMember$ } from "./redactedmember";
import {
    TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4,
    TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$,
} from "./twentysixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4";
import { UserRoles, UserRoles$ } from "./userroles";
import { z } from "zod";

export enum CollaboratorSchemaStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
}

export enum TaxStatus {
    Complete = "Complete",
    Failed = "Failed",
    Pending = "Pending",
    Incomplete = "Incomplete",
}

export type CollaboratorSchema = {
    achCreditAccount: MemberClientWireAccount;
    clientData?: ClientData | null | undefined;
    clientId: string;
    collaboratorGroupIds?: Array<string> | null | undefined;
    collaboratorId: string;
    createdAt: string;
    eligibilityRequirements?: Array<MemberClientRequirementResponse> | null | undefined;
    eventActors: Record<string, string>;
    form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c;
    formW9Data?: MemberClientFormW9Info | null | undefined;
    integration?:
        | TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4
        | null
        | undefined;
    internationalWireAccount: MemberClientWireAccount;
    labels: Record<string, string>;
    member: RedactedMember;
    memberData?: MemberData | null | undefined;
    memberId: string;
    status: CollaboratorSchemaStatus;
    taxStatus: TaxStatus;
    updatedAt: string;
    userRoles: UserRoles;
};

/** @internal */
export const CollaboratorSchemaStatus$ = z.nativeEnum(CollaboratorSchemaStatus);

/** @internal */
export const TaxStatus$ = z.nativeEnum(TaxStatus);

/** @internal */
export namespace CollaboratorSchema$ {
    export type Inbound = {
        achCreditAccount: MemberClientWireAccount$.Inbound;
        clientData?: ClientData$.Inbound | null | undefined;
        clientId: string;
        collaboratorGroupIds?: Array<string> | null | undefined;
        collaboratorId: string;
        createdAt: string;
        eligibilityRequirements?:
            | Array<MemberClientRequirementResponse$.Inbound>
            | null
            | undefined;
        eventActors: Record<string, string>;
        form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.Inbound;
        formW9Data?: MemberClientFormW9Info$.Inbound | null | undefined;
        integration?:
            | TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.Inbound
            | null
            | undefined;
        internationalWireAccount: MemberClientWireAccount$.Inbound;
        labels: Record<string, string>;
        member: RedactedMember$.Inbound;
        memberData?: MemberData$.Inbound | null | undefined;
        memberId: string;
        status: CollaboratorSchemaStatus;
        taxStatus: TaxStatus;
        updatedAt: string;
        userRoles: UserRoles$.Inbound;
    };

    export const inboundSchema: z.ZodType<CollaboratorSchema, z.ZodTypeDef, Inbound> = z
        .object({
            achCreditAccount: MemberClientWireAccount$.inboundSchema,
            clientData: ClientData$.inboundSchema.nullable().optional(),
            clientId: z.string(),
            collaboratorGroupIds: z.array(z.string()).nullable().optional(),
            collaboratorId: z.string(),
            createdAt: z.string(),
            eligibilityRequirements: z
                .array(MemberClientRequirementResponse$.inboundSchema)
                .nullable()
                .optional(),
            eventActors: z.record(z.string()),
            form1099Balances:
                B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.inboundSchema,
            formW9Data: MemberClientFormW9Info$.inboundSchema.nullable().optional(),
            integration:
                TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.inboundSchema
                    .nullable()
                    .optional(),
            internationalWireAccount: MemberClientWireAccount$.inboundSchema,
            labels: z.record(z.string()),
            member: RedactedMember$.inboundSchema,
            memberData: MemberData$.inboundSchema.nullable().optional(),
            memberId: z.string(),
            status: CollaboratorSchemaStatus$,
            taxStatus: TaxStatus$,
            updatedAt: z.string(),
            userRoles: UserRoles$.inboundSchema,
        })
        .transform((v) => {
            return {
                achCreditAccount: v.achCreditAccount,
                ...(v.clientData === undefined ? null : { clientData: v.clientData }),
                clientId: v.clientId,
                ...(v.collaboratorGroupIds === undefined
                    ? null
                    : { collaboratorGroupIds: v.collaboratorGroupIds }),
                collaboratorId: v.collaboratorId,
                createdAt: v.createdAt,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                eventActors: v.eventActors,
                form1099Balances: v.form1099Balances,
                ...(v.formW9Data === undefined ? null : { formW9Data: v.formW9Data }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                internationalWireAccount: v.internationalWireAccount,
                labels: v.labels,
                member: v.member,
                ...(v.memberData === undefined ? null : { memberData: v.memberData }),
                memberId: v.memberId,
                status: v.status,
                taxStatus: v.taxStatus,
                updatedAt: v.updatedAt,
                userRoles: v.userRoles,
            };
        });

    export type Outbound = {
        achCreditAccount: MemberClientWireAccount$.Outbound;
        clientData?: ClientData$.Outbound | null | undefined;
        clientId: string;
        collaboratorGroupIds?: Array<string> | null | undefined;
        collaboratorId: string;
        createdAt: string;
        eligibilityRequirements?:
            | Array<MemberClientRequirementResponse$.Outbound>
            | null
            | undefined;
        eventActors: Record<string, string>;
        form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.Outbound;
        formW9Data?: MemberClientFormW9Info$.Outbound | null | undefined;
        integration?:
            | TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.Outbound
            | null
            | undefined;
        internationalWireAccount: MemberClientWireAccount$.Outbound;
        labels: Record<string, string>;
        member: RedactedMember$.Outbound;
        memberData?: MemberData$.Outbound | null | undefined;
        memberId: string;
        status: CollaboratorSchemaStatus;
        taxStatus: TaxStatus;
        updatedAt: string;
        userRoles: UserRoles$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CollaboratorSchema> = z
        .object({
            achCreditAccount: MemberClientWireAccount$.outboundSchema,
            clientData: ClientData$.outboundSchema.nullable().optional(),
            clientId: z.string(),
            collaboratorGroupIds: z.array(z.string()).nullable().optional(),
            collaboratorId: z.string(),
            createdAt: z.string(),
            eligibilityRequirements: z
                .array(MemberClientRequirementResponse$.outboundSchema)
                .nullable()
                .optional(),
            eventActors: z.record(z.string()),
            form1099Balances:
                B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.outboundSchema,
            formW9Data: MemberClientFormW9Info$.outboundSchema.nullable().optional(),
            integration:
                TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.outboundSchema
                    .nullable()
                    .optional(),
            internationalWireAccount: MemberClientWireAccount$.outboundSchema,
            labels: z.record(z.string()),
            member: RedactedMember$.outboundSchema,
            memberData: MemberData$.outboundSchema.nullable().optional(),
            memberId: z.string(),
            status: CollaboratorSchemaStatus$,
            taxStatus: TaxStatus$,
            updatedAt: z.string(),
            userRoles: UserRoles$.outboundSchema,
        })
        .transform((v) => {
            return {
                achCreditAccount: v.achCreditAccount,
                ...(v.clientData === undefined ? null : { clientData: v.clientData }),
                clientId: v.clientId,
                ...(v.collaboratorGroupIds === undefined
                    ? null
                    : { collaboratorGroupIds: v.collaboratorGroupIds }),
                collaboratorId: v.collaboratorId,
                createdAt: v.createdAt,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                eventActors: v.eventActors,
                form1099Balances: v.form1099Balances,
                ...(v.formW9Data === undefined ? null : { formW9Data: v.formW9Data }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                internationalWireAccount: v.internationalWireAccount,
                labels: v.labels,
                member: v.member,
                ...(v.memberData === undefined ? null : { memberData: v.memberData }),
                memberId: v.memberId,
                status: v.status,
                taxStatus: v.taxStatus,
                updatedAt: v.updatedAt,
                userRoles: v.userRoles,
            };
        });
}
