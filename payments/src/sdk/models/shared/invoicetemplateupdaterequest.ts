/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FrequencyUpdate, FrequencyUpdate$ } from "./frequencyupdate";
import { InvoiceUpdateRequest, InvoiceUpdateRequest$ } from "./invoiceupdaterequest";
import { ScheduleDateUpdate, ScheduleDateUpdate$ } from "./scheduledateupdate";
import { z } from "zod";

export enum InvoiceTemplateUpdateRequestStatus {
    Active = "Active",
    Draft = "Draft",
    Expired = "Expired",
    Cancelled = "Cancelled",
}

export type InvoiceTemplateUpdateRequest = {
    accountId?: string | null | undefined;
    autoPaymentRequired?: boolean | null | undefined;
    dueInDays?: number | null | undefined;
    frequency?: FrequencyUpdate | null | undefined;
    invoiceData?: InvoiceUpdateRequest | null | undefined;
    isSchedulingOnly?: boolean | null | undefined;
    labels?: Record<string, string> | null | undefined;
    paymentMethodId?: string | null | undefined;
    scheduleDates?: Array<ScheduleDateUpdate> | null | undefined;
    sendEmails?: boolean | null | undefined;
    status?: InvoiceTemplateUpdateRequestStatus | null | undefined;
};

/** @internal */
export const InvoiceTemplateUpdateRequestStatus$ = z.nativeEnum(InvoiceTemplateUpdateRequestStatus);

/** @internal */
export namespace InvoiceTemplateUpdateRequest$ {
    export type Inbound = {
        accountId?: string | null | undefined;
        autoPaymentRequired?: boolean | null | undefined;
        dueInDays?: number | null | undefined;
        frequency?: FrequencyUpdate$.Inbound | null | undefined;
        invoiceData?: InvoiceUpdateRequest$.Inbound | null | undefined;
        isSchedulingOnly?: boolean | null | undefined;
        labels?: Record<string, string> | null | undefined;
        paymentMethodId?: string | null | undefined;
        scheduleDates?: Array<ScheduleDateUpdate$.Inbound> | null | undefined;
        sendEmails?: boolean | null | undefined;
        status?: InvoiceTemplateUpdateRequestStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<InvoiceTemplateUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            accountId: z.nullable(z.string()).optional(),
            autoPaymentRequired: z.nullable(z.boolean()).optional(),
            dueInDays: z.nullable(z.number()).optional(),
            frequency: z.nullable(FrequencyUpdate$.inboundSchema).optional(),
            invoiceData: z.nullable(InvoiceUpdateRequest$.inboundSchema).optional(),
            isSchedulingOnly: z.nullable(z.boolean()).optional(),
            labels: z.nullable(z.record(z.string())).optional(),
            paymentMethodId: z.nullable(z.string()).optional(),
            scheduleDates: z.nullable(z.array(ScheduleDateUpdate$.inboundSchema)).optional(),
            sendEmails: z.nullable(z.boolean()).optional(),
            status: z.nullable(InvoiceTemplateUpdateRequestStatus$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.autoPaymentRequired === undefined
                    ? null
                    : { autoPaymentRequired: v.autoPaymentRequired }),
                ...(v.dueInDays === undefined ? null : { dueInDays: v.dueInDays }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.invoiceData === undefined ? null : { invoiceData: v.invoiceData }),
                ...(v.isSchedulingOnly === undefined
                    ? null
                    : { isSchedulingOnly: v.isSchedulingOnly }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.paymentMethodId === undefined
                    ? null
                    : { paymentMethodId: v.paymentMethodId }),
                ...(v.scheduleDates === undefined ? null : { scheduleDates: v.scheduleDates }),
                ...(v.sendEmails === undefined ? null : { sendEmails: v.sendEmails }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        accountId?: string | null | undefined;
        autoPaymentRequired?: boolean | null | undefined;
        dueInDays?: number | null | undefined;
        frequency?: FrequencyUpdate$.Outbound | null | undefined;
        invoiceData?: InvoiceUpdateRequest$.Outbound | null | undefined;
        isSchedulingOnly?: boolean | null | undefined;
        labels?: Record<string, string> | null | undefined;
        paymentMethodId?: string | null | undefined;
        scheduleDates?: Array<ScheduleDateUpdate$.Outbound> | null | undefined;
        sendEmails?: boolean | null | undefined;
        status?: InvoiceTemplateUpdateRequestStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceTemplateUpdateRequest> = z
        .object({
            accountId: z.nullable(z.string()).optional(),
            autoPaymentRequired: z.nullable(z.boolean()).optional(),
            dueInDays: z.nullable(z.number()).optional(),
            frequency: z.nullable(FrequencyUpdate$.outboundSchema).optional(),
            invoiceData: z.nullable(InvoiceUpdateRequest$.outboundSchema).optional(),
            isSchedulingOnly: z.nullable(z.boolean()).optional(),
            labels: z.nullable(z.record(z.string())).optional(),
            paymentMethodId: z.nullable(z.string()).optional(),
            scheduleDates: z.nullable(z.array(ScheduleDateUpdate$.outboundSchema)).optional(),
            sendEmails: z.nullable(z.boolean()).optional(),
            status: z.nullable(InvoiceTemplateUpdateRequestStatus$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.accountId === undefined ? null : { accountId: v.accountId }),
                ...(v.autoPaymentRequired === undefined
                    ? null
                    : { autoPaymentRequired: v.autoPaymentRequired }),
                ...(v.dueInDays === undefined ? null : { dueInDays: v.dueInDays }),
                ...(v.frequency === undefined ? null : { frequency: v.frequency }),
                ...(v.invoiceData === undefined ? null : { invoiceData: v.invoiceData }),
                ...(v.isSchedulingOnly === undefined
                    ? null
                    : { isSchedulingOnly: v.isSchedulingOnly }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.paymentMethodId === undefined
                    ? null
                    : { paymentMethodId: v.paymentMethodId }),
                ...(v.scheduleDates === undefined ? null : { scheduleDates: v.scheduleDates }),
                ...(v.sendEmails === undefined ? null : { sendEmails: v.sendEmails }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
