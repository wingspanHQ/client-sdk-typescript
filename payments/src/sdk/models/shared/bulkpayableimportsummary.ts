/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type BulkPayableImportSummary = {
    deductionCollaboratorsCount: number;
    netImportAmount: number;
    payableCollaboratorsCount: number;
    toBeCreatedDeductionsCount: number;
    toBeCreatedPayablesCount: number;
    toBeUpdatedDeductionsCount: number;
    toBeUpdatedPayablesCount: number;
    totalDeductionsAmount: number;
    totalPayableItems: number;
    totalPayablesAmount: number;
};

/** @internal */
export namespace BulkPayableImportSummary$ {
    export type Inbound = {
        deductionCollaboratorsCount: number;
        netImportAmount: number;
        payableCollaboratorsCount: number;
        toBeCreatedDeductionsCount: number;
        toBeCreatedPayablesCount: number;
        toBeUpdatedDeductionsCount: number;
        toBeUpdatedPayablesCount: number;
        totalDeductionsAmount: number;
        totalPayableItems: number;
        totalPayablesAmount: number;
    };

    export const inboundSchema: z.ZodType<BulkPayableImportSummary, z.ZodTypeDef, Inbound> = z
        .object({
            deductionCollaboratorsCount: z.number(),
            netImportAmount: z.number(),
            payableCollaboratorsCount: z.number(),
            toBeCreatedDeductionsCount: z.number(),
            toBeCreatedPayablesCount: z.number(),
            toBeUpdatedDeductionsCount: z.number(),
            toBeUpdatedPayablesCount: z.number(),
            totalDeductionsAmount: z.number(),
            totalPayableItems: z.number(),
            totalPayablesAmount: z.number(),
        })
        .transform((v) => {
            return {
                deductionCollaboratorsCount: v.deductionCollaboratorsCount,
                netImportAmount: v.netImportAmount,
                payableCollaboratorsCount: v.payableCollaboratorsCount,
                toBeCreatedDeductionsCount: v.toBeCreatedDeductionsCount,
                toBeCreatedPayablesCount: v.toBeCreatedPayablesCount,
                toBeUpdatedDeductionsCount: v.toBeUpdatedDeductionsCount,
                toBeUpdatedPayablesCount: v.toBeUpdatedPayablesCount,
                totalDeductionsAmount: v.totalDeductionsAmount,
                totalPayableItems: v.totalPayableItems,
                totalPayablesAmount: v.totalPayablesAmount,
            };
        });

    export type Outbound = {
        deductionCollaboratorsCount: number;
        netImportAmount: number;
        payableCollaboratorsCount: number;
        toBeCreatedDeductionsCount: number;
        toBeCreatedPayablesCount: number;
        toBeUpdatedDeductionsCount: number;
        toBeUpdatedPayablesCount: number;
        totalDeductionsAmount: number;
        totalPayableItems: number;
        totalPayablesAmount: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BulkPayableImportSummary> = z
        .object({
            deductionCollaboratorsCount: z.number(),
            netImportAmount: z.number(),
            payableCollaboratorsCount: z.number(),
            toBeCreatedDeductionsCount: z.number(),
            toBeCreatedPayablesCount: z.number(),
            toBeUpdatedDeductionsCount: z.number(),
            toBeUpdatedPayablesCount: z.number(),
            totalDeductionsAmount: z.number(),
            totalPayableItems: z.number(),
            totalPayablesAmount: z.number(),
        })
        .transform((v) => {
            return {
                deductionCollaboratorsCount: v.deductionCollaboratorsCount,
                netImportAmount: v.netImportAmount,
                payableCollaboratorsCount: v.payableCollaboratorsCount,
                toBeCreatedDeductionsCount: v.toBeCreatedDeductionsCount,
                toBeCreatedPayablesCount: v.toBeCreatedPayablesCount,
                toBeUpdatedDeductionsCount: v.toBeUpdatedDeductionsCount,
                toBeUpdatedPayablesCount: v.toBeUpdatedPayablesCount,
                totalDeductionsAmount: v.totalDeductionsAmount,
                totalPayableItems: v.totalPayableItems,
                totalPayablesAmount: v.totalPayablesAmount,
            };
        });
}
