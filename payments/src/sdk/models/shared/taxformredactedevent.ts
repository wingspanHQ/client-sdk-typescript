/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    RedactedMember,
    RedactedMember$inboundSchema,
    RedactedMember$Outbound,
    RedactedMember$outboundSchema,
} from "./redactedmember.js";
import * as z from "zod";

export type TaxFormRedactedEventData = {};

export const EventType = {
    PayerUpdatedData: "PayerUpdatedData",
    PayerManuallyUpdatedStatus: "PayerManuallyUpdatedStatus",
    RecipientUpdatedData: "RecipientUpdatedData",
    RecipientSyncEnabled: "RecipientSyncEnabled",
    InvitationSent: "InvitationSent",
    InvitationOpened: "InvitationOpened",
    RecipientSignedUp: "RecipientSignedUp",
    RecipientSharedW9Info: "RecipientSharedW9Info",
    TINVerificationRequested: "TINVerificationRequested",
    TINVerificationSucceeded: "TINVerificationSucceeded",
    TINVerificationFailed: "TINVerificationFailed",
    FormSubmittedToIRS: "FormSubmittedToIRS",
    FormAcceptedByIRS: "FormAcceptedByIRS",
    FormRejectedByIRS: "FormRejectedByIRS",
    CorrectionRequested: "CorrectionRequested",
    CorrectionAccepted: "CorrectionAccepted",
    CorrectionRejected: "CorrectionRejected",
    Emailed1099CopyDelivered: "Emailed1099CopyDelivered",
    Emailed1099CopyOpened: "Emailed1099CopyOpened",
    Emailed1099CopyDownloaded: "Emailed1099CopyDownloaded",
    Mailed1099CopyDelivered: "Mailed1099CopyDelivered",
    Mailed1099CopyReturnedToSender: "Mailed1099CopyReturnedToSender",
    Remailed1099CopyDelivered: "Remailed1099CopyDelivered",
} as const;
export type EventType = ClosedEnum<typeof EventType>;

export type PreviousData = {};

export const RecipientSyncToggled = {
    Enabled: "Enabled",
    Disabled: "Disabled",
} as const;
export type RecipientSyncToggled = ClosedEnum<typeof RecipientSyncToggled>;

export const TriggeredBy = {
    Payer: "Payer",
    Payee: "Payee",
    System: "System",
} as const;
export type TriggeredBy = ClosedEnum<typeof TriggeredBy>;

export type TaxFormRedactedEvent = {
    data?: TaxFormRedactedEventData | null | undefined;
    eventActor?: RedactedMember | null | undefined;
    eventActorId?: string | null | undefined;
    eventType: EventType;
    previousData?: PreviousData | null | undefined;
    recipientSyncToggled?: RecipientSyncToggled | null | undefined;
    timestamp: string;
    triggeredBy: TriggeredBy;
};

/** @internal */
export const TaxFormRedactedEventData$inboundSchema: z.ZodType<
    TaxFormRedactedEventData,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type TaxFormRedactedEventData$Outbound = {};

/** @internal */
export const TaxFormRedactedEventData$outboundSchema: z.ZodType<
    TaxFormRedactedEventData$Outbound,
    z.ZodTypeDef,
    TaxFormRedactedEventData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxFormRedactedEventData$ {
    /** @deprecated use `TaxFormRedactedEventData$inboundSchema` instead. */
    export const inboundSchema = TaxFormRedactedEventData$inboundSchema;
    /** @deprecated use `TaxFormRedactedEventData$outboundSchema` instead. */
    export const outboundSchema = TaxFormRedactedEventData$outboundSchema;
    /** @deprecated use `TaxFormRedactedEventData$Outbound` instead. */
    export type Outbound = TaxFormRedactedEventData$Outbound;
}

/** @internal */
export const EventType$inboundSchema: z.ZodNativeEnum<typeof EventType> = z.nativeEnum(EventType);

/** @internal */
export const EventType$outboundSchema: z.ZodNativeEnum<typeof EventType> = EventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EventType$ {
    /** @deprecated use `EventType$inboundSchema` instead. */
    export const inboundSchema = EventType$inboundSchema;
    /** @deprecated use `EventType$outboundSchema` instead. */
    export const outboundSchema = EventType$outboundSchema;
}

/** @internal */
export const PreviousData$inboundSchema: z.ZodType<PreviousData, z.ZodTypeDef, unknown> = z.object(
    {}
);

/** @internal */
export type PreviousData$Outbound = {};

/** @internal */
export const PreviousData$outboundSchema: z.ZodType<
    PreviousData$Outbound,
    z.ZodTypeDef,
    PreviousData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PreviousData$ {
    /** @deprecated use `PreviousData$inboundSchema` instead. */
    export const inboundSchema = PreviousData$inboundSchema;
    /** @deprecated use `PreviousData$outboundSchema` instead. */
    export const outboundSchema = PreviousData$outboundSchema;
    /** @deprecated use `PreviousData$Outbound` instead. */
    export type Outbound = PreviousData$Outbound;
}

/** @internal */
export const RecipientSyncToggled$inboundSchema: z.ZodNativeEnum<typeof RecipientSyncToggled> =
    z.nativeEnum(RecipientSyncToggled);

/** @internal */
export const RecipientSyncToggled$outboundSchema: z.ZodNativeEnum<typeof RecipientSyncToggled> =
    RecipientSyncToggled$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RecipientSyncToggled$ {
    /** @deprecated use `RecipientSyncToggled$inboundSchema` instead. */
    export const inboundSchema = RecipientSyncToggled$inboundSchema;
    /** @deprecated use `RecipientSyncToggled$outboundSchema` instead. */
    export const outboundSchema = RecipientSyncToggled$outboundSchema;
}

/** @internal */
export const TriggeredBy$inboundSchema: z.ZodNativeEnum<typeof TriggeredBy> =
    z.nativeEnum(TriggeredBy);

/** @internal */
export const TriggeredBy$outboundSchema: z.ZodNativeEnum<typeof TriggeredBy> =
    TriggeredBy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TriggeredBy$ {
    /** @deprecated use `TriggeredBy$inboundSchema` instead. */
    export const inboundSchema = TriggeredBy$inboundSchema;
    /** @deprecated use `TriggeredBy$outboundSchema` instead. */
    export const outboundSchema = TriggeredBy$outboundSchema;
}

/** @internal */
export const TaxFormRedactedEvent$inboundSchema: z.ZodType<
    TaxFormRedactedEvent,
    z.ZodTypeDef,
    unknown
> = z.object({
    data: z.nullable(z.lazy(() => TaxFormRedactedEventData$inboundSchema)).optional(),
    eventActor: z.nullable(RedactedMember$inboundSchema).optional(),
    eventActorId: z.nullable(z.string()).optional(),
    eventType: EventType$inboundSchema,
    previousData: z.nullable(z.lazy(() => PreviousData$inboundSchema)).optional(),
    recipientSyncToggled: z.nullable(RecipientSyncToggled$inboundSchema).optional(),
    timestamp: z.string(),
    triggeredBy: TriggeredBy$inboundSchema,
});

/** @internal */
export type TaxFormRedactedEvent$Outbound = {
    data?: TaxFormRedactedEventData$Outbound | null | undefined;
    eventActor?: RedactedMember$Outbound | null | undefined;
    eventActorId?: string | null | undefined;
    eventType: string;
    previousData?: PreviousData$Outbound | null | undefined;
    recipientSyncToggled?: string | null | undefined;
    timestamp: string;
    triggeredBy: string;
};

/** @internal */
export const TaxFormRedactedEvent$outboundSchema: z.ZodType<
    TaxFormRedactedEvent$Outbound,
    z.ZodTypeDef,
    TaxFormRedactedEvent
> = z.object({
    data: z.nullable(z.lazy(() => TaxFormRedactedEventData$outboundSchema)).optional(),
    eventActor: z.nullable(RedactedMember$outboundSchema).optional(),
    eventActorId: z.nullable(z.string()).optional(),
    eventType: EventType$outboundSchema,
    previousData: z.nullable(z.lazy(() => PreviousData$outboundSchema)).optional(),
    recipientSyncToggled: z.nullable(RecipientSyncToggled$outboundSchema).optional(),
    timestamp: z.string(),
    triggeredBy: TriggeredBy$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxFormRedactedEvent$ {
    /** @deprecated use `TaxFormRedactedEvent$inboundSchema` instead. */
    export const inboundSchema = TaxFormRedactedEvent$inboundSchema;
    /** @deprecated use `TaxFormRedactedEvent$outboundSchema` instead. */
    export const outboundSchema = TaxFormRedactedEvent$outboundSchema;
    /** @deprecated use `TaxFormRedactedEvent$Outbound` instead. */
    export type Outbound = TaxFormRedactedEvent$Outbound;
}
