/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Calculate1099Request = {
    memberClientId: string;
    year: number;
};

/** @internal */
export namespace Calculate1099Request$ {
    export type Inbound = {
        memberClientId: string;
        year: number;
    };

    export const inboundSchema: z.ZodType<Calculate1099Request, z.ZodTypeDef, Inbound> = z
        .object({
            memberClientId: z.string(),
            year: z.number(),
        })
        .transform((v) => {
            return {
                memberClientId: v.memberClientId,
                year: v.year,
            };
        });

    export type Outbound = {
        memberClientId: string;
        year: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Calculate1099Request> = z
        .object({
            memberClientId: z.string(),
            year: z.number(),
        })
        .transform((v) => {
            return {
                memberClientId: v.memberClientId,
                year: v.year,
            };
        });
}
