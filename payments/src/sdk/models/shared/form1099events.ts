/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Form1099Events = {
    acceptedByCollaboratorAt?: string | null | undefined;
    createdAt?: string | null | undefined;
    postFilingSuggestionMadeAt?: string | null | undefined;
    postFilingSuggestionResolvedAt?: string | null | undefined;
    submittedForCollaboratorReviewAt?: string | null | undefined;
    suggestionMadeAt?: string | null | undefined;
    suggestionResolvedAt?: string | null | undefined;
    updatedAt?: string | null | undefined;
};

/** @internal */
export namespace Form1099Events$ {
    export type Inbound = {
        acceptedByCollaboratorAt?: string | null | undefined;
        createdAt?: string | null | undefined;
        postFilingSuggestionMadeAt?: string | null | undefined;
        postFilingSuggestionResolvedAt?: string | null | undefined;
        submittedForCollaboratorReviewAt?: string | null | undefined;
        suggestionMadeAt?: string | null | undefined;
        suggestionResolvedAt?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<Form1099Events, z.ZodTypeDef, Inbound> = z
        .object({
            acceptedByCollaboratorAt: z.string().nullable().optional(),
            createdAt: z.string().nullable().optional(),
            postFilingSuggestionMadeAt: z.string().nullable().optional(),
            postFilingSuggestionResolvedAt: z.string().nullable().optional(),
            submittedForCollaboratorReviewAt: z.string().nullable().optional(),
            suggestionMadeAt: z.string().nullable().optional(),
            suggestionResolvedAt: z.string().nullable().optional(),
            updatedAt: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.acceptedByCollaboratorAt === undefined
                    ? null
                    : { acceptedByCollaboratorAt: v.acceptedByCollaboratorAt }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.postFilingSuggestionMadeAt === undefined
                    ? null
                    : { postFilingSuggestionMadeAt: v.postFilingSuggestionMadeAt }),
                ...(v.postFilingSuggestionResolvedAt === undefined
                    ? null
                    : { postFilingSuggestionResolvedAt: v.postFilingSuggestionResolvedAt }),
                ...(v.submittedForCollaboratorReviewAt === undefined
                    ? null
                    : { submittedForCollaboratorReviewAt: v.submittedForCollaboratorReviewAt }),
                ...(v.suggestionMadeAt === undefined
                    ? null
                    : { suggestionMadeAt: v.suggestionMadeAt }),
                ...(v.suggestionResolvedAt === undefined
                    ? null
                    : { suggestionResolvedAt: v.suggestionResolvedAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });

    export type Outbound = {
        acceptedByCollaboratorAt?: string | null | undefined;
        createdAt?: string | null | undefined;
        postFilingSuggestionMadeAt?: string | null | undefined;
        postFilingSuggestionResolvedAt?: string | null | undefined;
        submittedForCollaboratorReviewAt?: string | null | undefined;
        suggestionMadeAt?: string | null | undefined;
        suggestionResolvedAt?: string | null | undefined;
        updatedAt?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Form1099Events> = z
        .object({
            acceptedByCollaboratorAt: z.string().nullable().optional(),
            createdAt: z.string().nullable().optional(),
            postFilingSuggestionMadeAt: z.string().nullable().optional(),
            postFilingSuggestionResolvedAt: z.string().nullable().optional(),
            submittedForCollaboratorReviewAt: z.string().nullable().optional(),
            suggestionMadeAt: z.string().nullable().optional(),
            suggestionResolvedAt: z.string().nullable().optional(),
            updatedAt: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.acceptedByCollaboratorAt === undefined
                    ? null
                    : { acceptedByCollaboratorAt: v.acceptedByCollaboratorAt }),
                ...(v.createdAt === undefined ? null : { createdAt: v.createdAt }),
                ...(v.postFilingSuggestionMadeAt === undefined
                    ? null
                    : { postFilingSuggestionMadeAt: v.postFilingSuggestionMadeAt }),
                ...(v.postFilingSuggestionResolvedAt === undefined
                    ? null
                    : { postFilingSuggestionResolvedAt: v.postFilingSuggestionResolvedAt }),
                ...(v.submittedForCollaboratorReviewAt === undefined
                    ? null
                    : { submittedForCollaboratorReviewAt: v.submittedForCollaboratorReviewAt }),
                ...(v.suggestionMadeAt === undefined
                    ? null
                    : { suggestionMadeAt: v.suggestionMadeAt }),
                ...(v.suggestionResolvedAt === undefined
                    ? null
                    : { suggestionResolvedAt: v.suggestionResolvedAt }),
                ...(v.updatedAt === undefined ? null : { updatedAt: v.updatedAt }),
            };
        });
}
