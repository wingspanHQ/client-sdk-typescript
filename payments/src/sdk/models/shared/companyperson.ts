/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type CompanyPerson = {
    memberId: string;
    ownershipPercentage?: number | null | undefined;
};

/** @internal */
export namespace CompanyPerson$ {
    export type Inbound = {
        memberId: string;
        ownershipPercentage?: number | null | undefined;
    };

    export const inboundSchema: z.ZodType<CompanyPerson, z.ZodTypeDef, Inbound> = z
        .object({
            memberId: z.string(),
            ownershipPercentage: z.number().nullable().optional(),
        })
        .transform((v) => {
            return {
                memberId: v.memberId,
                ...(v.ownershipPercentage === undefined
                    ? null
                    : { ownershipPercentage: v.ownershipPercentage }),
            };
        });

    export type Outbound = {
        memberId: string;
        ownershipPercentage?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CompanyPerson> = z
        .object({
            memberId: z.string(),
            ownershipPercentage: z.number().nullable().optional(),
        })
        .transform((v) => {
            return {
                memberId: v.memberId,
                ...(v.ownershipPercentage === undefined
                    ? null
                    : { ownershipPercentage: v.ownershipPercentage }),
            };
        });
}
