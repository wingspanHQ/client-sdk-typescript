/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum PayoutDestinationUpdateDestinationType {
    Account = "Account",
    Card = "Card",
    WeGift = "WeGift",
    LessThanNilGreaterThan = "<nil>",
}

export enum PayoutDestinationUpdatePayoutMethod {
    Standard = "Standard",
    Instant = "Instant",
    Expedited = "Expedited",
    Check = "Check",
    ECheck = "ECheck",
    LessThanNilGreaterThan = "<nil>",
}

export type PayoutDestinationUpdate = {
    destinationId?: string | null | undefined;
    destinationType?: PayoutDestinationUpdateDestinationType | null | undefined;
    payoutMethod?: PayoutDestinationUpdatePayoutMethod | null | undefined;
    percentage?: number | null | undefined;
};

/** @internal */
export const PayoutDestinationUpdateDestinationType$ = z.nativeEnum(
    PayoutDestinationUpdateDestinationType
);

/** @internal */
export const PayoutDestinationUpdatePayoutMethod$ = z.nativeEnum(
    PayoutDestinationUpdatePayoutMethod
);

/** @internal */
export namespace PayoutDestinationUpdate$ {
    export type Inbound = {
        destinationId?: string | null | undefined;
        destinationType?: PayoutDestinationUpdateDestinationType | null | undefined;
        payoutMethod?: PayoutDestinationUpdatePayoutMethod | null | undefined;
        percentage?: number | null | undefined;
    };

    export const inboundSchema: z.ZodType<PayoutDestinationUpdate, z.ZodTypeDef, Inbound> = z
        .object({
            destinationId: z.nullable(z.string()).optional(),
            destinationType: z.nullable(PayoutDestinationUpdateDestinationType$).optional(),
            payoutMethod: z.nullable(PayoutDestinationUpdatePayoutMethod$).optional(),
            percentage: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.destinationId === undefined ? null : { destinationId: v.destinationId }),
                ...(v.destinationType === undefined
                    ? null
                    : { destinationType: v.destinationType }),
                ...(v.payoutMethod === undefined ? null : { payoutMethod: v.payoutMethod }),
                ...(v.percentage === undefined ? null : { percentage: v.percentage }),
            };
        });

    export type Outbound = {
        destinationId?: string | null | undefined;
        destinationType?: PayoutDestinationUpdateDestinationType | null | undefined;
        payoutMethod?: PayoutDestinationUpdatePayoutMethod | null | undefined;
        percentage?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PayoutDestinationUpdate> = z
        .object({
            destinationId: z.nullable(z.string()).optional(),
            destinationType: z.nullable(PayoutDestinationUpdateDestinationType$).optional(),
            payoutMethod: z.nullable(PayoutDestinationUpdatePayoutMethod$).optional(),
            percentage: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.destinationId === undefined ? null : { destinationId: v.destinationId }),
                ...(v.destinationType === undefined
                    ? null
                    : { destinationType: v.destinationType }),
                ...(v.payoutMethod === undefined ? null : { payoutMethod: v.payoutMethod }),
                ...(v.percentage === undefined ? null : { percentage: v.percentage }),
            };
        });
}
