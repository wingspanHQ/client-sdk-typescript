/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum GrowthSource {
    Partner = "Partner",
    Referral = "Referral",
    Collaborator = "Collaborator",
    Team = "Team",
    Invoice = "Invoice",
    Content = "Content",
    Enterprise = "Enterprise",
    EnterpriseClient = "EnterpriseClient",
}

export enum ActivityContextType {
    Form1099 = "Form1099",
}

export type ActivityContext = {
    growthSource?: GrowthSource | null | undefined;
    growthSourceName?: string | null | undefined;
    type?: ActivityContextType | null | undefined;
};

/** @internal */
export const GrowthSource$ = z.nativeEnum(GrowthSource);

/** @internal */
export const ActivityContextType$ = z.nativeEnum(ActivityContextType);

/** @internal */
export namespace ActivityContext$ {
    export type Inbound = {
        growthSource?: GrowthSource | null | undefined;
        growthSourceName?: string | null | undefined;
        type?: ActivityContextType | null | undefined;
    };

    export const inboundSchema: z.ZodType<ActivityContext, z.ZodTypeDef, Inbound> = z
        .object({
            growthSource: z.nullable(GrowthSource$).optional(),
            growthSourceName: z.nullable(z.string()).optional(),
            type: z.nullable(ActivityContextType$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.growthSource === undefined ? null : { growthSource: v.growthSource }),
                ...(v.growthSourceName === undefined
                    ? null
                    : { growthSourceName: v.growthSourceName }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        growthSource?: GrowthSource | null | undefined;
        growthSourceName?: string | null | undefined;
        type?: ActivityContextType | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ActivityContext> = z
        .object({
            growthSource: z.nullable(GrowthSource$).optional(),
            growthSourceName: z.nullable(z.string()).optional(),
            type: z.nullable(ActivityContextType$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.growthSource === undefined ? null : { growthSource: v.growthSource }),
                ...(v.growthSourceName === undefined
                    ? null
                    : { growthSourceName: v.growthSourceName }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}
