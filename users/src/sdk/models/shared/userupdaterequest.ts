/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { UserNotificationSettings, UserNotificationSettings$ } from "./usernotificationsettings";
import { UserProfile, UserProfile$ } from "./userprofile";
import * as z from "zod";

export type UserUpdateRequest = {
    email?: string | null | undefined;
    notificationSettings?: UserNotificationSettings | null | undefined;
    password?: string | null | undefined;
    profile?: UserProfile | null | undefined;
    tag?: string | null | undefined;
};

/** @internal */
export namespace UserUpdateRequest$ {
    export type Inbound = {
        email?: string | null | undefined;
        notificationSettings?: UserNotificationSettings$.Inbound | null | undefined;
        password?: string | null | undefined;
        profile?: UserProfile$.Inbound | null | undefined;
        tag?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<UserUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.nullable(z.string()).optional(),
            notificationSettings: z.nullable(UserNotificationSettings$.inboundSchema).optional(),
            password: z.nullable(z.string()).optional(),
            profile: z.nullable(UserProfile$.inboundSchema).optional(),
            tag: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.notificationSettings === undefined
                    ? null
                    : { notificationSettings: v.notificationSettings }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profile === undefined ? null : { profile: v.profile }),
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });

    export type Outbound = {
        email?: string | null | undefined;
        notificationSettings?: UserNotificationSettings$.Outbound | null | undefined;
        password?: string | null | undefined;
        profile?: UserProfile$.Outbound | null | undefined;
        tag?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UserUpdateRequest> = z
        .object({
            email: z.nullable(z.string()).optional(),
            notificationSettings: z.nullable(UserNotificationSettings$.outboundSchema).optional(),
            password: z.nullable(z.string()).optional(),
            profile: z.nullable(UserProfile$.outboundSchema).optional(),
            tag: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.email === undefined ? null : { email: v.email }),
                ...(v.notificationSettings === undefined
                    ? null
                    : { notificationSettings: v.notificationSettings }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profile === undefined ? null : { profile: v.profile }),
                ...(v.tag === undefined ? null : { tag: v.tag }),
            };
        });
}
