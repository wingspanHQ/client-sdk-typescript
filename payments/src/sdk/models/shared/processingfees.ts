/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { Fee, Fee$inboundSchema, Fee$Outbound, Fee$outboundSchema } from "./fee.js";
import * as z from "zod";

export type ProcessingFees = {
    creditCardFee?: Fee | null | undefined;
    instantPayoutFee?: Fee | null | undefined;
};

/** @internal */
export const ProcessingFees$inboundSchema: z.ZodType<ProcessingFees, z.ZodTypeDef, unknown> =
    z.object({
        creditCardFee: z.nullable(Fee$inboundSchema).optional(),
        instantPayoutFee: z.nullable(Fee$inboundSchema).optional(),
    });

/** @internal */
export type ProcessingFees$Outbound = {
    creditCardFee?: Fee$Outbound | null | undefined;
    instantPayoutFee?: Fee$Outbound | null | undefined;
};

/** @internal */
export const ProcessingFees$outboundSchema: z.ZodType<
    ProcessingFees$Outbound,
    z.ZodTypeDef,
    ProcessingFees
> = z.object({
    creditCardFee: z.nullable(Fee$outboundSchema).optional(),
    instantPayoutFee: z.nullable(Fee$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProcessingFees$ {
    /** @deprecated use `ProcessingFees$inboundSchema` instead. */
    export const inboundSchema = ProcessingFees$inboundSchema;
    /** @deprecated use `ProcessingFees$outboundSchema` instead. */
    export const outboundSchema = ProcessingFees$outboundSchema;
    /** @deprecated use `ProcessingFees$Outbound` instead. */
    export type Outbound = ProcessingFees$Outbound;
}
