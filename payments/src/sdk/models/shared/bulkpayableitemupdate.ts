/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const BulkPayableItemUpdatePayableStatus = {
  Draft: "Draft",
  Open: "Open",
  Approved: "Approved",
  Paid: "Paid",
  Cancelled: "Cancelled",
} as const;
export type BulkPayableItemUpdatePayableStatus = ClosedEnum<
  typeof BulkPayableItemUpdatePayableStatus
>;

export const BulkPayableItemUpdateWorkflowSubStatus = {
  Submitted: "Submitted",
} as const;
export type BulkPayableItemUpdateWorkflowSubStatus = ClosedEnum<
  typeof BulkPayableItemUpdateWorkflowSubStatus
>;

export type BulkPayableItemUpdate = {
  amount?: number | null | undefined;
  attachmentId?: string | null | undefined;
  bulkPayableBatchId?: string | null | undefined;
  bulkPayableItemMergeKey?: string | null | undefined;
  bulkPayableItemReference?: string | null | undefined;
  clientId?: string | null | undefined;
  collaboratorEmail?: string | null | undefined;
  collaboratorExternalId?: string | null | undefined;
  collaboratorId?: string | null | undefined;
  dueDate?: string | null | undefined;
  labels?: { [k: string]: string } | null | undefined;
  lineItemDescription?: string | null | undefined;
  lineItemDetail?: string | null | undefined;
  paidDate?: string | null | undefined;
  payableNotes?: string | null | undefined;
  payableStatus?: BulkPayableItemUpdatePayableStatus | null | undefined;
  reimbursableExpense?: boolean | null | undefined;
  workflowSubStatus?: BulkPayableItemUpdateWorkflowSubStatus | null | undefined;
};

/** @internal */
export const BulkPayableItemUpdatePayableStatus$inboundSchema: z.ZodNativeEnum<
  typeof BulkPayableItemUpdatePayableStatus
> = z.nativeEnum(BulkPayableItemUpdatePayableStatus);

/** @internal */
export const BulkPayableItemUpdatePayableStatus$outboundSchema: z.ZodNativeEnum<
  typeof BulkPayableItemUpdatePayableStatus
> = BulkPayableItemUpdatePayableStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableItemUpdatePayableStatus$ {
  /** @deprecated use `BulkPayableItemUpdatePayableStatus$inboundSchema` instead. */
  export const inboundSchema = BulkPayableItemUpdatePayableStatus$inboundSchema;
  /** @deprecated use `BulkPayableItemUpdatePayableStatus$outboundSchema` instead. */
  export const outboundSchema =
    BulkPayableItemUpdatePayableStatus$outboundSchema;
}

/** @internal */
export const BulkPayableItemUpdateWorkflowSubStatus$inboundSchema:
  z.ZodNativeEnum<typeof BulkPayableItemUpdateWorkflowSubStatus> = z.nativeEnum(
    BulkPayableItemUpdateWorkflowSubStatus,
  );

/** @internal */
export const BulkPayableItemUpdateWorkflowSubStatus$outboundSchema:
  z.ZodNativeEnum<typeof BulkPayableItemUpdateWorkflowSubStatus> =
    BulkPayableItemUpdateWorkflowSubStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableItemUpdateWorkflowSubStatus$ {
  /** @deprecated use `BulkPayableItemUpdateWorkflowSubStatus$inboundSchema` instead. */
  export const inboundSchema =
    BulkPayableItemUpdateWorkflowSubStatus$inboundSchema;
  /** @deprecated use `BulkPayableItemUpdateWorkflowSubStatus$outboundSchema` instead. */
  export const outboundSchema =
    BulkPayableItemUpdateWorkflowSubStatus$outboundSchema;
}

/** @internal */
export const BulkPayableItemUpdate$inboundSchema: z.ZodType<
  BulkPayableItemUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.nullable(z.number()).optional(),
  attachmentId: z.nullable(z.string()).optional(),
  bulkPayableBatchId: z.nullable(z.string()).optional(),
  bulkPayableItemMergeKey: z.nullable(z.string()).optional(),
  bulkPayableItemReference: z.nullable(z.string()).optional(),
  clientId: z.nullable(z.string()).optional(),
  collaboratorEmail: z.nullable(z.string()).optional(),
  collaboratorExternalId: z.nullable(z.string()).optional(),
  collaboratorId: z.nullable(z.string()).optional(),
  dueDate: z.nullable(z.string()).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  lineItemDescription: z.nullable(z.string()).optional(),
  lineItemDetail: z.nullable(z.string()).optional(),
  paidDate: z.nullable(z.string()).optional(),
  payableNotes: z.nullable(z.string()).optional(),
  payableStatus: z.nullable(BulkPayableItemUpdatePayableStatus$inboundSchema)
    .optional(),
  reimbursableExpense: z.nullable(z.boolean()).optional(),
  workflowSubStatus: z.nullable(
    BulkPayableItemUpdateWorkflowSubStatus$inboundSchema,
  ).optional(),
});

/** @internal */
export type BulkPayableItemUpdate$Outbound = {
  amount?: number | null | undefined;
  attachmentId?: string | null | undefined;
  bulkPayableBatchId?: string | null | undefined;
  bulkPayableItemMergeKey?: string | null | undefined;
  bulkPayableItemReference?: string | null | undefined;
  clientId?: string | null | undefined;
  collaboratorEmail?: string | null | undefined;
  collaboratorExternalId?: string | null | undefined;
  collaboratorId?: string | null | undefined;
  dueDate?: string | null | undefined;
  labels?: { [k: string]: string } | null | undefined;
  lineItemDescription?: string | null | undefined;
  lineItemDetail?: string | null | undefined;
  paidDate?: string | null | undefined;
  payableNotes?: string | null | undefined;
  payableStatus?: string | null | undefined;
  reimbursableExpense?: boolean | null | undefined;
  workflowSubStatus?: string | null | undefined;
};

/** @internal */
export const BulkPayableItemUpdate$outboundSchema: z.ZodType<
  BulkPayableItemUpdate$Outbound,
  z.ZodTypeDef,
  BulkPayableItemUpdate
> = z.object({
  amount: z.nullable(z.number()).optional(),
  attachmentId: z.nullable(z.string()).optional(),
  bulkPayableBatchId: z.nullable(z.string()).optional(),
  bulkPayableItemMergeKey: z.nullable(z.string()).optional(),
  bulkPayableItemReference: z.nullable(z.string()).optional(),
  clientId: z.nullable(z.string()).optional(),
  collaboratorEmail: z.nullable(z.string()).optional(),
  collaboratorExternalId: z.nullable(z.string()).optional(),
  collaboratorId: z.nullable(z.string()).optional(),
  dueDate: z.nullable(z.string()).optional(),
  labels: z.nullable(z.record(z.string())).optional(),
  lineItemDescription: z.nullable(z.string()).optional(),
  lineItemDetail: z.nullable(z.string()).optional(),
  paidDate: z.nullable(z.string()).optional(),
  payableNotes: z.nullable(z.string()).optional(),
  payableStatus: z.nullable(BulkPayableItemUpdatePayableStatus$outboundSchema)
    .optional(),
  reimbursableExpense: z.nullable(z.boolean()).optional(),
  workflowSubStatus: z.nullable(
    BulkPayableItemUpdateWorkflowSubStatus$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableItemUpdate$ {
  /** @deprecated use `BulkPayableItemUpdate$inboundSchema` instead. */
  export const inboundSchema = BulkPayableItemUpdate$inboundSchema;
  /** @deprecated use `BulkPayableItemUpdate$outboundSchema` instead. */
  export const outboundSchema = BulkPayableItemUpdate$outboundSchema;
  /** @deprecated use `BulkPayableItemUpdate$Outbound` instead. */
  export type Outbound = BulkPayableItemUpdate$Outbound;
}
