/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum FrequencyUpdateInterval {
    Week = "Week",
    Month = "Month",
    LessThanNilGreaterThan = "<nil>",
}

export class FrequencyUpdate extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "daily" })
    daily?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "dayInInterval" })
    dayInInterval?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "endDate" })
    endDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "every" })
    every?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "interval" })
    interval?: FrequencyUpdateInterval;

    @SpeakeasyMetadata()
    @Expose({ name: "startDate" })
    startDate?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "twicePerMonth" })
    twicePerMonth?: boolean;
}
