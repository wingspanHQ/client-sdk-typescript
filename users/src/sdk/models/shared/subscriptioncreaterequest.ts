/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum SubscriptionCreateRequestPackage {
    None = "None",
    Benefits = "Benefits",
    Essentials = "Essentials",
    Professional = "Professional",
    Corporate = "Corporate",
}

export enum SubscriptionCreateRequestPackageTier {
    Basic = "Basic",
    Premium = "Premium",
}

export enum SubscriptionCreateRequestTerm {
    Yearly = "Yearly",
    Monthly = "Monthly",
}

export type SubscriptionCreateRequest = {
    discountCode?: string | null | undefined;
    package?: SubscriptionCreateRequestPackage | null | undefined;
    packageTier?: SubscriptionCreateRequestPackageTier | null | undefined;
    paymentMethodId?: string | null | undefined;
    planId?: string | null | undefined;
    subscriptionGrantId?: string | null | undefined;
    term?: SubscriptionCreateRequestTerm | null | undefined;
};

/** @internal */
export const SubscriptionCreateRequestPackage$ = z.nativeEnum(SubscriptionCreateRequestPackage);

/** @internal */
export const SubscriptionCreateRequestPackageTier$ = z.nativeEnum(
    SubscriptionCreateRequestPackageTier
);

/** @internal */
export const SubscriptionCreateRequestTerm$ = z.nativeEnum(SubscriptionCreateRequestTerm);

/** @internal */
export namespace SubscriptionCreateRequest$ {
    export type Inbound = {
        discountCode?: string | null | undefined;
        package?: SubscriptionCreateRequestPackage | null | undefined;
        packageTier?: SubscriptionCreateRequestPackageTier | null | undefined;
        paymentMethodId?: string | null | undefined;
        planId?: string | null | undefined;
        subscriptionGrantId?: string | null | undefined;
        term?: SubscriptionCreateRequestTerm | null | undefined;
    };

    export const inboundSchema: z.ZodType<SubscriptionCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            discountCode: z.nullable(z.string()).optional(),
            package: z.nullable(SubscriptionCreateRequestPackage$).optional(),
            packageTier: z.nullable(SubscriptionCreateRequestPackageTier$).optional(),
            paymentMethodId: z.nullable(z.string()).optional(),
            planId: z.nullable(z.string()).optional(),
            subscriptionGrantId: z.nullable(z.string()).optional(),
            term: z.nullable(SubscriptionCreateRequestTerm$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.discountCode === undefined ? null : { discountCode: v.discountCode }),
                ...(v.package === undefined ? null : { package: v.package }),
                ...(v.packageTier === undefined ? null : { packageTier: v.packageTier }),
                ...(v.paymentMethodId === undefined
                    ? null
                    : { paymentMethodId: v.paymentMethodId }),
                ...(v.planId === undefined ? null : { planId: v.planId }),
                ...(v.subscriptionGrantId === undefined
                    ? null
                    : { subscriptionGrantId: v.subscriptionGrantId }),
                ...(v.term === undefined ? null : { term: v.term }),
            };
        });

    export type Outbound = {
        discountCode?: string | null | undefined;
        package?: SubscriptionCreateRequestPackage | null | undefined;
        packageTier?: SubscriptionCreateRequestPackageTier | null | undefined;
        paymentMethodId?: string | null | undefined;
        planId?: string | null | undefined;
        subscriptionGrantId?: string | null | undefined;
        term?: SubscriptionCreateRequestTerm | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SubscriptionCreateRequest> = z
        .object({
            discountCode: z.nullable(z.string()).optional(),
            package: z.nullable(SubscriptionCreateRequestPackage$).optional(),
            packageTier: z.nullable(SubscriptionCreateRequestPackageTier$).optional(),
            paymentMethodId: z.nullable(z.string()).optional(),
            planId: z.nullable(z.string()).optional(),
            subscriptionGrantId: z.nullable(z.string()).optional(),
            term: z.nullable(SubscriptionCreateRequestTerm$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.discountCode === undefined ? null : { discountCode: v.discountCode }),
                ...(v.package === undefined ? null : { package: v.package }),
                ...(v.packageTier === undefined ? null : { packageTier: v.packageTier }),
                ...(v.paymentMethodId === undefined
                    ? null
                    : { paymentMethodId: v.paymentMethodId }),
                ...(v.planId === undefined ? null : { planId: v.planId }),
                ...(v.subscriptionGrantId === undefined
                    ? null
                    : { subscriptionGrantId: v.subscriptionGrantId }),
                ...(v.term === undefined ? null : { term: v.term }),
            };
        });
}
