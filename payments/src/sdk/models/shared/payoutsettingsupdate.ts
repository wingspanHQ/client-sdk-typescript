/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  PayoutDestinationUpdate,
  PayoutDestinationUpdate$inboundSchema,
  PayoutDestinationUpdate$Outbound,
  PayoutDestinationUpdate$outboundSchema,
} from "./payoutdestinationupdate.js";

export const PayoutSettingsUpdatePayoutPreferences = {
  Standard: "Standard",
  Instant: "Instant",
  Expedited: "Expedited",
  Check: "Check",
  ECheck: "ECheck",
} as const;
export type PayoutSettingsUpdatePayoutPreferences = ClosedEnum<
  typeof PayoutSettingsUpdatePayoutPreferences
>;

export type PayoutSettingsUpdate = {
  payoutDestinations?: Array<PayoutDestinationUpdate> | null | undefined;
  payoutPreferences?: PayoutSettingsUpdatePayoutPreferences | null | undefined;
};

/** @internal */
export const PayoutSettingsUpdatePayoutPreferences$inboundSchema:
  z.ZodNativeEnum<typeof PayoutSettingsUpdatePayoutPreferences> = z.nativeEnum(
    PayoutSettingsUpdatePayoutPreferences,
  );

/** @internal */
export const PayoutSettingsUpdatePayoutPreferences$outboundSchema:
  z.ZodNativeEnum<typeof PayoutSettingsUpdatePayoutPreferences> =
    PayoutSettingsUpdatePayoutPreferences$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayoutSettingsUpdatePayoutPreferences$ {
  /** @deprecated use `PayoutSettingsUpdatePayoutPreferences$inboundSchema` instead. */
  export const inboundSchema =
    PayoutSettingsUpdatePayoutPreferences$inboundSchema;
  /** @deprecated use `PayoutSettingsUpdatePayoutPreferences$outboundSchema` instead. */
  export const outboundSchema =
    PayoutSettingsUpdatePayoutPreferences$outboundSchema;
}

/** @internal */
export const PayoutSettingsUpdate$inboundSchema: z.ZodType<
  PayoutSettingsUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  payoutDestinations: z.nullable(z.array(PayoutDestinationUpdate$inboundSchema))
    .optional(),
  payoutPreferences: z.nullable(
    PayoutSettingsUpdatePayoutPreferences$inboundSchema,
  ).optional(),
});

/** @internal */
export type PayoutSettingsUpdate$Outbound = {
  payoutDestinations?:
    | Array<PayoutDestinationUpdate$Outbound>
    | null
    | undefined;
  payoutPreferences?: string | null | undefined;
};

/** @internal */
export const PayoutSettingsUpdate$outboundSchema: z.ZodType<
  PayoutSettingsUpdate$Outbound,
  z.ZodTypeDef,
  PayoutSettingsUpdate
> = z.object({
  payoutDestinations: z.nullable(
    z.array(PayoutDestinationUpdate$outboundSchema),
  ).optional(),
  payoutPreferences: z.nullable(
    PayoutSettingsUpdatePayoutPreferences$outboundSchema,
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayoutSettingsUpdate$ {
  /** @deprecated use `PayoutSettingsUpdate$inboundSchema` instead. */
  export const inboundSchema = PayoutSettingsUpdate$inboundSchema;
  /** @deprecated use `PayoutSettingsUpdate$outboundSchema` instead. */
  export const outboundSchema = PayoutSettingsUpdate$outboundSchema;
  /** @deprecated use `PayoutSettingsUpdate$Outbound` instead. */
  export type Outbound = PayoutSettingsUpdate$Outbound;
}

export function payoutSettingsUpdateToJSON(
  payoutSettingsUpdate: PayoutSettingsUpdate,
): string {
  return JSON.stringify(
    PayoutSettingsUpdate$outboundSchema.parse(payoutSettingsUpdate),
  );
}

export function payoutSettingsUpdateFromJSON(
  jsonString: string,
): SafeParseResult<PayoutSettingsUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayoutSettingsUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayoutSettingsUpdate' from JSON`,
  );
}
