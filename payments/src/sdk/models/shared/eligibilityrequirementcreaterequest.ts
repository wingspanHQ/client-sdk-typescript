/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const EligibilityRequirementCreateRequestRequirementType = {
  Signature: "Signature",
} as const;
export type EligibilityRequirementCreateRequestRequirementType = ClosedEnum<
  typeof EligibilityRequirementCreateRequestRequirementType
>;

export type EligibilityRequirementCreateRequest = {
  requirementType: EligibilityRequirementCreateRequestRequirementType;
  templateId?: string | null | undefined;
  validFor?: number | null | undefined;
};

/** @internal */
export const EligibilityRequirementCreateRequestRequirementType$inboundSchema:
  z.ZodNativeEnum<typeof EligibilityRequirementCreateRequestRequirementType> = z
    .nativeEnum(EligibilityRequirementCreateRequestRequirementType);

/** @internal */
export const EligibilityRequirementCreateRequestRequirementType$outboundSchema:
  z.ZodNativeEnum<typeof EligibilityRequirementCreateRequestRequirementType> =
    EligibilityRequirementCreateRequestRequirementType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EligibilityRequirementCreateRequestRequirementType$ {
  /** @deprecated use `EligibilityRequirementCreateRequestRequirementType$inboundSchema` instead. */
  export const inboundSchema =
    EligibilityRequirementCreateRequestRequirementType$inboundSchema;
  /** @deprecated use `EligibilityRequirementCreateRequestRequirementType$outboundSchema` instead. */
  export const outboundSchema =
    EligibilityRequirementCreateRequestRequirementType$outboundSchema;
}

/** @internal */
export const EligibilityRequirementCreateRequest$inboundSchema: z.ZodType<
  EligibilityRequirementCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  requirementType:
    EligibilityRequirementCreateRequestRequirementType$inboundSchema,
  templateId: z.nullable(z.string()).optional(),
  validFor: z.nullable(z.number()).optional(),
});

/** @internal */
export type EligibilityRequirementCreateRequest$Outbound = {
  requirementType: string;
  templateId?: string | null | undefined;
  validFor?: number | null | undefined;
};

/** @internal */
export const EligibilityRequirementCreateRequest$outboundSchema: z.ZodType<
  EligibilityRequirementCreateRequest$Outbound,
  z.ZodTypeDef,
  EligibilityRequirementCreateRequest
> = z.object({
  requirementType:
    EligibilityRequirementCreateRequestRequirementType$outboundSchema,
  templateId: z.nullable(z.string()).optional(),
  validFor: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EligibilityRequirementCreateRequest$ {
  /** @deprecated use `EligibilityRequirementCreateRequest$inboundSchema` instead. */
  export const inboundSchema =
    EligibilityRequirementCreateRequest$inboundSchema;
  /** @deprecated use `EligibilityRequirementCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    EligibilityRequirementCreateRequest$outboundSchema;
  /** @deprecated use `EligibilityRequirementCreateRequest$Outbound` instead. */
  export type Outbound = EligibilityRequirementCreateRequest$Outbound;
}

export function eligibilityRequirementCreateRequestToJSON(
  eligibilityRequirementCreateRequest: EligibilityRequirementCreateRequest,
): string {
  return JSON.stringify(
    EligibilityRequirementCreateRequest$outboundSchema.parse(
      eligibilityRequirementCreateRequest,
    ),
  );
}

export function eligibilityRequirementCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<EligibilityRequirementCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      EligibilityRequirementCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EligibilityRequirementCreateRequest' from JSON`,
  );
}
