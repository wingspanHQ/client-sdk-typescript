/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum TemplateResponsePurpose {
    OnboardCollaborator = "OnboardCollaborator",
}

export enum TemplateResponseRoles {
    Member = "Member",
    Client = "Client",
    Collaborator = "Collaborator",
    LessThanNilGreaterThan = "<nil>",
}

export class TemplateResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "editUrl" })
    editUrl: string;

    @SpeakeasyMetadata()
    @Expose({ name: "editUrlExpiresAt" })
    editUrlExpiresAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "fileId" })
    fileId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "purpose" })
    purpose: TemplateResponsePurpose;

    @SpeakeasyMetadata()
    @Expose({ name: "roles" })
    roles?: TemplateResponseRoles[];

    @SpeakeasyMetadata()
    @Expose({ name: "templateId" })
    templateId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title: string;

    @SpeakeasyMetadata()
    @Expose({ name: "viewUrl" })
    viewUrl?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "viewUrlExpiresAt" })
    viewUrlExpiresAt?: string;
}
