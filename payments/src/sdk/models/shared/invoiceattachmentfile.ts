/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type InvoiceAttachmentFile = {
  fileName: string;
  fileUrl: string;
};

/** @internal */
export const InvoiceAttachmentFile$inboundSchema: z.ZodType<
  InvoiceAttachmentFile,
  z.ZodTypeDef,
  unknown
> = z.object({
  fileName: z.string(),
  fileUrl: z.string(),
});

/** @internal */
export type InvoiceAttachmentFile$Outbound = {
  fileName: string;
  fileUrl: string;
};

/** @internal */
export const InvoiceAttachmentFile$outboundSchema: z.ZodType<
  InvoiceAttachmentFile$Outbound,
  z.ZodTypeDef,
  InvoiceAttachmentFile
> = z.object({
  fileName: z.string(),
  fileUrl: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceAttachmentFile$ {
  /** @deprecated use `InvoiceAttachmentFile$inboundSchema` instead. */
  export const inboundSchema = InvoiceAttachmentFile$inboundSchema;
  /** @deprecated use `InvoiceAttachmentFile$outboundSchema` instead. */
  export const outboundSchema = InvoiceAttachmentFile$outboundSchema;
  /** @deprecated use `InvoiceAttachmentFile$Outbound` instead. */
  export type Outbound = InvoiceAttachmentFile$Outbound;
}

export function invoiceAttachmentFileToJSON(
  invoiceAttachmentFile: InvoiceAttachmentFile,
): string {
  return JSON.stringify(
    InvoiceAttachmentFile$outboundSchema.parse(invoiceAttachmentFile),
  );
}

export function invoiceAttachmentFileFromJSON(
  jsonString: string,
): SafeParseResult<InvoiceAttachmentFile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvoiceAttachmentFile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvoiceAttachmentFile' from JSON`,
  );
}
