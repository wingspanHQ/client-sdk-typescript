/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FeeHandlingConfig, FeeHandlingConfig$ } from "./feehandlingconfig";
import {
    InvoiceCollaboratorCreateRequest,
    InvoiceCollaboratorCreateRequest$,
} from "./invoicecollaboratorcreaterequest";
import {
    InvoiceLineItemsCreateRequest,
    InvoiceLineItemsCreateRequest$,
} from "./invoicelineitemscreaterequest";
import {
    InvoiceNotificationPreferences,
    InvoiceNotificationPreferences$,
} from "./invoicenotificationpreferences";
import { LateFeeConfig, LateFeeConfig$ } from "./latefeeconfig";
import {
    ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2,
    ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$,
} from "./thirtysixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2";
import { z } from "zod";

export enum InvoiceDataCreateRequestAcceptedPaymentMethods {
    Credit = "Credit",
    Ach = "ACH",
    Manual = "Manual",
}

export enum InvoiceDataCreateRequestCurrency {
    Usd = "USD",
    Cad = "CAD",
}

export enum InvoiceDataCreateRequestStatus {
    Draft = "Draft",
    Open = "Open",
    Overdue = "Overdue",
    Cancelled = "Cancelled",
    Pending = "Pending",
    PaymentInTransit = "PaymentInTransit",
    Paid = "Paid",
}

export type InvoiceDataCreateRequest = {
    acceptedPaymentMethods?:
        | Array<InvoiceDataCreateRequestAcceptedPaymentMethods>
        | null
        | undefined;
    attachments?:
        | ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2
        | null
        | undefined;
    collaborators?: Array<InvoiceCollaboratorCreateRequest> | null | undefined;
    creditFeeHandling?: FeeHandlingConfig | null | undefined;
    currency?: InvoiceDataCreateRequestCurrency | null | undefined;
    dueDate?: string | null | undefined;
    invoiceNotes?: string | null | undefined;
    labels?: Record<string, string> | null | undefined;
    lateFeeHandling?: LateFeeConfig | null | undefined;
    lineItems: Array<InvoiceLineItemsCreateRequest>;
    memberClientId: string;
    notificationPreferences?: InvoiceNotificationPreferences | null | undefined;
    status?: InvoiceDataCreateRequestStatus | null | undefined;
};

/** @internal */
export const InvoiceDataCreateRequestAcceptedPaymentMethods$ = z.nativeEnum(
    InvoiceDataCreateRequestAcceptedPaymentMethods
);

/** @internal */
export const InvoiceDataCreateRequestCurrency$ = z.nativeEnum(InvoiceDataCreateRequestCurrency);

/** @internal */
export const InvoiceDataCreateRequestStatus$ = z.nativeEnum(InvoiceDataCreateRequestStatus);

/** @internal */
export namespace InvoiceDataCreateRequest$ {
    export type Inbound = {
        acceptedPaymentMethods?:
            | Array<InvoiceDataCreateRequestAcceptedPaymentMethods>
            | null
            | undefined;
        attachments?:
            | ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$.Inbound
            | null
            | undefined;
        collaborators?: Array<InvoiceCollaboratorCreateRequest$.Inbound> | null | undefined;
        creditFeeHandling?: FeeHandlingConfig$.Inbound | null | undefined;
        currency?: InvoiceDataCreateRequestCurrency | null | undefined;
        dueDate?: string | null | undefined;
        invoiceNotes?: string | null | undefined;
        labels?: Record<string, string> | null | undefined;
        lateFeeHandling?: LateFeeConfig$.Inbound | null | undefined;
        lineItems: Array<InvoiceLineItemsCreateRequest$.Inbound>;
        memberClientId: string;
        notificationPreferences?: InvoiceNotificationPreferences$.Inbound | null | undefined;
        status?: InvoiceDataCreateRequestStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<InvoiceDataCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            acceptedPaymentMethods: z
                .nullable(z.array(InvoiceDataCreateRequestAcceptedPaymentMethods$))
                .optional(),
            attachments: z
                .nullable(
                    ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$.inboundSchema
                )
                .optional(),
            collaborators: z
                .nullable(z.array(InvoiceCollaboratorCreateRequest$.inboundSchema))
                .optional(),
            creditFeeHandling: z.nullable(FeeHandlingConfig$.inboundSchema).optional(),
            currency: z.nullable(InvoiceDataCreateRequestCurrency$).optional(),
            dueDate: z.nullable(z.string()).optional(),
            invoiceNotes: z.nullable(z.string()).optional(),
            labels: z.nullable(z.record(z.string())).optional(),
            lateFeeHandling: z.nullable(LateFeeConfig$.inboundSchema).optional(),
            lineItems: z.array(InvoiceLineItemsCreateRequest$.inboundSchema),
            memberClientId: z.string(),
            notificationPreferences: z
                .nullable(InvoiceNotificationPreferences$.inboundSchema)
                .optional(),
            status: z.nullable(InvoiceDataCreateRequestStatus$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.acceptedPaymentMethods === undefined
                    ? null
                    : { acceptedPaymentMethods: v.acceptedPaymentMethods }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.collaborators === undefined ? null : { collaborators: v.collaborators }),
                ...(v.creditFeeHandling === undefined
                    ? null
                    : { creditFeeHandling: v.creditFeeHandling }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.invoiceNotes === undefined ? null : { invoiceNotes: v.invoiceNotes }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.lateFeeHandling === undefined
                    ? null
                    : { lateFeeHandling: v.lateFeeHandling }),
                lineItems: v.lineItems,
                memberClientId: v.memberClientId,
                ...(v.notificationPreferences === undefined
                    ? null
                    : { notificationPreferences: v.notificationPreferences }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        acceptedPaymentMethods?:
            | Array<InvoiceDataCreateRequestAcceptedPaymentMethods>
            | null
            | undefined;
        attachments?:
            | ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$.Outbound
            | null
            | undefined;
        collaborators?: Array<InvoiceCollaboratorCreateRequest$.Outbound> | null | undefined;
        creditFeeHandling?: FeeHandlingConfig$.Outbound | null | undefined;
        currency?: InvoiceDataCreateRequestCurrency | null | undefined;
        dueDate?: string | null | undefined;
        invoiceNotes?: string | null | undefined;
        labels?: Record<string, string> | null | undefined;
        lateFeeHandling?: LateFeeConfig$.Outbound | null | undefined;
        lineItems: Array<InvoiceLineItemsCreateRequest$.Outbound>;
        memberClientId: string;
        notificationPreferences?: InvoiceNotificationPreferences$.Outbound | null | undefined;
        status?: InvoiceDataCreateRequestStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceDataCreateRequest> = z
        .object({
            acceptedPaymentMethods: z
                .nullable(z.array(InvoiceDataCreateRequestAcceptedPaymentMethods$))
                .optional(),
            attachments: z
                .nullable(
                    ThirtySixb041d426951ffff76360faf03ef8ae938bed9739e6ad9f51acb982782296a2$.outboundSchema
                )
                .optional(),
            collaborators: z
                .nullable(z.array(InvoiceCollaboratorCreateRequest$.outboundSchema))
                .optional(),
            creditFeeHandling: z.nullable(FeeHandlingConfig$.outboundSchema).optional(),
            currency: z.nullable(InvoiceDataCreateRequestCurrency$).optional(),
            dueDate: z.nullable(z.string()).optional(),
            invoiceNotes: z.nullable(z.string()).optional(),
            labels: z.nullable(z.record(z.string())).optional(),
            lateFeeHandling: z.nullable(LateFeeConfig$.outboundSchema).optional(),
            lineItems: z.array(InvoiceLineItemsCreateRequest$.outboundSchema),
            memberClientId: z.string(),
            notificationPreferences: z
                .nullable(InvoiceNotificationPreferences$.outboundSchema)
                .optional(),
            status: z.nullable(InvoiceDataCreateRequestStatus$).optional(),
        })
        .transform((v) => {
            return {
                ...(v.acceptedPaymentMethods === undefined
                    ? null
                    : { acceptedPaymentMethods: v.acceptedPaymentMethods }),
                ...(v.attachments === undefined ? null : { attachments: v.attachments }),
                ...(v.collaborators === undefined ? null : { collaborators: v.collaborators }),
                ...(v.creditFeeHandling === undefined
                    ? null
                    : { creditFeeHandling: v.creditFeeHandling }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.invoiceNotes === undefined ? null : { invoiceNotes: v.invoiceNotes }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.lateFeeHandling === undefined
                    ? null
                    : { lateFeeHandling: v.lateFeeHandling }),
                lineItems: v.lineItems,
                memberClientId: v.memberClientId,
                ...(v.notificationPreferences === undefined
                    ? null
                    : { notificationPreferences: v.notificationPreferences }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
