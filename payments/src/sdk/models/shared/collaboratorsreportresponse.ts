/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a,
    B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$,
} from "./b22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a";
import { CollaboratorEvents, CollaboratorEvents$ } from "./collaboratorevents";
import { RedactedMember, RedactedMember$ } from "./redactedmember";
import {
    SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d,
    SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$,
} from "./sixtysixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d";
import { z } from "zod";

export type CollaboratorsReportResponseLabels = {};

export enum CollaboratorsReportResponseStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
}

export enum CollaboratorsReportResponseTaxStatus {
    Complete = "Complete",
    Failed = "Failed",
    Pending = "Pending",
    Incomplete = "Incomplete",
}

export type CollaboratorsReportResponse = {
    clientId: string;
    collaboratorGroups: Array<SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d>;
    createdAt: string;
    externalId?: string | null | undefined;
    inviteEmail: string;
    labels?: CollaboratorsReportResponseLabels | null | undefined;
    member: RedactedMember;
    memberClientId: string;
    memberEvents?: CollaboratorEvents | null | undefined;
    memberId: string;
    servicesStatus: B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a;
    status: CollaboratorsReportResponseStatus;
    taxDocumentStared?: boolean | null | undefined;
    taxStatus: CollaboratorsReportResponseTaxStatus;
    updatedAt: string;
};

/** @internal */
export namespace CollaboratorsReportResponseLabels$ {
    export type Inbound = {};

    export const inboundSchema: z.ZodType<
        CollaboratorsReportResponseLabels,
        z.ZodTypeDef,
        Inbound
    > = z.object({});

    export type Outbound = {};

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CollaboratorsReportResponseLabels
    > = z.object({});
}

/** @internal */
export const CollaboratorsReportResponseStatus$ = z.nativeEnum(CollaboratorsReportResponseStatus);

/** @internal */
export const CollaboratorsReportResponseTaxStatus$ = z.nativeEnum(
    CollaboratorsReportResponseTaxStatus
);

/** @internal */
export namespace CollaboratorsReportResponse$ {
    export type Inbound = {
        clientId: string;
        collaboratorGroups: Array<SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$.Inbound>;
        createdAt: string;
        externalId?: string | null | undefined;
        inviteEmail: string;
        labels?: CollaboratorsReportResponseLabels$.Inbound | null | undefined;
        member: RedactedMember$.Inbound;
        memberClientId: string;
        memberEvents?: CollaboratorEvents$.Inbound | null | undefined;
        memberId: string;
        servicesStatus: B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$.Inbound;
        status: CollaboratorsReportResponseStatus;
        taxDocumentStared?: boolean | null | undefined;
        taxStatus: CollaboratorsReportResponseTaxStatus;
        updatedAt: string;
    };

    export const inboundSchema: z.ZodType<CollaboratorsReportResponse, z.ZodTypeDef, Inbound> = z
        .object({
            clientId: z.string(),
            collaboratorGroups: z.array(
                SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$.inboundSchema
            ),
            createdAt: z.string(),
            externalId: z.string().nullable().optional(),
            inviteEmail: z.string(),
            labels: z
                .lazy(() => CollaboratorsReportResponseLabels$.inboundSchema)
                .nullable()
                .optional(),
            member: RedactedMember$.inboundSchema,
            memberClientId: z.string(),
            memberEvents: CollaboratorEvents$.inboundSchema.nullable().optional(),
            memberId: z.string(),
            servicesStatus:
                B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$.inboundSchema,
            status: CollaboratorsReportResponseStatus$,
            taxDocumentStared: z.boolean().nullable().optional(),
            taxStatus: CollaboratorsReportResponseTaxStatus$,
            updatedAt: z.string(),
        })
        .transform((v) => {
            return {
                clientId: v.clientId,
                collaboratorGroups: v.collaboratorGroups,
                createdAt: v.createdAt,
                ...(v.externalId === undefined ? null : { externalId: v.externalId }),
                inviteEmail: v.inviteEmail,
                ...(v.labels === undefined ? null : { labels: v.labels }),
                member: v.member,
                memberClientId: v.memberClientId,
                ...(v.memberEvents === undefined ? null : { memberEvents: v.memberEvents }),
                memberId: v.memberId,
                servicesStatus: v.servicesStatus,
                status: v.status,
                ...(v.taxDocumentStared === undefined
                    ? null
                    : { taxDocumentStared: v.taxDocumentStared }),
                taxStatus: v.taxStatus,
                updatedAt: v.updatedAt,
            };
        });

    export type Outbound = {
        clientId: string;
        collaboratorGroups: Array<SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$.Outbound>;
        createdAt: string;
        externalId?: string | null | undefined;
        inviteEmail: string;
        labels?: CollaboratorsReportResponseLabels$.Outbound | null | undefined;
        member: RedactedMember$.Outbound;
        memberClientId: string;
        memberEvents?: CollaboratorEvents$.Outbound | null | undefined;
        memberId: string;
        servicesStatus: B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$.Outbound;
        status: CollaboratorsReportResponseStatus;
        taxDocumentStared?: boolean | null | undefined;
        taxStatus: CollaboratorsReportResponseTaxStatus;
        updatedAt: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CollaboratorsReportResponse> = z
        .object({
            clientId: z.string(),
            collaboratorGroups: z.array(
                SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$.outboundSchema
            ),
            createdAt: z.string(),
            externalId: z.string().nullable().optional(),
            inviteEmail: z.string(),
            labels: z
                .lazy(() => CollaboratorsReportResponseLabels$.outboundSchema)
                .nullable()
                .optional(),
            member: RedactedMember$.outboundSchema,
            memberClientId: z.string(),
            memberEvents: CollaboratorEvents$.outboundSchema.nullable().optional(),
            memberId: z.string(),
            servicesStatus:
                B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$.outboundSchema,
            status: CollaboratorsReportResponseStatus$,
            taxDocumentStared: z.boolean().nullable().optional(),
            taxStatus: CollaboratorsReportResponseTaxStatus$,
            updatedAt: z.string(),
        })
        .transform((v) => {
            return {
                clientId: v.clientId,
                collaboratorGroups: v.collaboratorGroups,
                createdAt: v.createdAt,
                ...(v.externalId === undefined ? null : { externalId: v.externalId }),
                inviteEmail: v.inviteEmail,
                ...(v.labels === undefined ? null : { labels: v.labels }),
                member: v.member,
                memberClientId: v.memberClientId,
                ...(v.memberEvents === undefined ? null : { memberEvents: v.memberEvents }),
                memberId: v.memberId,
                servicesStatus: v.servicesStatus,
                status: v.status,
                ...(v.taxDocumentStared === undefined
                    ? null
                    : { taxDocumentStared: v.taxDocumentStared }),
                taxStatus: v.taxStatus,
                updatedAt: v.updatedAt,
            };
        });
}
