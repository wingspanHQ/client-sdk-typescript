/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type TaxFormInviteResponse = {
    success?: any | undefined;
};

/** @internal */
export const TaxFormInviteResponse$inboundSchema: z.ZodType<
    TaxFormInviteResponse,
    z.ZodTypeDef,
    unknown
> = z.object({
    success: z.any().optional(),
});

/** @internal */
export type TaxFormInviteResponse$Outbound = {
    success?: any | undefined;
};

/** @internal */
export const TaxFormInviteResponse$outboundSchema: z.ZodType<
    TaxFormInviteResponse$Outbound,
    z.ZodTypeDef,
    TaxFormInviteResponse
> = z.object({
    success: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxFormInviteResponse$ {
    /** @deprecated use `TaxFormInviteResponse$inboundSchema` instead. */
    export const inboundSchema = TaxFormInviteResponse$inboundSchema;
    /** @deprecated use `TaxFormInviteResponse$outboundSchema` instead. */
    export const outboundSchema = TaxFormInviteResponse$outboundSchema;
    /** @deprecated use `TaxFormInviteResponse$Outbound` instead. */
    export type Outbound = TaxFormInviteResponse$Outbound;
}
