/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClientData, ClientData$ } from "./clientdata";
import {
    MemberClientRequirementResponse,
    MemberClientRequirementResponse$,
} from "./memberclientrequirementresponse";
import {
    TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4,
    TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$,
} from "./twentysixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4";
import { z } from "zod";

export enum CollaborationStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
}

export type Collaboration = {
    clientData?: ClientData | null | undefined;
    collaboratorGroupIds?: Array<string> | null | undefined;
    collaboratorId: string;
    eligibilityRequirements?: Array<MemberClientRequirementResponse> | null | undefined;
    integration?:
        | TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4
        | null
        | undefined;
    status: CollaborationStatus;
};

/** @internal */
export const CollaborationStatus$ = z.nativeEnum(CollaborationStatus);

/** @internal */
export namespace Collaboration$ {
    export type Inbound = {
        clientData?: ClientData$.Inbound | null | undefined;
        collaboratorGroupIds?: Array<string> | null | undefined;
        collaboratorId: string;
        eligibilityRequirements?:
            | Array<MemberClientRequirementResponse$.Inbound>
            | null
            | undefined;
        integration?:
            | TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.Inbound
            | null
            | undefined;
        status: CollaborationStatus;
    };

    export const inboundSchema: z.ZodType<Collaboration, z.ZodTypeDef, Inbound> = z
        .object({
            clientData: z.nullable(ClientData$.inboundSchema).optional(),
            collaboratorGroupIds: z.nullable(z.array(z.string())).optional(),
            collaboratorId: z.string(),
            eligibilityRequirements: z
                .nullable(z.array(MemberClientRequirementResponse$.inboundSchema))
                .optional(),
            integration: z
                .nullable(
                    TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.inboundSchema
                )
                .optional(),
            status: CollaborationStatus$,
        })
        .transform((v) => {
            return {
                ...(v.clientData === undefined ? null : { clientData: v.clientData }),
                ...(v.collaboratorGroupIds === undefined
                    ? null
                    : { collaboratorGroupIds: v.collaboratorGroupIds }),
                collaboratorId: v.collaboratorId,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                status: v.status,
            };
        });

    export type Outbound = {
        clientData?: ClientData$.Outbound | null | undefined;
        collaboratorGroupIds?: Array<string> | null | undefined;
        collaboratorId: string;
        eligibilityRequirements?:
            | Array<MemberClientRequirementResponse$.Outbound>
            | null
            | undefined;
        integration?:
            | TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.Outbound
            | null
            | undefined;
        status: CollaborationStatus;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Collaboration> = z
        .object({
            clientData: z.nullable(ClientData$.outboundSchema).optional(),
            collaboratorGroupIds: z.nullable(z.array(z.string())).optional(),
            collaboratorId: z.string(),
            eligibilityRequirements: z
                .nullable(z.array(MemberClientRequirementResponse$.outboundSchema))
                .optional(),
            integration: z
                .nullable(
                    TwentySixe8ea23ccb1e007e7d6560175c7e75c768dac34727b7fe1d834ca24b8221ef4$.outboundSchema
                )
                .optional(),
            status: CollaborationStatus$,
        })
        .transform((v) => {
            return {
                ...(v.clientData === undefined ? null : { clientData: v.clientData }),
                ...(v.collaboratorGroupIds === undefined
                    ? null
                    : { collaboratorGroupIds: v.collaboratorGroupIds }),
                collaboratorId: v.collaboratorId,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                status: v.status,
            };
        });
}
