/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type MemberClientWireAccount = {
    accountNumber: string;
    bankName: string;
    routingNumber?: string | null | undefined;
    swiftCode?: string | null | undefined;
};

/** @internal */
export namespace MemberClientWireAccount$ {
    export type Inbound = {
        accountNumber: string;
        bankName: string;
        routingNumber?: string | null | undefined;
        swiftCode?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<MemberClientWireAccount, z.ZodTypeDef, Inbound> = z
        .object({
            accountNumber: z.string(),
            bankName: z.string(),
            routingNumber: z.nullable(z.string()).optional(),
            swiftCode: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                accountNumber: v.accountNumber,
                bankName: v.bankName,
                ...(v.routingNumber === undefined ? null : { routingNumber: v.routingNumber }),
                ...(v.swiftCode === undefined ? null : { swiftCode: v.swiftCode }),
            };
        });

    export type Outbound = {
        accountNumber: string;
        bankName: string;
        routingNumber?: string | null | undefined;
        swiftCode?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberClientWireAccount> = z
        .object({
            accountNumber: z.string(),
            bankName: z.string(),
            routingNumber: z.nullable(z.string()).optional(),
            swiftCode: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                accountNumber: v.accountNumber,
                bankName: v.bankName,
                ...(v.routingNumber === undefined ? null : { routingNumber: v.routingNumber }),
                ...(v.swiftCode === undefined ? null : { swiftCode: v.swiftCode }),
            };
        });
}
