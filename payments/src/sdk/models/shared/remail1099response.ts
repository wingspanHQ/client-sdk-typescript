/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Remail1099Response = {};

/** @internal */
export const Remail1099Response$inboundSchema: z.ZodType<
  Remail1099Response,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type Remail1099Response$Outbound = {};

/** @internal */
export const Remail1099Response$outboundSchema: z.ZodType<
  Remail1099Response$Outbound,
  z.ZodTypeDef,
  Remail1099Response
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Remail1099Response$ {
  /** @deprecated use `Remail1099Response$inboundSchema` instead. */
  export const inboundSchema = Remail1099Response$inboundSchema;
  /** @deprecated use `Remail1099Response$outboundSchema` instead. */
  export const outboundSchema = Remail1099Response$outboundSchema;
  /** @deprecated use `Remail1099Response$Outbound` instead. */
  export type Outbound = Remail1099Response$Outbound;
}

export function remail1099ResponseToJSON(
  remail1099Response: Remail1099Response,
): string {
  return JSON.stringify(
    Remail1099Response$outboundSchema.parse(remail1099Response),
  );
}

export function remail1099ResponseFromJSON(
  jsonString: string,
): SafeParseResult<Remail1099Response, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Remail1099Response$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Remail1099Response' from JSON`,
  );
}
