/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2,
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$,
} from "./sevenhundredandfiftysevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2";
import { UserRoles, UserRoles$ } from "./userroles";
import { z } from "zod";

export enum BulkClientBatchStatus {
    Open = "Open",
    Pending = "Pending",
    Processing = "Processing",
    Complete = "Complete",
    Failed = "Failed",
}

export type BulkClientBatch = {
    bulkClientBatchId: string;
    createdAt: string;
    eventActors: Record<string, string>;
    labels: Record<string, string>;
    memberId: string;
    statistics?:
        | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2
        | null
        | undefined;
    status: BulkClientBatchStatus;
    updatedAt: string;
    userRoles: UserRoles;
};

/** @internal */
export const BulkClientBatchStatus$ = z.nativeEnum(BulkClientBatchStatus);

/** @internal */
export namespace BulkClientBatch$ {
    export type Inbound = {
        bulkClientBatchId: string;
        createdAt: string;
        eventActors: Record<string, string>;
        labels: Record<string, string>;
        memberId: string;
        statistics?:
            | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$.Inbound
            | null
            | undefined;
        status: BulkClientBatchStatus;
        updatedAt: string;
        userRoles: UserRoles$.Inbound;
    };

    export const inboundSchema: z.ZodType<BulkClientBatch, z.ZodTypeDef, Inbound> = z
        .object({
            bulkClientBatchId: z.string(),
            createdAt: z.string(),
            eventActors: z.record(z.string()),
            labels: z.record(z.string()),
            memberId: z.string(),
            statistics: z
                .nullable(
                    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$.inboundSchema
                )
                .optional(),
            status: BulkClientBatchStatus$,
            updatedAt: z.string(),
            userRoles: UserRoles$.inboundSchema,
        })
        .transform((v) => {
            return {
                bulkClientBatchId: v.bulkClientBatchId,
                createdAt: v.createdAt,
                eventActors: v.eventActors,
                labels: v.labels,
                memberId: v.memberId,
                ...(v.statistics === undefined ? null : { statistics: v.statistics }),
                status: v.status,
                updatedAt: v.updatedAt,
                userRoles: v.userRoles,
            };
        });

    export type Outbound = {
        bulkClientBatchId: string;
        createdAt: string;
        eventActors: Record<string, string>;
        labels: Record<string, string>;
        memberId: string;
        statistics?:
            | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$.Outbound
            | null
            | undefined;
        status: BulkClientBatchStatus;
        updatedAt: string;
        userRoles: UserRoles$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BulkClientBatch> = z
        .object({
            bulkClientBatchId: z.string(),
            createdAt: z.string(),
            eventActors: z.record(z.string()),
            labels: z.record(z.string()),
            memberId: z.string(),
            statistics: z
                .nullable(
                    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$.outboundSchema
                )
                .optional(),
            status: BulkClientBatchStatus$,
            updatedAt: z.string(),
            userRoles: UserRoles$.outboundSchema,
        })
        .transform((v) => {
            return {
                bulkClientBatchId: v.bulkClientBatchId,
                createdAt: v.createdAt,
                eventActors: v.eventActors,
                labels: v.labels,
                memberId: v.memberId,
                ...(v.statistics === undefined ? null : { statistics: v.statistics }),
                status: v.status,
                updatedAt: v.updatedAt,
                userRoles: v.userRoles,
            };
        });
}
