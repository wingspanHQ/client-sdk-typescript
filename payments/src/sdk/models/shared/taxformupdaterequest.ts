/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class TaxFormUpdateRequestData extends SpeakeasyBase {}

export enum TaxFormUpdateRequestStatus {
    Pending = "Pending",
    ReadyToSubmitToIrs = "ReadyToSubmitToIrs",
    SubmittedToIrs = "SubmittedToIrs",
    AcceptedByIrs = "AcceptedByIrs",
    RejectedByIrs = "RejectedByIrs",
    PendingCorrection = "PendingCorrection",
    Excluded = "Excluded",
    Ineligible = "Ineligible",
    LessThanNilGreaterThan = "<nil>",
}

export class TaxFormUpdateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => TaxFormUpdateRequestData)
    data: TaxFormUpdateRequestData;

    @SpeakeasyMetadata()
    @Expose({ name: "payerConfirmedW9Info" })
    payerConfirmedW9Info?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: TaxFormUpdateRequestStatus;
}
