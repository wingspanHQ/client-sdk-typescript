/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DeductionApplication } from "./deductionapplication";
import { PostPaymentDeductionDisbursement } from "./postpaymentdeductiondisbursement";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export enum DeductionResponseCurrency {
    Usd = "USD",
    Cad = "CAD",
}

export enum DeductionResponseStatus {
    Pending = "Pending",
    PartiallyApplied = "PartiallyApplied",
    Complete = "Complete",
}

export enum DeductionResponseType {
    PrePayment = "PrePayment",
    PostPayment = "PostPayment",
}

export class DeductionResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    @SpeakeasyMetadata({ elemType: DeductionApplication })
    @Expose({ name: "application" })
    @Type(() => DeductionApplication)
    application: DeductionApplication[];

    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: DeductionResponseCurrency;

    @SpeakeasyMetadata()
    @Expose({ name: "deductionId" })
    deductionId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "deductionTemplateId" })
    deductionTemplateId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "disbursement" })
    @Type(() => PostPaymentDeductionDisbursement)
    disbursement?: PostPaymentDeductionDisbursement;

    @SpeakeasyMetadata()
    @Expose({ name: "eventActors" })
    eventActors: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "memberId" })
    memberId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "priority" })
    priority: number;

    @SpeakeasyMetadata()
    @Expose({ name: "sourceInvoiceId" })
    sourceInvoiceId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "startDate" })
    startDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: DeductionResponseStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: DeductionResponseType;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;
}
