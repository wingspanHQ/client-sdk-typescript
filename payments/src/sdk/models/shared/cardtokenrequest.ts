/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CardTokenRequest = {
  verificationCode: string;
  verificationToken: string;
};

/** @internal */
export const CardTokenRequest$inboundSchema: z.ZodType<
  CardTokenRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  verificationCode: z.string(),
  verificationToken: z.string(),
});

/** @internal */
export type CardTokenRequest$Outbound = {
  verificationCode: string;
  verificationToken: string;
};

/** @internal */
export const CardTokenRequest$outboundSchema: z.ZodType<
  CardTokenRequest$Outbound,
  z.ZodTypeDef,
  CardTokenRequest
> = z.object({
  verificationCode: z.string(),
  verificationToken: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardTokenRequest$ {
  /** @deprecated use `CardTokenRequest$inboundSchema` instead. */
  export const inboundSchema = CardTokenRequest$inboundSchema;
  /** @deprecated use `CardTokenRequest$outboundSchema` instead. */
  export const outboundSchema = CardTokenRequest$outboundSchema;
  /** @deprecated use `CardTokenRequest$Outbound` instead. */
  export type Outbound = CardTokenRequest$Outbound;
}

export function cardTokenRequestToJSON(
  cardTokenRequest: CardTokenRequest,
): string {
  return JSON.stringify(
    CardTokenRequest$outboundSchema.parse(cardTokenRequest),
  );
}

export function cardTokenRequestFromJSON(
  jsonString: string,
): SafeParseResult<CardTokenRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardTokenRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardTokenRequest' from JSON`,
  );
}
