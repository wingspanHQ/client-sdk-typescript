/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ClientInvoiceDataCreateRequest,
  ClientInvoiceDataCreateRequest$inboundSchema,
  ClientInvoiceDataCreateRequest$Outbound,
  ClientInvoiceDataCreateRequest$outboundSchema,
} from "./clientinvoicedatacreaterequest.js";
import {
  Frequency,
  Frequency$inboundSchema,
  Frequency$Outbound,
  Frequency$outboundSchema,
} from "./frequency.js";
import {
  ScheduleDate,
  ScheduleDate$inboundSchema,
  ScheduleDate$Outbound,
  ScheduleDate$outboundSchema,
} from "./scheduledate.js";

export const ClientInvoiceTemplateCreateRequestStatus = {
  Active: "Active",
  Draft: "Draft",
  Expired: "Expired",
  Cancelled: "Cancelled",
} as const;
export type ClientInvoiceTemplateCreateRequestStatus = ClosedEnum<
  typeof ClientInvoiceTemplateCreateRequestStatus
>;

export type ClientInvoiceTemplateCreateRequest = {
  accountId?: string | null | undefined;
  clientCompany?: string | null | undefined;
  clientEmail: string;
  clientEmailCC?: Array<string> | null | undefined;
  clientFirstName?: string | null | undefined;
  clientLastName?: string | null | undefined;
  dueInDays?: number | null | undefined;
  frequency?: Frequency | null | undefined;
  invoiceData: ClientInvoiceDataCreateRequest;
  memberId: string;
  paymentMethodId?: string | null | undefined;
  scheduleDates?: Array<ScheduleDate> | null | undefined;
  status: ClientInvoiceTemplateCreateRequestStatus;
};

/** @internal */
export const ClientInvoiceTemplateCreateRequestStatus$inboundSchema:
  z.ZodNativeEnum<typeof ClientInvoiceTemplateCreateRequestStatus> = z
    .nativeEnum(ClientInvoiceTemplateCreateRequestStatus);

/** @internal */
export const ClientInvoiceTemplateCreateRequestStatus$outboundSchema:
  z.ZodNativeEnum<typeof ClientInvoiceTemplateCreateRequestStatus> =
    ClientInvoiceTemplateCreateRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientInvoiceTemplateCreateRequestStatus$ {
  /** @deprecated use `ClientInvoiceTemplateCreateRequestStatus$inboundSchema` instead. */
  export const inboundSchema =
    ClientInvoiceTemplateCreateRequestStatus$inboundSchema;
  /** @deprecated use `ClientInvoiceTemplateCreateRequestStatus$outboundSchema` instead. */
  export const outboundSchema =
    ClientInvoiceTemplateCreateRequestStatus$outboundSchema;
}

/** @internal */
export const ClientInvoiceTemplateCreateRequest$inboundSchema: z.ZodType<
  ClientInvoiceTemplateCreateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  accountId: z.nullable(z.string()).optional(),
  clientCompany: z.nullable(z.string()).optional(),
  clientEmail: z.string(),
  clientEmailCC: z.nullable(z.array(z.string())).optional(),
  clientFirstName: z.nullable(z.string()).optional(),
  clientLastName: z.nullable(z.string()).optional(),
  dueInDays: z.nullable(z.number()).optional(),
  frequency: z.nullable(Frequency$inboundSchema).optional(),
  invoiceData: ClientInvoiceDataCreateRequest$inboundSchema,
  memberId: z.string(),
  paymentMethodId: z.nullable(z.string()).optional(),
  scheduleDates: z.nullable(z.array(ScheduleDate$inboundSchema)).optional(),
  status: ClientInvoiceTemplateCreateRequestStatus$inboundSchema,
});

/** @internal */
export type ClientInvoiceTemplateCreateRequest$Outbound = {
  accountId?: string | null | undefined;
  clientCompany?: string | null | undefined;
  clientEmail: string;
  clientEmailCC?: Array<string> | null | undefined;
  clientFirstName?: string | null | undefined;
  clientLastName?: string | null | undefined;
  dueInDays?: number | null | undefined;
  frequency?: Frequency$Outbound | null | undefined;
  invoiceData: ClientInvoiceDataCreateRequest$Outbound;
  memberId: string;
  paymentMethodId?: string | null | undefined;
  scheduleDates?: Array<ScheduleDate$Outbound> | null | undefined;
  status: string;
};

/** @internal */
export const ClientInvoiceTemplateCreateRequest$outboundSchema: z.ZodType<
  ClientInvoiceTemplateCreateRequest$Outbound,
  z.ZodTypeDef,
  ClientInvoiceTemplateCreateRequest
> = z.object({
  accountId: z.nullable(z.string()).optional(),
  clientCompany: z.nullable(z.string()).optional(),
  clientEmail: z.string(),
  clientEmailCC: z.nullable(z.array(z.string())).optional(),
  clientFirstName: z.nullable(z.string()).optional(),
  clientLastName: z.nullable(z.string()).optional(),
  dueInDays: z.nullable(z.number()).optional(),
  frequency: z.nullable(Frequency$outboundSchema).optional(),
  invoiceData: ClientInvoiceDataCreateRequest$outboundSchema,
  memberId: z.string(),
  paymentMethodId: z.nullable(z.string()).optional(),
  scheduleDates: z.nullable(z.array(ScheduleDate$outboundSchema)).optional(),
  status: ClientInvoiceTemplateCreateRequestStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClientInvoiceTemplateCreateRequest$ {
  /** @deprecated use `ClientInvoiceTemplateCreateRequest$inboundSchema` instead. */
  export const inboundSchema = ClientInvoiceTemplateCreateRequest$inboundSchema;
  /** @deprecated use `ClientInvoiceTemplateCreateRequest$outboundSchema` instead. */
  export const outboundSchema =
    ClientInvoiceTemplateCreateRequest$outboundSchema;
  /** @deprecated use `ClientInvoiceTemplateCreateRequest$Outbound` instead. */
  export type Outbound = ClientInvoiceTemplateCreateRequest$Outbound;
}

export function clientInvoiceTemplateCreateRequestToJSON(
  clientInvoiceTemplateCreateRequest: ClientInvoiceTemplateCreateRequest,
): string {
  return JSON.stringify(
    ClientInvoiceTemplateCreateRequest$outboundSchema.parse(
      clientInvoiceTemplateCreateRequest,
    ),
  );
}

export function clientInvoiceTemplateCreateRequestFromJSON(
  jsonString: string,
): SafeParseResult<ClientInvoiceTemplateCreateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ClientInvoiceTemplateCreateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ClientInvoiceTemplateCreateRequest' from JSON`,
  );
}
