/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClientInvoiceDataCreateRequest } from "./clientinvoicedatacreaterequest";
import { Frequency } from "./frequency";
import { ScheduleDate } from "./scheduledate";
import { Expose, Type } from "class-transformer";

export enum ClientInvoiceTemplateCreateRequestStatus {
    Active = "Active",
    Draft = "Draft",
    Expired = "Expired",
    Cancelled = "Cancelled",
}

export class ClientInvoiceTemplateCreateRequest extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "accountId" })
    accountId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "clientCompany" })
    clientCompany?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "clientEmail" })
    clientEmail: string;

    @SpeakeasyMetadata()
    @Expose({ name: "clientEmailCC" })
    clientEmailCC?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "clientFirstName" })
    clientFirstName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "clientLastName" })
    clientLastName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "dueInDays" })
    dueInDays?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "frequency" })
    @Type(() => Frequency)
    frequency?: Frequency;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceData" })
    @Type(() => ClientInvoiceDataCreateRequest)
    invoiceData: ClientInvoiceDataCreateRequest;

    @SpeakeasyMetadata()
    @Expose({ name: "memberId" })
    memberId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "paymentMethodId" })
    paymentMethodId?: string;

    @SpeakeasyMetadata({ elemType: ScheduleDate })
    @Expose({ name: "scheduleDates" })
    @Type(() => ScheduleDate)
    scheduleDates?: ScheduleDate[];

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: ClientInvoiceTemplateCreateRequestStatus;
}
