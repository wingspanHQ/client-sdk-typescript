/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PayablesSummary = {
  invoicesApproved: number;
  invoicesDraft: number;
  invoicesOpen: number;
  invoicesOverdue: number;
  invoicesPaid: number;
  invoicesPending: number;
  memberId: string;
  totalApproved: number;
  totalOpen: number;
  totalOverdue: number;
  totalPaid: number;
};

/** @internal */
export const PayablesSummary$inboundSchema: z.ZodType<
  PayablesSummary,
  z.ZodTypeDef,
  unknown
> = z.object({
  invoicesApproved: z.number(),
  invoicesDraft: z.number(),
  invoicesOpen: z.number(),
  invoicesOverdue: z.number(),
  invoicesPaid: z.number(),
  invoicesPending: z.number(),
  memberId: z.string(),
  totalApproved: z.number(),
  totalOpen: z.number(),
  totalOverdue: z.number(),
  totalPaid: z.number(),
});

/** @internal */
export type PayablesSummary$Outbound = {
  invoicesApproved: number;
  invoicesDraft: number;
  invoicesOpen: number;
  invoicesOverdue: number;
  invoicesPaid: number;
  invoicesPending: number;
  memberId: string;
  totalApproved: number;
  totalOpen: number;
  totalOverdue: number;
  totalPaid: number;
};

/** @internal */
export const PayablesSummary$outboundSchema: z.ZodType<
  PayablesSummary$Outbound,
  z.ZodTypeDef,
  PayablesSummary
> = z.object({
  invoicesApproved: z.number(),
  invoicesDraft: z.number(),
  invoicesOpen: z.number(),
  invoicesOverdue: z.number(),
  invoicesPaid: z.number(),
  invoicesPending: z.number(),
  memberId: z.string(),
  totalApproved: z.number(),
  totalOpen: z.number(),
  totalOverdue: z.number(),
  totalPaid: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayablesSummary$ {
  /** @deprecated use `PayablesSummary$inboundSchema` instead. */
  export const inboundSchema = PayablesSummary$inboundSchema;
  /** @deprecated use `PayablesSummary$outboundSchema` instead. */
  export const outboundSchema = PayablesSummary$outboundSchema;
  /** @deprecated use `PayablesSummary$Outbound` instead. */
  export type Outbound = PayablesSummary$Outbound;
}

export function payablesSummaryToJSON(
  payablesSummary: PayablesSummary,
): string {
  return JSON.stringify(PayablesSummary$outboundSchema.parse(payablesSummary));
}

export function payablesSummaryFromJSON(
  jsonString: string,
): SafeParseResult<PayablesSummary, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PayablesSummary$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PayablesSummary' from JSON`,
  );
}
