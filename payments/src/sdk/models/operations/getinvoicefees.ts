/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetInvoiceFeesRequest = {
    /**
     * Unique identifier of an invoice
     */
    invoiceId: string;
};

export type GetInvoiceFeesResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * Fees on Invoice
     */
    invoiceFeeCalculation?: shared.InvoiceFeeCalculation | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const GetInvoiceFeesRequest$inboundSchema: z.ZodType<
    GetInvoiceFeesRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        invoice_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            invoice_id: "invoiceId",
        });
    });

/** @internal */
export type GetInvoiceFeesRequest$Outbound = {
    invoice_id: string;
};

/** @internal */
export const GetInvoiceFeesRequest$outboundSchema: z.ZodType<
    GetInvoiceFeesRequest$Outbound,
    z.ZodTypeDef,
    GetInvoiceFeesRequest
> = z
    .object({
        invoiceId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            invoiceId: "invoice_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceFeesRequest$ {
    /** @deprecated use `GetInvoiceFeesRequest$inboundSchema` instead. */
    export const inboundSchema = GetInvoiceFeesRequest$inboundSchema;
    /** @deprecated use `GetInvoiceFeesRequest$outboundSchema` instead. */
    export const outboundSchema = GetInvoiceFeesRequest$outboundSchema;
    /** @deprecated use `GetInvoiceFeesRequest$Outbound` instead. */
    export type Outbound = GetInvoiceFeesRequest$Outbound;
}

/** @internal */
export const GetInvoiceFeesResponse$inboundSchema: z.ZodType<
    GetInvoiceFeesResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        InvoiceFeeCalculation: shared.InvoiceFeeCalculation$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            InvoiceFeeCalculation: "invoiceFeeCalculation",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type GetInvoiceFeesResponse$Outbound = {
    ContentType: string;
    InvoiceFeeCalculation?: shared.InvoiceFeeCalculation$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const GetInvoiceFeesResponse$outboundSchema: z.ZodType<
    GetInvoiceFeesResponse$Outbound,
    z.ZodTypeDef,
    GetInvoiceFeesResponse
> = z
    .object({
        contentType: z.string(),
        invoiceFeeCalculation: shared.InvoiceFeeCalculation$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            invoiceFeeCalculation: "InvoiceFeeCalculation",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceFeesResponse$ {
    /** @deprecated use `GetInvoiceFeesResponse$inboundSchema` instead. */
    export const inboundSchema = GetInvoiceFeesResponse$inboundSchema;
    /** @deprecated use `GetInvoiceFeesResponse$outboundSchema` instead. */
    export const outboundSchema = GetInvoiceFeesResponse$outboundSchema;
    /** @deprecated use `GetInvoiceFeesResponse$Outbound` instead. */
    export type Outbound = GetInvoiceFeesResponse$Outbound;
}
