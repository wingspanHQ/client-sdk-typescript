/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AccountPurpose, AccountPurpose$ } from "./accountpurpose";
import {
    AccountVerificationRequest,
    AccountVerificationRequest$,
} from "./accountverificationrequest";
import {
    SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d,
    SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d$,
} from "./sixhundredandsixtytwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d";
import { z } from "zod";

export enum AccountUpdateRequestStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
    Disconnected = "Disconnected",
    Ephemeral = "Ephemeral",
}

export enum AccountUpdateRequestUsage {
    Business = "Business",
    Personal = "Personal",
    Mixed = "Mixed",
}

export type AccountUpdateRequest = {
    accountVerification?: AccountVerificationRequest | null | undefined;
    integration?:
        | SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d
        | null
        | undefined;
    name?: string | null | undefined;
    status?: AccountUpdateRequestStatus | null | undefined;
    usage?: AccountUpdateRequestUsage | null | undefined;
    usedFor?: AccountPurpose | null | undefined;
};

/** @internal */
export const AccountUpdateRequestStatus$ = z.nativeEnum(AccountUpdateRequestStatus);

/** @internal */
export const AccountUpdateRequestUsage$ = z.nativeEnum(AccountUpdateRequestUsage);

/** @internal */
export namespace AccountUpdateRequest$ {
    export type Inbound = {
        accountVerification?: AccountVerificationRequest$.Inbound | null | undefined;
        integration?:
            | SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d$.Inbound
            | null
            | undefined;
        name?: string | null | undefined;
        status?: AccountUpdateRequestStatus | null | undefined;
        usage?: AccountUpdateRequestUsage | null | undefined;
        usedFor?: AccountPurpose$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<AccountUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            accountVerification: z.nullable(AccountVerificationRequest$.inboundSchema).optional(),
            integration: z
                .nullable(
                    SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d$.inboundSchema
                )
                .optional(),
            name: z.nullable(z.string()).optional(),
            status: z.nullable(AccountUpdateRequestStatus$).optional(),
            usage: z.nullable(AccountUpdateRequestUsage$).optional(),
            usedFor: z.nullable(AccountPurpose$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.accountVerification === undefined
                    ? null
                    : { accountVerification: v.accountVerification }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.usage === undefined ? null : { usage: v.usage }),
                ...(v.usedFor === undefined ? null : { usedFor: v.usedFor }),
            };
        });

    export type Outbound = {
        accountVerification?: AccountVerificationRequest$.Outbound | null | undefined;
        integration?:
            | SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d$.Outbound
            | null
            | undefined;
        name?: string | null | undefined;
        status?: AccountUpdateRequestStatus | null | undefined;
        usage?: AccountUpdateRequestUsage | null | undefined;
        usedFor?: AccountPurpose$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountUpdateRequest> = z
        .object({
            accountVerification: z.nullable(AccountVerificationRequest$.outboundSchema).optional(),
            integration: z
                .nullable(
                    SixHundredAndSixtyTwob4b108cbbf88d6c8da2cc52e8dc2fcc4e24449d66b34b20beeb55bad5790d$.outboundSchema
                )
                .optional(),
            name: z.nullable(z.string()).optional(),
            status: z.nullable(AccountUpdateRequestStatus$).optional(),
            usage: z.nullable(AccountUpdateRequestUsage$).optional(),
            usedFor: z.nullable(AccountPurpose$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.accountVerification === undefined
                    ? null
                    : { accountVerification: v.accountVerification }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.status === undefined ? null : { status: v.status }),
                ...(v.usage === undefined ? null : { usage: v.usage }),
                ...(v.usedFor === undefined ? null : { usedFor: v.usedFor }),
            };
        });
}
