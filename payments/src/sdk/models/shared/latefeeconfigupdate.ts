/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  FrequencyUpdate,
  FrequencyUpdate$inboundSchema,
  FrequencyUpdate$Outbound,
  FrequencyUpdate$outboundSchema,
} from "./frequencyupdate.js";

export type LateFeeConfigUpdate = {
  frequency?: FrequencyUpdate | null | undefined;
  lateFeeAmount?: number | null | undefined;
  lateFeePercentage?: number | null | undefined;
};

/** @internal */
export const LateFeeConfigUpdate$inboundSchema: z.ZodType<
  LateFeeConfigUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  frequency: z.nullable(FrequencyUpdate$inboundSchema).optional(),
  lateFeeAmount: z.nullable(z.number()).optional(),
  lateFeePercentage: z.nullable(z.number()).optional(),
});

/** @internal */
export type LateFeeConfigUpdate$Outbound = {
  frequency?: FrequencyUpdate$Outbound | null | undefined;
  lateFeeAmount?: number | null | undefined;
  lateFeePercentage?: number | null | undefined;
};

/** @internal */
export const LateFeeConfigUpdate$outboundSchema: z.ZodType<
  LateFeeConfigUpdate$Outbound,
  z.ZodTypeDef,
  LateFeeConfigUpdate
> = z.object({
  frequency: z.nullable(FrequencyUpdate$outboundSchema).optional(),
  lateFeeAmount: z.nullable(z.number()).optional(),
  lateFeePercentage: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LateFeeConfigUpdate$ {
  /** @deprecated use `LateFeeConfigUpdate$inboundSchema` instead. */
  export const inboundSchema = LateFeeConfigUpdate$inboundSchema;
  /** @deprecated use `LateFeeConfigUpdate$outboundSchema` instead. */
  export const outboundSchema = LateFeeConfigUpdate$outboundSchema;
  /** @deprecated use `LateFeeConfigUpdate$Outbound` instead. */
  export type Outbound = LateFeeConfigUpdate$Outbound;
}

export function lateFeeConfigUpdateToJSON(
  lateFeeConfigUpdate: LateFeeConfigUpdate,
): string {
  return JSON.stringify(
    LateFeeConfigUpdate$outboundSchema.parse(lateFeeConfigUpdate),
  );
}

export function lateFeeConfigUpdateFromJSON(
  jsonString: string,
): SafeParseResult<LateFeeConfigUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LateFeeConfigUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LateFeeConfigUpdate' from JSON`,
  );
}
