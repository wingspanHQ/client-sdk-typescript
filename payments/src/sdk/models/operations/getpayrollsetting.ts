/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetPayrollSettingRequest = {
  /**
   * Unique identifier
   */
  id: string;
};

export type GetPayrollSettingResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * The payroll settings for a member
   */
  payrollSettings?: shared.PayrollSettings | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const GetPayrollSettingRequest$inboundSchema: z.ZodType<
  GetPayrollSettingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetPayrollSettingRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetPayrollSettingRequest$outboundSchema: z.ZodType<
  GetPayrollSettingRequest$Outbound,
  z.ZodTypeDef,
  GetPayrollSettingRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPayrollSettingRequest$ {
  /** @deprecated use `GetPayrollSettingRequest$inboundSchema` instead. */
  export const inboundSchema = GetPayrollSettingRequest$inboundSchema;
  /** @deprecated use `GetPayrollSettingRequest$outboundSchema` instead. */
  export const outboundSchema = GetPayrollSettingRequest$outboundSchema;
  /** @deprecated use `GetPayrollSettingRequest$Outbound` instead. */
  export type Outbound = GetPayrollSettingRequest$Outbound;
}

/** @internal */
export const GetPayrollSettingResponse$inboundSchema: z.ZodType<
  GetPayrollSettingResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  PayrollSettings: shared.PayrollSettings$inboundSchema.optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "PayrollSettings": "payrollSettings",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetPayrollSettingResponse$Outbound = {
  ContentType: string;
  PayrollSettings?: shared.PayrollSettings$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const GetPayrollSettingResponse$outboundSchema: z.ZodType<
  GetPayrollSettingResponse$Outbound,
  z.ZodTypeDef,
  GetPayrollSettingResponse
> = z.object({
  contentType: z.string(),
  payrollSettings: shared.PayrollSettings$outboundSchema.optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    payrollSettings: "PayrollSettings",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPayrollSettingResponse$ {
  /** @deprecated use `GetPayrollSettingResponse$inboundSchema` instead. */
  export const inboundSchema = GetPayrollSettingResponse$inboundSchema;
  /** @deprecated use `GetPayrollSettingResponse$outboundSchema` instead. */
  export const outboundSchema = GetPayrollSettingResponse$outboundSchema;
  /** @deprecated use `GetPayrollSettingResponse$Outbound` instead. */
  export type Outbound = GetPayrollSettingResponse$Outbound;
}
