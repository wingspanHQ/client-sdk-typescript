/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type InstitutionResponse = {
    address: string;
    isACHSupported: boolean;
    isRTPSupported: boolean;
    isWireSupported: boolean;
    name: string;
    routingNumber: string;
};

/** @internal */
export namespace InstitutionResponse$ {
    export type Inbound = {
        address: string;
        isACHSupported: boolean;
        isRTPSupported: boolean;
        isWireSupported: boolean;
        name: string;
        routingNumber: string;
    };

    export const inboundSchema: z.ZodType<InstitutionResponse, z.ZodTypeDef, Inbound> = z
        .object({
            address: z.string(),
            isACHSupported: z.boolean(),
            isRTPSupported: z.boolean(),
            isWireSupported: z.boolean(),
            name: z.string(),
            routingNumber: z.string(),
        })
        .transform((v) => {
            return {
                address: v.address,
                isACHSupported: v.isACHSupported,
                isRTPSupported: v.isRTPSupported,
                isWireSupported: v.isWireSupported,
                name: v.name,
                routingNumber: v.routingNumber,
            };
        });

    export type Outbound = {
        address: string;
        isACHSupported: boolean;
        isRTPSupported: boolean;
        isWireSupported: boolean;
        name: string;
        routingNumber: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InstitutionResponse> = z
        .object({
            address: z.string(),
            isACHSupported: z.boolean(),
            isRTPSupported: z.boolean(),
            isWireSupported: z.boolean(),
            name: z.string(),
            routingNumber: z.string(),
        })
        .transform((v) => {
            return {
                address: v.address,
                isACHSupported: v.isACHSupported,
                isRTPSupported: v.isRTPSupported,
                isWireSupported: v.isWireSupported,
                name: v.name,
                routingNumber: v.routingNumber,
            };
        });
}
