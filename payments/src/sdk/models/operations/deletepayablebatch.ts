/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeletePayableBatchRequest = {
    /**
     * Unique identifier for a batch
     */
    batchId: string;
};

export type DeletePayableBatchResponse = {
    /**
     * A batch of items for importing as payables
     */
    bulkPayableBatch?: shared.BulkPayableBatch | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const DeletePayableBatchRequest$inboundSchema: z.ZodType<
    DeletePayableBatchRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    batchId: z.string(),
});

/** @internal */
export type DeletePayableBatchRequest$Outbound = {
    batchId: string;
};

/** @internal */
export const DeletePayableBatchRequest$outboundSchema: z.ZodType<
    DeletePayableBatchRequest$Outbound,
    z.ZodTypeDef,
    DeletePayableBatchRequest
> = z.object({
    batchId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePayableBatchRequest$ {
    /** @deprecated use `DeletePayableBatchRequest$inboundSchema` instead. */
    export const inboundSchema = DeletePayableBatchRequest$inboundSchema;
    /** @deprecated use `DeletePayableBatchRequest$outboundSchema` instead. */
    export const outboundSchema = DeletePayableBatchRequest$outboundSchema;
    /** @deprecated use `DeletePayableBatchRequest$Outbound` instead. */
    export type Outbound = DeletePayableBatchRequest$Outbound;
}

/** @internal */
export const DeletePayableBatchResponse$inboundSchema: z.ZodType<
    DeletePayableBatchResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        BulkPayableBatch: shared.BulkPayableBatch$inboundSchema.optional(),
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            BulkPayableBatch: "bulkPayableBatch",
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type DeletePayableBatchResponse$Outbound = {
    BulkPayableBatch?: shared.BulkPayableBatch$Outbound | undefined;
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const DeletePayableBatchResponse$outboundSchema: z.ZodType<
    DeletePayableBatchResponse$Outbound,
    z.ZodTypeDef,
    DeletePayableBatchResponse
> = z
    .object({
        bulkPayableBatch: shared.BulkPayableBatch$outboundSchema.optional(),
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            bulkPayableBatch: "BulkPayableBatch",
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePayableBatchResponse$ {
    /** @deprecated use `DeletePayableBatchResponse$inboundSchema` instead. */
    export const inboundSchema = DeletePayableBatchResponse$inboundSchema;
    /** @deprecated use `DeletePayableBatchResponse$outboundSchema` instead. */
    export const outboundSchema = DeletePayableBatchResponse$outboundSchema;
    /** @deprecated use `DeletePayableBatchResponse$Outbound` instead. */
    export type Outbound = DeletePayableBatchResponse$Outbound;
}
