/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NewUserSettings, NewUserSettings$ } from "./newusersettings";
import { UserNotificationSettings, UserNotificationSettings$ } from "./usernotificationsettings";
import { UserProfile, UserProfile$ } from "./userprofile";
import { z } from "zod";

export enum UserCreateRequestStatus {
    Pending = "Pending",
    Active = "Active",
    Disabled = "Disabled",
}

export type UserCreateRequest = {
    email: string;
    notificationSettings?: UserNotificationSettings | null | undefined;
    password?: string | null | undefined;
    profile?: UserProfile | null | undefined;
    settings?: NewUserSettings | null | undefined;
    status?: UserCreateRequestStatus | null | undefined;
};

/** @internal */
export const UserCreateRequestStatus$ = z.nativeEnum(UserCreateRequestStatus);

/** @internal */
export namespace UserCreateRequest$ {
    export type Inbound = {
        email: string;
        notificationSettings?: UserNotificationSettings$.Inbound | null | undefined;
        password?: string | null | undefined;
        profile?: UserProfile$.Inbound | null | undefined;
        settings?: NewUserSettings$.Inbound | null | undefined;
        status?: UserCreateRequestStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<UserCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            email: z.string(),
            notificationSettings: z.nullable(UserNotificationSettings$.inboundSchema).optional(),
            password: z.nullable(z.string()).optional(),
            profile: z.nullable(UserProfile$.inboundSchema).optional(),
            settings: z.nullable(NewUserSettings$.inboundSchema).optional(),
            status: z.nullable(UserCreateRequestStatus$).optional(),
        })
        .transform((v) => {
            return {
                email: v.email,
                ...(v.notificationSettings === undefined
                    ? null
                    : { notificationSettings: v.notificationSettings }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profile === undefined ? null : { profile: v.profile }),
                ...(v.settings === undefined ? null : { settings: v.settings }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        email: string;
        notificationSettings?: UserNotificationSettings$.Outbound | null | undefined;
        password?: string | null | undefined;
        profile?: UserProfile$.Outbound | null | undefined;
        settings?: NewUserSettings$.Outbound | null | undefined;
        status?: UserCreateRequestStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UserCreateRequest> = z
        .object({
            email: z.string(),
            notificationSettings: z.nullable(UserNotificationSettings$.outboundSchema).optional(),
            password: z.nullable(z.string()).optional(),
            profile: z.nullable(UserProfile$.outboundSchema).optional(),
            settings: z.nullable(NewUserSettings$.outboundSchema).optional(),
            status: z.nullable(UserCreateRequestStatus$).optional(),
        })
        .transform((v) => {
            return {
                email: v.email,
                ...(v.notificationSettings === undefined
                    ? null
                    : { notificationSettings: v.notificationSettings }),
                ...(v.password === undefined ? null : { password: v.password }),
                ...(v.profile === undefined ? null : { profile: v.profile }),
                ...(v.settings === undefined ? null : { settings: v.settings }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
