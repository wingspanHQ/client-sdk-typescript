/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type BulkBatchCreate = {
    labels?: Record<string, string> | null | undefined;
};

/** @internal */
export namespace BulkBatchCreate$ {
    export type Inbound = {
        labels?: Record<string, string> | null | undefined;
    };

    export const inboundSchema: z.ZodType<BulkBatchCreate, z.ZodTypeDef, Inbound> = z
        .object({
            labels: z.nullable(z.record(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.labels === undefined ? null : { labels: v.labels }),
            };
        });

    export type Outbound = {
        labels?: Record<string, string> | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BulkBatchCreate> = z
        .object({
            labels: z.nullable(z.record(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.labels === undefined ? null : { labels: v.labels }),
            };
        });
}
