/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2,
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$inboundSchema,
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$Outbound,
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$outboundSchema,
} from "./sevenhundredandfiftysevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2.js";
import {
    UserRoles,
    UserRoles$inboundSchema,
    UserRoles$Outbound,
    UserRoles$outboundSchema,
} from "./userroles.js";
import * as z from "zod";

export const ProcessingStrategy = {
    Merge: "Merge",
    Single: "Single",
} as const;
export type ProcessingStrategy = ClosedEnum<typeof ProcessingStrategy>;

export const BulkInvoiceBatchStatus = {
    Open: "Open",
    Pending: "Pending",
    Processing: "Processing",
    Complete: "Complete",
    Failed: "Failed",
} as const;
export type BulkInvoiceBatchStatus = ClosedEnum<typeof BulkInvoiceBatchStatus>;

export type BulkInvoiceBatch = {
    bulkInvoiceBatchId: string;
    createdAt: string;
    eventActors: { [k: string]: string };
    labels: { [k: string]: string };
    memberId: string;
    processingStrategy: ProcessingStrategy;
    statistics?:
        | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2
        | null
        | undefined;
    status: BulkInvoiceBatchStatus;
    updatedAt: string;
    userRoles: UserRoles;
};

/** @internal */
export const ProcessingStrategy$inboundSchema: z.ZodNativeEnum<typeof ProcessingStrategy> =
    z.nativeEnum(ProcessingStrategy);

/** @internal */
export const ProcessingStrategy$outboundSchema: z.ZodNativeEnum<typeof ProcessingStrategy> =
    ProcessingStrategy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProcessingStrategy$ {
    /** @deprecated use `ProcessingStrategy$inboundSchema` instead. */
    export const inboundSchema = ProcessingStrategy$inboundSchema;
    /** @deprecated use `ProcessingStrategy$outboundSchema` instead. */
    export const outboundSchema = ProcessingStrategy$outboundSchema;
}

/** @internal */
export const BulkInvoiceBatchStatus$inboundSchema: z.ZodNativeEnum<typeof BulkInvoiceBatchStatus> =
    z.nativeEnum(BulkInvoiceBatchStatus);

/** @internal */
export const BulkInvoiceBatchStatus$outboundSchema: z.ZodNativeEnum<typeof BulkInvoiceBatchStatus> =
    BulkInvoiceBatchStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkInvoiceBatchStatus$ {
    /** @deprecated use `BulkInvoiceBatchStatus$inboundSchema` instead. */
    export const inboundSchema = BulkInvoiceBatchStatus$inboundSchema;
    /** @deprecated use `BulkInvoiceBatchStatus$outboundSchema` instead. */
    export const outboundSchema = BulkInvoiceBatchStatus$outboundSchema;
}

/** @internal */
export const BulkInvoiceBatch$inboundSchema: z.ZodType<BulkInvoiceBatch, z.ZodTypeDef, unknown> =
    z.object({
        bulkInvoiceBatchId: z.string(),
        createdAt: z.string(),
        eventActors: z.record(z.string()),
        labels: z.record(z.string()),
        memberId: z.string(),
        processingStrategy: ProcessingStrategy$inboundSchema,
        statistics: z
            .nullable(
                SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$inboundSchema
            )
            .optional(),
        status: BulkInvoiceBatchStatus$inboundSchema,
        updatedAt: z.string(),
        userRoles: UserRoles$inboundSchema,
    });

/** @internal */
export type BulkInvoiceBatch$Outbound = {
    bulkInvoiceBatchId: string;
    createdAt: string;
    eventActors: { [k: string]: string };
    labels: { [k: string]: string };
    memberId: string;
    processingStrategy: string;
    statistics?:
        | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$Outbound
        | null
        | undefined;
    status: string;
    updatedAt: string;
    userRoles: UserRoles$Outbound;
};

/** @internal */
export const BulkInvoiceBatch$outboundSchema: z.ZodType<
    BulkInvoiceBatch$Outbound,
    z.ZodTypeDef,
    BulkInvoiceBatch
> = z.object({
    bulkInvoiceBatchId: z.string(),
    createdAt: z.string(),
    eventActors: z.record(z.string()),
    labels: z.record(z.string()),
    memberId: z.string(),
    processingStrategy: ProcessingStrategy$outboundSchema,
    statistics: z
        .nullable(
            SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$outboundSchema
        )
        .optional(),
    status: BulkInvoiceBatchStatus$outboundSchema,
    updatedAt: z.string(),
    userRoles: UserRoles$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkInvoiceBatch$ {
    /** @deprecated use `BulkInvoiceBatch$inboundSchema` instead. */
    export const inboundSchema = BulkInvoiceBatch$inboundSchema;
    /** @deprecated use `BulkInvoiceBatch$outboundSchema` instead. */
    export const outboundSchema = BulkInvoiceBatch$outboundSchema;
    /** @deprecated use `BulkInvoiceBatch$Outbound` instead. */
    export type Outbound = BulkInvoiceBatch$Outbound;
}
