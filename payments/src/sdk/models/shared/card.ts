/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const CardStatus = {
    Active: "Active",
    Inactive: "Inactive",
    Stolen: "Stolen",
    Lost: "Lost",
    Frozen: "Frozen",
    ClosedByCustomer: "ClosedByCustomer",
    SuspectedFraud: "SuspectedFraud",
} as const;
export type CardStatus = ClosedEnum<typeof CardStatus>;

export const CardType = {
    IndividualDebitCard: "individualDebitCard",
    BusinessDebitCard: "businessDebitCard",
    IndividualVirtualDebitCard: "individualVirtualDebitCard",
    BusinessVirtualDebitCard: "businessVirtualDebitCard",
} as const;
export type CardType = ClosedEnum<typeof CardType>;

export type Card = {
    brand: string;
    createdAt: string;
    expirationDate: string;
    last4Digits: string;
    status: CardStatus;
    type: CardType;
};

/** @internal */
export const CardStatus$inboundSchema: z.ZodNativeEnum<typeof CardStatus> =
    z.nativeEnum(CardStatus);

/** @internal */
export const CardStatus$outboundSchema: z.ZodNativeEnum<typeof CardStatus> =
    CardStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardStatus$ {
    /** @deprecated use `CardStatus$inboundSchema` instead. */
    export const inboundSchema = CardStatus$inboundSchema;
    /** @deprecated use `CardStatus$outboundSchema` instead. */
    export const outboundSchema = CardStatus$outboundSchema;
}

/** @internal */
export const CardType$inboundSchema: z.ZodNativeEnum<typeof CardType> = z.nativeEnum(CardType);

/** @internal */
export const CardType$outboundSchema: z.ZodNativeEnum<typeof CardType> = CardType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardType$ {
    /** @deprecated use `CardType$inboundSchema` instead. */
    export const inboundSchema = CardType$inboundSchema;
    /** @deprecated use `CardType$outboundSchema` instead. */
    export const outboundSchema = CardType$outboundSchema;
}

/** @internal */
export const Card$inboundSchema: z.ZodType<Card, z.ZodTypeDef, unknown> = z.object({
    brand: z.string(),
    createdAt: z.string(),
    expirationDate: z.string(),
    last4Digits: z.string(),
    status: CardStatus$inboundSchema,
    type: CardType$inboundSchema,
});

/** @internal */
export type Card$Outbound = {
    brand: string;
    createdAt: string;
    expirationDate: string;
    last4Digits: string;
    status: string;
    type: string;
};

/** @internal */
export const Card$outboundSchema: z.ZodType<Card$Outbound, z.ZodTypeDef, Card> = z.object({
    brand: z.string(),
    createdAt: z.string(),
    expirationDate: z.string(),
    last4Digits: z.string(),
    status: CardStatus$outboundSchema,
    type: CardType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Card$ {
    /** @deprecated use `Card$inboundSchema` instead. */
    export const inboundSchema = Card$inboundSchema;
    /** @deprecated use `Card$outboundSchema` instead. */
    export const outboundSchema = Card$outboundSchema;
    /** @deprecated use `Card$Outbound` instead. */
    export type Outbound = Card$Outbound;
}
