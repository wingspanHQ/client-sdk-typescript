/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type TaxFormInviteResponse = {
    success?: any | undefined;
};

/** @internal */
export namespace TaxFormInviteResponse$ {
    export type Inbound = {
        success?: any | undefined;
    };

    export const inboundSchema: z.ZodType<TaxFormInviteResponse, z.ZodTypeDef, Inbound> = z
        .object({
            success: z.any().optional(),
        })
        .transform((v) => {
            return {
                ...(v.success === undefined ? null : { success: v.success }),
            };
        });

    export type Outbound = {
        success?: any | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaxFormInviteResponse> = z
        .object({
            success: z.any().optional(),
        })
        .transform((v) => {
            return {
                ...(v.success === undefined ? null : { success: v.success }),
            };
        });
}
