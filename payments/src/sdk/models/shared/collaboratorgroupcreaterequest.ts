/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    CollaboratorGroupRequirement,
    CollaboratorGroupRequirement$,
} from "./collaboratorgrouprequirement";
import { z } from "zod";

export type CollaboratorGroupCreateRequest = {
    collaboratorSettings?: Record<string, string> | null | undefined;
    description: string;
    eligibilityRequirements?: Array<CollaboratorGroupRequirement> | null | undefined;
    name: string;
};

/** @internal */
export namespace CollaboratorGroupCreateRequest$ {
    export type Inbound = {
        collaboratorSettings?: Record<string, string> | null | undefined;
        description: string;
        eligibilityRequirements?: Array<CollaboratorGroupRequirement$.Inbound> | null | undefined;
        name: string;
    };

    export const inboundSchema: z.ZodType<CollaboratorGroupCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            collaboratorSettings: z.nullable(z.record(z.string())).optional(),
            description: z.string(),
            eligibilityRequirements: z
                .nullable(z.array(CollaboratorGroupRequirement$.inboundSchema))
                .optional(),
            name: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.collaboratorSettings === undefined
                    ? null
                    : { collaboratorSettings: v.collaboratorSettings }),
                description: v.description,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                name: v.name,
            };
        });

    export type Outbound = {
        collaboratorSettings?: Record<string, string> | null | undefined;
        description: string;
        eligibilityRequirements?: Array<CollaboratorGroupRequirement$.Outbound> | null | undefined;
        name: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CollaboratorGroupCreateRequest> =
        z
            .object({
                collaboratorSettings: z.nullable(z.record(z.string())).optional(),
                description: z.string(),
                eligibilityRequirements: z
                    .nullable(z.array(CollaboratorGroupRequirement$.outboundSchema))
                    .optional(),
                name: z.string(),
            })
            .transform((v) => {
                return {
                    ...(v.collaboratorSettings === undefined
                        ? null
                        : { collaboratorSettings: v.collaboratorSettings }),
                    description: v.description,
                    ...(v.eligibilityRequirements === undefined
                        ? null
                        : { eligibilityRequirements: v.eligibilityRequirements }),
                    name: v.name,
                };
            });
}
