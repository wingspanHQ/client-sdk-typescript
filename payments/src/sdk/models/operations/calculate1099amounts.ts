/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type Calculate1099AmountsResponse = {
    /**
     * Calculate 1099 amounts response
     */
    calculate1099Response?: shared.Calculate1099Response | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const Calculate1099AmountsResponse$inboundSchema: z.ZodType<
    Calculate1099AmountsResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        Calculate1099Response: shared.Calculate1099Response$inboundSchema.optional(),
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            Calculate1099Response: "calculate1099Response",
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type Calculate1099AmountsResponse$Outbound = {
    Calculate1099Response?: shared.Calculate1099Response$Outbound | undefined;
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const Calculate1099AmountsResponse$outboundSchema: z.ZodType<
    Calculate1099AmountsResponse$Outbound,
    z.ZodTypeDef,
    Calculate1099AmountsResponse
> = z
    .object({
        calculate1099Response: shared.Calculate1099Response$outboundSchema.optional(),
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            calculate1099Response: "Calculate1099Response",
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Calculate1099AmountsResponse$ {
    /** @deprecated use `Calculate1099AmountsResponse$inboundSchema` instead. */
    export const inboundSchema = Calculate1099AmountsResponse$inboundSchema;
    /** @deprecated use `Calculate1099AmountsResponse$outboundSchema` instead. */
    export const outboundSchema = Calculate1099AmountsResponse$outboundSchema;
    /** @deprecated use `Calculate1099AmountsResponse$Outbound` instead. */
    export type Outbound = Calculate1099AmountsResponse$Outbound;
}
