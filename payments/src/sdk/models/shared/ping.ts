/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Ping = {
    code: number;
    message: string;
    status: string;
};

/** @internal */
export namespace Ping$ {
    export type Inbound = {
        code: number;
        message: string;
        status: string;
    };

    export const inboundSchema: z.ZodType<Ping, z.ZodTypeDef, Inbound> = z
        .object({
            code: z.number(),
            message: z.string(),
            status: z.string(),
        })
        .transform((v) => {
            return {
                code: v.code,
                message: v.message,
                status: v.status,
            };
        });

    export type Outbound = {
        code: number;
        message: string;
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Ping> = z
        .object({
            code: z.number(),
            message: z.string(),
            status: z.string(),
        })
        .transform((v) => {
            return {
                code: v.code,
                message: v.message,
                status: v.status,
            };
        });
}
