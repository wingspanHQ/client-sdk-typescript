/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum AdditionalDataUpdateRequestResourceType {
    Collaborator = "Collaborator",
    LineItem = "LineItem",
    LessThanNilGreaterThan = "<nil>",
}

export enum AdditionalDataUpdateRequestType {
    Boolean = "Boolean",
    String = "String",
    LessThanNilGreaterThan = "<nil>",
}

export type AdditionalDataUpdateRequest = {
    key?: string | null | undefined;
    name?: string | null | undefined;
    required?: boolean | null | undefined;
    resourceType?: AdditionalDataUpdateRequestResourceType | null | undefined;
    type?: AdditionalDataUpdateRequestType | null | undefined;
};

/** @internal */
export const AdditionalDataUpdateRequestResourceType$ = z.nativeEnum(
    AdditionalDataUpdateRequestResourceType
);

/** @internal */
export const AdditionalDataUpdateRequestType$ = z.nativeEnum(AdditionalDataUpdateRequestType);

/** @internal */
export namespace AdditionalDataUpdateRequest$ {
    export type Inbound = {
        key?: string | null | undefined;
        name?: string | null | undefined;
        required?: boolean | null | undefined;
        resourceType?: AdditionalDataUpdateRequestResourceType | null | undefined;
        type?: AdditionalDataUpdateRequestType | null | undefined;
    };

    export const inboundSchema: z.ZodType<AdditionalDataUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            key: z.string().nullable().optional(),
            name: z.string().nullable().optional(),
            required: z.boolean().nullable().optional(),
            resourceType: AdditionalDataUpdateRequestResourceType$.nullable().optional(),
            type: AdditionalDataUpdateRequestType$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.required === undefined ? null : { required: v.required }),
                ...(v.resourceType === undefined ? null : { resourceType: v.resourceType }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        key?: string | null | undefined;
        name?: string | null | undefined;
        required?: boolean | null | undefined;
        resourceType?: AdditionalDataUpdateRequestResourceType | null | undefined;
        type?: AdditionalDataUpdateRequestType | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AdditionalDataUpdateRequest> = z
        .object({
            key: z.string().nullable().optional(),
            name: z.string().nullable().optional(),
            required: z.boolean().nullable().optional(),
            resourceType: AdditionalDataUpdateRequestResourceType$.nullable().optional(),
            type: AdditionalDataUpdateRequestType$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.key === undefined ? null : { key: v.key }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.required === undefined ? null : { required: v.required }),
                ...(v.resourceType === undefined ? null : { resourceType: v.resourceType }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}
