/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeletePaymentEligibilityRequirementRequest = {
    /**
     * Unique identifier
     */
    id: string;
};

export type DeletePaymentEligibilityRequirementResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * See payment eligibility requirements on member
     */
    paymentEligibility?: shared.PaymentEligibility | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const DeletePaymentEligibilityRequirementRequest$inboundSchema: z.ZodType<
    DeletePaymentEligibilityRequirementRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type DeletePaymentEligibilityRequirementRequest$Outbound = {
    id: string;
};

/** @internal */
export const DeletePaymentEligibilityRequirementRequest$outboundSchema: z.ZodType<
    DeletePaymentEligibilityRequirementRequest$Outbound,
    z.ZodTypeDef,
    DeletePaymentEligibilityRequirementRequest
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentEligibilityRequirementRequest$ {
    /** @deprecated use `DeletePaymentEligibilityRequirementRequest$inboundSchema` instead. */
    export const inboundSchema = DeletePaymentEligibilityRequirementRequest$inboundSchema;
    /** @deprecated use `DeletePaymentEligibilityRequirementRequest$outboundSchema` instead. */
    export const outboundSchema = DeletePaymentEligibilityRequirementRequest$outboundSchema;
    /** @deprecated use `DeletePaymentEligibilityRequirementRequest$Outbound` instead. */
    export type Outbound = DeletePaymentEligibilityRequirementRequest$Outbound;
}

/** @internal */
export const DeletePaymentEligibilityRequirementResponse$inboundSchema: z.ZodType<
    DeletePaymentEligibilityRequirementResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        PaymentEligibility: shared.PaymentEligibility$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            PaymentEligibility: "paymentEligibility",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type DeletePaymentEligibilityRequirementResponse$Outbound = {
    ContentType: string;
    PaymentEligibility?: shared.PaymentEligibility$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const DeletePaymentEligibilityRequirementResponse$outboundSchema: z.ZodType<
    DeletePaymentEligibilityRequirementResponse$Outbound,
    z.ZodTypeDef,
    DeletePaymentEligibilityRequirementResponse
> = z
    .object({
        contentType: z.string(),
        paymentEligibility: shared.PaymentEligibility$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            paymentEligibility: "PaymentEligibility",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeletePaymentEligibilityRequirementResponse$ {
    /** @deprecated use `DeletePaymentEligibilityRequirementResponse$inboundSchema` instead. */
    export const inboundSchema = DeletePaymentEligibilityRequirementResponse$inboundSchema;
    /** @deprecated use `DeletePaymentEligibilityRequirementResponse$outboundSchema` instead. */
    export const outboundSchema = DeletePaymentEligibilityRequirementResponse$outboundSchema;
    /** @deprecated use `DeletePaymentEligibilityRequirementResponse$Outbound` instead. */
    export type Outbound = DeletePaymentEligibilityRequirementResponse$Outbound;
}
