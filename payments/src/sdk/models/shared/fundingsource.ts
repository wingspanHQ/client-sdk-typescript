/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export const FundingSourceCurrency = {
  Usd: "USD",
  Cad: "CAD",
} as const;
export type FundingSourceCurrency = ClosedEnum<typeof FundingSourceCurrency>;

export const FundingSourceType = {
  InternalAccount: "InternalAccount",
  Account: "Account",
  PaymentCard: "PaymentCard",
} as const;
export type FundingSourceType = ClosedEnum<typeof FundingSourceType>;

export type FundingSource = {
  fundingSourceCurrency: FundingSourceCurrency;
  fundingSourceId: string;
  fundingSourceType: FundingSourceType;
};

/** @internal */
export const FundingSourceCurrency$inboundSchema: z.ZodNativeEnum<
  typeof FundingSourceCurrency
> = z.nativeEnum(FundingSourceCurrency);

/** @internal */
export const FundingSourceCurrency$outboundSchema: z.ZodNativeEnum<
  typeof FundingSourceCurrency
> = FundingSourceCurrency$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FundingSourceCurrency$ {
  /** @deprecated use `FundingSourceCurrency$inboundSchema` instead. */
  export const inboundSchema = FundingSourceCurrency$inboundSchema;
  /** @deprecated use `FundingSourceCurrency$outboundSchema` instead. */
  export const outboundSchema = FundingSourceCurrency$outboundSchema;
}

/** @internal */
export const FundingSourceType$inboundSchema: z.ZodNativeEnum<
  typeof FundingSourceType
> = z.nativeEnum(FundingSourceType);

/** @internal */
export const FundingSourceType$outboundSchema: z.ZodNativeEnum<
  typeof FundingSourceType
> = FundingSourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FundingSourceType$ {
  /** @deprecated use `FundingSourceType$inboundSchema` instead. */
  export const inboundSchema = FundingSourceType$inboundSchema;
  /** @deprecated use `FundingSourceType$outboundSchema` instead. */
  export const outboundSchema = FundingSourceType$outboundSchema;
}

/** @internal */
export const FundingSource$inboundSchema: z.ZodType<
  FundingSource,
  z.ZodTypeDef,
  unknown
> = z.object({
  fundingSourceCurrency: FundingSourceCurrency$inboundSchema,
  fundingSourceId: z.string(),
  fundingSourceType: FundingSourceType$inboundSchema,
});

/** @internal */
export type FundingSource$Outbound = {
  fundingSourceCurrency: string;
  fundingSourceId: string;
  fundingSourceType: string;
};

/** @internal */
export const FundingSource$outboundSchema: z.ZodType<
  FundingSource$Outbound,
  z.ZodTypeDef,
  FundingSource
> = z.object({
  fundingSourceCurrency: FundingSourceCurrency$outboundSchema,
  fundingSourceId: z.string(),
  fundingSourceType: FundingSourceType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FundingSource$ {
  /** @deprecated use `FundingSource$inboundSchema` instead. */
  export const inboundSchema = FundingSource$inboundSchema;
  /** @deprecated use `FundingSource$outboundSchema` instead. */
  export const outboundSchema = FundingSource$outboundSchema;
  /** @deprecated use `FundingSource$Outbound` instead. */
  export type Outbound = FundingSource$Outbound;
}
