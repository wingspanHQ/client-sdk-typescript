/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type MemberOccupation = {
    category: string;
    customCategory?: string | null | undefined;
    endDate?: string | null | undefined;
    startDate?: string | null | undefined;
    taxCategory?: string | null | undefined;
};

/** @internal */
export namespace MemberOccupation$ {
    export type Inbound = {
        category: string;
        customCategory?: string | null | undefined;
        endDate?: string | null | undefined;
        startDate?: string | null | undefined;
        taxCategory?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<MemberOccupation, z.ZodTypeDef, Inbound> = z
        .object({
            category: z.string(),
            customCategory: z.nullable(z.string()).optional(),
            endDate: z.nullable(z.string()).optional(),
            startDate: z.nullable(z.string()).optional(),
            taxCategory: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                category: v.category,
                ...(v.customCategory === undefined ? null : { customCategory: v.customCategory }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.taxCategory === undefined ? null : { taxCategory: v.taxCategory }),
            };
        });

    export type Outbound = {
        category: string;
        customCategory?: string | null | undefined;
        endDate?: string | null | undefined;
        startDate?: string | null | undefined;
        taxCategory?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberOccupation> = z
        .object({
            category: z.string(),
            customCategory: z.nullable(z.string()).optional(),
            endDate: z.nullable(z.string()).optional(),
            startDate: z.nullable(z.string()).optional(),
            taxCategory: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                category: v.category,
                ...(v.customCategory === undefined ? null : { customCategory: v.customCategory }),
                ...(v.endDate === undefined ? null : { endDate: v.endDate }),
                ...(v.startDate === undefined ? null : { startDate: v.startDate }),
                ...(v.taxCategory === undefined ? null : { taxCategory: v.taxCategory }),
            };
        });
}
