/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum BulkCalculation1099ItemUpdateCalculationType {
    Balances = "Balances",
    Submissions = "Submissions",
    LessThanNilGreaterThan = "<nil>",
}

export type BulkCalculation1099ItemUpdate = {
    calculationType?: BulkCalculation1099ItemUpdateCalculationType | null | undefined;
    clientId?: string | null | undefined;
    labels?: Record<string, string> | null | undefined;
    year?: number | null | undefined;
};

/** @internal */
export const BulkCalculation1099ItemUpdateCalculationType$ = z.nativeEnum(
    BulkCalculation1099ItemUpdateCalculationType
);

/** @internal */
export namespace BulkCalculation1099ItemUpdate$ {
    export type Inbound = {
        calculationType?: BulkCalculation1099ItemUpdateCalculationType | null | undefined;
        clientId?: string | null | undefined;
        labels?: Record<string, string> | null | undefined;
        year?: number | null | undefined;
    };

    export const inboundSchema: z.ZodType<BulkCalculation1099ItemUpdate, z.ZodTypeDef, Inbound> = z
        .object({
            calculationType: z.nullable(BulkCalculation1099ItemUpdateCalculationType$).optional(),
            clientId: z.nullable(z.string()).optional(),
            labels: z.nullable(z.record(z.string())).optional(),
            year: z.nullable(z.number()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.calculationType === undefined
                    ? null
                    : { calculationType: v.calculationType }),
                ...(v.clientId === undefined ? null : { clientId: v.clientId }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.year === undefined ? null : { year: v.year }),
            };
        });

    export type Outbound = {
        calculationType?: BulkCalculation1099ItemUpdateCalculationType | null | undefined;
        clientId?: string | null | undefined;
        labels?: Record<string, string> | null | undefined;
        year?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BulkCalculation1099ItemUpdate> =
        z
            .object({
                calculationType: z
                    .nullable(BulkCalculation1099ItemUpdateCalculationType$)
                    .optional(),
                clientId: z.nullable(z.string()).optional(),
                labels: z.nullable(z.record(z.string())).optional(),
                year: z.nullable(z.number()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.calculationType === undefined
                        ? null
                        : { calculationType: v.calculationType }),
                    ...(v.clientId === undefined ? null : { clientId: v.clientId }),
                    ...(v.labels === undefined ? null : { labels: v.labels }),
                    ...(v.year === undefined ? null : { year: v.year }),
                };
            });
}
