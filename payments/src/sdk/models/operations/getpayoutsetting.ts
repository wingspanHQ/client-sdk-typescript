/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetPayoutSettingRequest = {
  /**
   * Unique identifier
   */
  id: string;
};

export type GetPayoutSettingResponse = {
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * The payout settings for a member
   */
  payoutSettingsResponse?: shared.PayoutSettingsResponse | undefined;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const GetPayoutSettingRequest$inboundSchema: z.ZodType<
  GetPayoutSettingRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetPayoutSettingRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetPayoutSettingRequest$outboundSchema: z.ZodType<
  GetPayoutSettingRequest$Outbound,
  z.ZodTypeDef,
  GetPayoutSettingRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPayoutSettingRequest$ {
  /** @deprecated use `GetPayoutSettingRequest$inboundSchema` instead. */
  export const inboundSchema = GetPayoutSettingRequest$inboundSchema;
  /** @deprecated use `GetPayoutSettingRequest$outboundSchema` instead. */
  export const outboundSchema = GetPayoutSettingRequest$outboundSchema;
  /** @deprecated use `GetPayoutSettingRequest$Outbound` instead. */
  export type Outbound = GetPayoutSettingRequest$Outbound;
}

/** @internal */
export const GetPayoutSettingResponse$inboundSchema: z.ZodType<
  GetPayoutSettingResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  PayoutSettingsResponse: shared.PayoutSettingsResponse$inboundSchema
    .optional(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ContentType": "contentType",
    "PayoutSettingsResponse": "payoutSettingsResponse",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetPayoutSettingResponse$Outbound = {
  ContentType: string;
  PayoutSettingsResponse?: shared.PayoutSettingsResponse$Outbound | undefined;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const GetPayoutSettingResponse$outboundSchema: z.ZodType<
  GetPayoutSettingResponse$Outbound,
  z.ZodTypeDef,
  GetPayoutSettingResponse
> = z.object({
  contentType: z.string(),
  payoutSettingsResponse: shared.PayoutSettingsResponse$outboundSchema
    .optional(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    contentType: "ContentType",
    payoutSettingsResponse: "PayoutSettingsResponse",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPayoutSettingResponse$ {
  /** @deprecated use `GetPayoutSettingResponse$inboundSchema` instead. */
  export const inboundSchema = GetPayoutSettingResponse$inboundSchema;
  /** @deprecated use `GetPayoutSettingResponse$outboundSchema` instead. */
  export const outboundSchema = GetPayoutSettingResponse$outboundSchema;
  /** @deprecated use `GetPayoutSettingResponse$Outbound` instead. */
  export type Outbound = GetPayoutSettingResponse$Outbound;
}
