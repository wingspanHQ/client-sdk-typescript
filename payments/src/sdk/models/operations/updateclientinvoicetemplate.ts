/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type UpdateClientInvoiceTemplateRequest = {
  clientInvoiceTemplateUpdateRequest?:
    | shared.ClientInvoiceTemplateUpdateRequest
    | undefined;
  /**
   * Unique identifier
   */
  id: string;
};

export type UpdateClientInvoiceTemplateResponse = {
  /**
   * A client created invoiceTemplate (recurring Invoice)
   */
  clientInvoiceTemplate?: shared.ClientInvoiceTemplate | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const UpdateClientInvoiceTemplateRequest$inboundSchema: z.ZodType<
  UpdateClientInvoiceTemplateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  ClientInvoiceTemplateUpdateRequest: shared
    .ClientInvoiceTemplateUpdateRequest$inboundSchema.optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "ClientInvoiceTemplateUpdateRequest": "clientInvoiceTemplateUpdateRequest",
  });
});

/** @internal */
export type UpdateClientInvoiceTemplateRequest$Outbound = {
  ClientInvoiceTemplateUpdateRequest?:
    | shared.ClientInvoiceTemplateUpdateRequest$Outbound
    | undefined;
  id: string;
};

/** @internal */
export const UpdateClientInvoiceTemplateRequest$outboundSchema: z.ZodType<
  UpdateClientInvoiceTemplateRequest$Outbound,
  z.ZodTypeDef,
  UpdateClientInvoiceTemplateRequest
> = z.object({
  clientInvoiceTemplateUpdateRequest: shared
    .ClientInvoiceTemplateUpdateRequest$outboundSchema.optional(),
  id: z.string(),
}).transform((v) => {
  return remap$(v, {
    clientInvoiceTemplateUpdateRequest: "ClientInvoiceTemplateUpdateRequest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateClientInvoiceTemplateRequest$ {
  /** @deprecated use `UpdateClientInvoiceTemplateRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateClientInvoiceTemplateRequest$inboundSchema;
  /** @deprecated use `UpdateClientInvoiceTemplateRequest$outboundSchema` instead. */
  export const outboundSchema =
    UpdateClientInvoiceTemplateRequest$outboundSchema;
  /** @deprecated use `UpdateClientInvoiceTemplateRequest$Outbound` instead. */
  export type Outbound = UpdateClientInvoiceTemplateRequest$Outbound;
}

/** @internal */
export const UpdateClientInvoiceTemplateResponse$inboundSchema: z.ZodType<
  UpdateClientInvoiceTemplateResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ClientInvoiceTemplate: shared.ClientInvoiceTemplate$inboundSchema.optional(),
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "ClientInvoiceTemplate": "clientInvoiceTemplate",
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type UpdateClientInvoiceTemplateResponse$Outbound = {
  ClientInvoiceTemplate?: shared.ClientInvoiceTemplate$Outbound | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const UpdateClientInvoiceTemplateResponse$outboundSchema: z.ZodType<
  UpdateClientInvoiceTemplateResponse$Outbound,
  z.ZodTypeDef,
  UpdateClientInvoiceTemplateResponse
> = z.object({
  clientInvoiceTemplate: shared.ClientInvoiceTemplate$outboundSchema.optional(),
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    clientInvoiceTemplate: "ClientInvoiceTemplate",
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateClientInvoiceTemplateResponse$ {
  /** @deprecated use `UpdateClientInvoiceTemplateResponse$inboundSchema` instead. */
  export const inboundSchema =
    UpdateClientInvoiceTemplateResponse$inboundSchema;
  /** @deprecated use `UpdateClientInvoiceTemplateResponse$outboundSchema` instead. */
  export const outboundSchema =
    UpdateClientInvoiceTemplateResponse$outboundSchema;
  /** @deprecated use `UpdateClientInvoiceTemplateResponse$Outbound` instead. */
  export type Outbound = UpdateClientInvoiceTemplateResponse$Outbound;
}
