/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const MemberClientFormW9InfoCompanyStructure = {
    None: "None",
    SoleProprietorship: "SoleProprietorship",
    LlcSingleMember: "LlcSingleMember",
    LlcMultiMember: "LlcMultiMember",
    CorporationS: "CorporationS",
    LLCCorporationS: "LLCCorporationS",
    LLCCorporationC: "LLCCorporationC",
    LLCPartnership: "LLCPartnership",
    CorporationC: "CorporationC",
    Partnership: "Partnership",
} as const;
export type MemberClientFormW9InfoCompanyStructure = ClosedEnum<
    typeof MemberClientFormW9InfoCompanyStructure
>;

export type MemberClientFormW9Info = {
    addressLine1?: string | null | undefined;
    addressLine2?: string | null | undefined;
    city?: string | null | undefined;
    companyStructure?: MemberClientFormW9InfoCompanyStructure | null | undefined;
    country?: string | null | undefined;
    dob?: string | null | undefined;
    ein?: string | null | undefined;
    firstName?: string | null | undefined;
    lastName?: string | null | undefined;
    legalBusinessName?: string | null | undefined;
    postalCode?: string | null | undefined;
    ssn?: string | null | undefined;
    state?: string | null | undefined;
};

/** @internal */
export const MemberClientFormW9InfoCompanyStructure$inboundSchema: z.ZodNativeEnum<
    typeof MemberClientFormW9InfoCompanyStructure
> = z.nativeEnum(MemberClientFormW9InfoCompanyStructure);

/** @internal */
export const MemberClientFormW9InfoCompanyStructure$outboundSchema: z.ZodNativeEnum<
    typeof MemberClientFormW9InfoCompanyStructure
> = MemberClientFormW9InfoCompanyStructure$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientFormW9InfoCompanyStructure$ {
    /** @deprecated use `MemberClientFormW9InfoCompanyStructure$inboundSchema` instead. */
    export const inboundSchema = MemberClientFormW9InfoCompanyStructure$inboundSchema;
    /** @deprecated use `MemberClientFormW9InfoCompanyStructure$outboundSchema` instead. */
    export const outboundSchema = MemberClientFormW9InfoCompanyStructure$outboundSchema;
}

/** @internal */
export const MemberClientFormW9Info$inboundSchema: z.ZodType<
    MemberClientFormW9Info,
    z.ZodTypeDef,
    unknown
> = z.object({
    addressLine1: z.nullable(z.string()).optional(),
    addressLine2: z.nullable(z.string()).optional(),
    city: z.nullable(z.string()).optional(),
    companyStructure: z.nullable(MemberClientFormW9InfoCompanyStructure$inboundSchema).optional(),
    country: z.nullable(z.string()).optional(),
    dob: z.nullable(z.string()).optional(),
    ein: z.nullable(z.string()).optional(),
    firstName: z.nullable(z.string()).optional(),
    lastName: z.nullable(z.string()).optional(),
    legalBusinessName: z.nullable(z.string()).optional(),
    postalCode: z.nullable(z.string()).optional(),
    ssn: z.nullable(z.string()).optional(),
    state: z.nullable(z.string()).optional(),
});

/** @internal */
export type MemberClientFormW9Info$Outbound = {
    addressLine1?: string | null | undefined;
    addressLine2?: string | null | undefined;
    city?: string | null | undefined;
    companyStructure?: string | null | undefined;
    country?: string | null | undefined;
    dob?: string | null | undefined;
    ein?: string | null | undefined;
    firstName?: string | null | undefined;
    lastName?: string | null | undefined;
    legalBusinessName?: string | null | undefined;
    postalCode?: string | null | undefined;
    ssn?: string | null | undefined;
    state?: string | null | undefined;
};

/** @internal */
export const MemberClientFormW9Info$outboundSchema: z.ZodType<
    MemberClientFormW9Info$Outbound,
    z.ZodTypeDef,
    MemberClientFormW9Info
> = z.object({
    addressLine1: z.nullable(z.string()).optional(),
    addressLine2: z.nullable(z.string()).optional(),
    city: z.nullable(z.string()).optional(),
    companyStructure: z.nullable(MemberClientFormW9InfoCompanyStructure$outboundSchema).optional(),
    country: z.nullable(z.string()).optional(),
    dob: z.nullable(z.string()).optional(),
    ein: z.nullable(z.string()).optional(),
    firstName: z.nullable(z.string()).optional(),
    lastName: z.nullable(z.string()).optional(),
    legalBusinessName: z.nullable(z.string()).optional(),
    postalCode: z.nullable(z.string()).optional(),
    ssn: z.nullable(z.string()).optional(),
    state: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientFormW9Info$ {
    /** @deprecated use `MemberClientFormW9Info$inboundSchema` instead. */
    export const inboundSchema = MemberClientFormW9Info$inboundSchema;
    /** @deprecated use `MemberClientFormW9Info$outboundSchema` instead. */
    export const outboundSchema = MemberClientFormW9Info$outboundSchema;
    /** @deprecated use `MemberClientFormW9Info$Outbound` instead. */
    export type Outbound = MemberClientFormW9Info$Outbound;
}
