/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FeeHandlingConfig, FeeHandlingConfig$ } from "./feehandlingconfig";
import {
    InvoiceLineItemsCreateRequest,
    InvoiceLineItemsCreateRequest$,
} from "./invoicelineitemscreaterequest";
import { z } from "zod";

export enum ClientInvoiceDataCreateRequestCurrency {
    Usd = "USD",
    Cad = "CAD",
}

export type ClientInvoiceDataCreateRequest = {
    creditFeeHandling?: FeeHandlingConfig | null | undefined;
    currency?: ClientInvoiceDataCreateRequestCurrency | null | undefined;
    dueDate?: string | null | undefined;
    lineItems: Array<InvoiceLineItemsCreateRequest>;
};

/** @internal */
export const ClientInvoiceDataCreateRequestCurrency$ = z.nativeEnum(
    ClientInvoiceDataCreateRequestCurrency
);

/** @internal */
export namespace ClientInvoiceDataCreateRequest$ {
    export type Inbound = {
        creditFeeHandling?: FeeHandlingConfig$.Inbound | null | undefined;
        currency?: ClientInvoiceDataCreateRequestCurrency | null | undefined;
        dueDate?: string | null | undefined;
        lineItems: Array<InvoiceLineItemsCreateRequest$.Inbound>;
    };

    export const inboundSchema: z.ZodType<ClientInvoiceDataCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            creditFeeHandling: z.nullable(FeeHandlingConfig$.inboundSchema).optional(),
            currency: z.nullable(ClientInvoiceDataCreateRequestCurrency$).optional(),
            dueDate: z.nullable(z.string()).optional(),
            lineItems: z.array(InvoiceLineItemsCreateRequest$.inboundSchema),
        })
        .transform((v) => {
            return {
                ...(v.creditFeeHandling === undefined
                    ? null
                    : { creditFeeHandling: v.creditFeeHandling }),
                ...(v.currency === undefined ? null : { currency: v.currency }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                lineItems: v.lineItems,
            };
        });

    export type Outbound = {
        creditFeeHandling?: FeeHandlingConfig$.Outbound | null | undefined;
        currency?: ClientInvoiceDataCreateRequestCurrency | null | undefined;
        dueDate?: string | null | undefined;
        lineItems: Array<InvoiceLineItemsCreateRequest$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ClientInvoiceDataCreateRequest> =
        z
            .object({
                creditFeeHandling: z.nullable(FeeHandlingConfig$.outboundSchema).optional(),
                currency: z.nullable(ClientInvoiceDataCreateRequestCurrency$).optional(),
                dueDate: z.nullable(z.string()).optional(),
                lineItems: z.array(InvoiceLineItemsCreateRequest$.outboundSchema),
            })
            .transform((v) => {
                return {
                    ...(v.creditFeeHandling === undefined
                        ? null
                        : { creditFeeHandling: v.creditFeeHandling }),
                    ...(v.currency === undefined ? null : { currency: v.currency }),
                    ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                    lineItems: v.lineItems,
                };
            });
}
