/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeleteCustomDataCollaboratorMemberRequest = {
    /**
     * Unique identifier
     */
    id: string;
};

export type DeleteCustomDataCollaboratorMemberResponse = {
    /**
     * Custom fields that are set on memberClient object to describe collaborator-member
     */
    additionalData?: shared.AdditionalData | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const DeleteCustomDataCollaboratorMemberRequest$inboundSchema: z.ZodType<
    DeleteCustomDataCollaboratorMemberRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type DeleteCustomDataCollaboratorMemberRequest$Outbound = {
    id: string;
};

/** @internal */
export const DeleteCustomDataCollaboratorMemberRequest$outboundSchema: z.ZodType<
    DeleteCustomDataCollaboratorMemberRequest$Outbound,
    z.ZodTypeDef,
    DeleteCustomDataCollaboratorMemberRequest
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCustomDataCollaboratorMemberRequest$ {
    /** @deprecated use `DeleteCustomDataCollaboratorMemberRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteCustomDataCollaboratorMemberRequest$inboundSchema;
    /** @deprecated use `DeleteCustomDataCollaboratorMemberRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteCustomDataCollaboratorMemberRequest$outboundSchema;
    /** @deprecated use `DeleteCustomDataCollaboratorMemberRequest$Outbound` instead. */
    export type Outbound = DeleteCustomDataCollaboratorMemberRequest$Outbound;
}

/** @internal */
export const DeleteCustomDataCollaboratorMemberResponse$inboundSchema: z.ZodType<
    DeleteCustomDataCollaboratorMemberResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        AdditionalData: shared.AdditionalData$inboundSchema.optional(),
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            AdditionalData: "additionalData",
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type DeleteCustomDataCollaboratorMemberResponse$Outbound = {
    AdditionalData?: shared.AdditionalData$Outbound | undefined;
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const DeleteCustomDataCollaboratorMemberResponse$outboundSchema: z.ZodType<
    DeleteCustomDataCollaboratorMemberResponse$Outbound,
    z.ZodTypeDef,
    DeleteCustomDataCollaboratorMemberResponse
> = z
    .object({
        additionalData: shared.AdditionalData$outboundSchema.optional(),
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            additionalData: "AdditionalData",
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteCustomDataCollaboratorMemberResponse$ {
    /** @deprecated use `DeleteCustomDataCollaboratorMemberResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteCustomDataCollaboratorMemberResponse$inboundSchema;
    /** @deprecated use `DeleteCustomDataCollaboratorMemberResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteCustomDataCollaboratorMemberResponse$outboundSchema;
    /** @deprecated use `DeleteCustomDataCollaboratorMemberResponse$Outbound` instead. */
    export type Outbound = DeleteCustomDataCollaboratorMemberResponse$Outbound;
}
