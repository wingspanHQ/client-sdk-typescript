/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Mark1099AsUndeliveredRequest = {
  memberId: string;
  submissionIndex: number;
  year: number;
};

/** @internal */
export const Mark1099AsUndeliveredRequest$inboundSchema: z.ZodType<
  Mark1099AsUndeliveredRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  memberId: z.string(),
  submissionIndex: z.number(),
  year: z.number(),
});

/** @internal */
export type Mark1099AsUndeliveredRequest$Outbound = {
  memberId: string;
  submissionIndex: number;
  year: number;
};

/** @internal */
export const Mark1099AsUndeliveredRequest$outboundSchema: z.ZodType<
  Mark1099AsUndeliveredRequest$Outbound,
  z.ZodTypeDef,
  Mark1099AsUndeliveredRequest
> = z.object({
  memberId: z.string(),
  submissionIndex: z.number(),
  year: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Mark1099AsUndeliveredRequest$ {
  /** @deprecated use `Mark1099AsUndeliveredRequest$inboundSchema` instead. */
  export const inboundSchema = Mark1099AsUndeliveredRequest$inboundSchema;
  /** @deprecated use `Mark1099AsUndeliveredRequest$outboundSchema` instead. */
  export const outboundSchema = Mark1099AsUndeliveredRequest$outboundSchema;
  /** @deprecated use `Mark1099AsUndeliveredRequest$Outbound` instead. */
  export type Outbound = Mark1099AsUndeliveredRequest$Outbound;
}

export function mark1099AsUndeliveredRequestToJSON(
  mark1099AsUndeliveredRequest: Mark1099AsUndeliveredRequest,
): string {
  return JSON.stringify(
    Mark1099AsUndeliveredRequest$outboundSchema.parse(
      mark1099AsUndeliveredRequest,
    ),
  );
}

export function mark1099AsUndeliveredRequestFromJSON(
  jsonString: string,
): SafeParseResult<Mark1099AsUndeliveredRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Mark1099AsUndeliveredRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Mark1099AsUndeliveredRequest' from JSON`,
  );
}
