/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum BulkPayableItemUpdatePayableStatus {
    Draft = "Draft",
    Open = "Open",
    Approved = "Approved",
    Paid = "Paid",
    Cancelled = "Cancelled",
    LessThanNilGreaterThan = "<nil>",
}

export enum BulkPayableItemUpdateWorkflowSubStatus {
    Submitted = "Submitted",
    LessThanNilGreaterThan = "<nil>",
}

export type BulkPayableItemUpdate = {
    amount?: number | null | undefined;
    attachmentId?: string | null | undefined;
    bulkPayableBatchId?: string | null | undefined;
    bulkPayableItemMergeKey?: string | null | undefined;
    bulkPayableItemReference?: string | null | undefined;
    clientId?: string | null | undefined;
    collaboratorEmail?: string | null | undefined;
    collaboratorExternalId?: string | null | undefined;
    collaboratorId?: string | null | undefined;
    dueDate?: string | null | undefined;
    labels?: Record<string, string> | null | undefined;
    lineItemDescription?: string | null | undefined;
    lineItemDetail?: string | null | undefined;
    paidDate?: string | null | undefined;
    payableNotes?: string | null | undefined;
    payableStatus?: BulkPayableItemUpdatePayableStatus | null | undefined;
    reimbursableExpense?: boolean | null | undefined;
    workflowSubStatus?: BulkPayableItemUpdateWorkflowSubStatus | null | undefined;
};

/** @internal */
export const BulkPayableItemUpdatePayableStatus$ = z.nativeEnum(BulkPayableItemUpdatePayableStatus);

/** @internal */
export const BulkPayableItemUpdateWorkflowSubStatus$ = z.nativeEnum(
    BulkPayableItemUpdateWorkflowSubStatus
);

/** @internal */
export namespace BulkPayableItemUpdate$ {
    export type Inbound = {
        amount?: number | null | undefined;
        attachmentId?: string | null | undefined;
        bulkPayableBatchId?: string | null | undefined;
        bulkPayableItemMergeKey?: string | null | undefined;
        bulkPayableItemReference?: string | null | undefined;
        clientId?: string | null | undefined;
        collaboratorEmail?: string | null | undefined;
        collaboratorExternalId?: string | null | undefined;
        collaboratorId?: string | null | undefined;
        dueDate?: string | null | undefined;
        labels?: Record<string, string> | null | undefined;
        lineItemDescription?: string | null | undefined;
        lineItemDetail?: string | null | undefined;
        paidDate?: string | null | undefined;
        payableNotes?: string | null | undefined;
        payableStatus?: BulkPayableItemUpdatePayableStatus | null | undefined;
        reimbursableExpense?: boolean | null | undefined;
        workflowSubStatus?: BulkPayableItemUpdateWorkflowSubStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<BulkPayableItemUpdate, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.number().nullable().optional(),
            attachmentId: z.string().nullable().optional(),
            bulkPayableBatchId: z.string().nullable().optional(),
            bulkPayableItemMergeKey: z.string().nullable().optional(),
            bulkPayableItemReference: z.string().nullable().optional(),
            clientId: z.string().nullable().optional(),
            collaboratorEmail: z.string().nullable().optional(),
            collaboratorExternalId: z.string().nullable().optional(),
            collaboratorId: z.string().nullable().optional(),
            dueDate: z.string().nullable().optional(),
            labels: z.record(z.string()).nullable().optional(),
            lineItemDescription: z.string().nullable().optional(),
            lineItemDetail: z.string().nullable().optional(),
            paidDate: z.string().nullable().optional(),
            payableNotes: z.string().nullable().optional(),
            payableStatus: BulkPayableItemUpdatePayableStatus$.nullable().optional(),
            reimbursableExpense: z.boolean().nullable().optional(),
            workflowSubStatus: BulkPayableItemUpdateWorkflowSubStatus$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.attachmentId === undefined ? null : { attachmentId: v.attachmentId }),
                ...(v.bulkPayableBatchId === undefined
                    ? null
                    : { bulkPayableBatchId: v.bulkPayableBatchId }),
                ...(v.bulkPayableItemMergeKey === undefined
                    ? null
                    : { bulkPayableItemMergeKey: v.bulkPayableItemMergeKey }),
                ...(v.bulkPayableItemReference === undefined
                    ? null
                    : { bulkPayableItemReference: v.bulkPayableItemReference }),
                ...(v.clientId === undefined ? null : { clientId: v.clientId }),
                ...(v.collaboratorEmail === undefined
                    ? null
                    : { collaboratorEmail: v.collaboratorEmail }),
                ...(v.collaboratorExternalId === undefined
                    ? null
                    : { collaboratorExternalId: v.collaboratorExternalId }),
                ...(v.collaboratorId === undefined ? null : { collaboratorId: v.collaboratorId }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.lineItemDescription === undefined
                    ? null
                    : { lineItemDescription: v.lineItemDescription }),
                ...(v.lineItemDetail === undefined ? null : { lineItemDetail: v.lineItemDetail }),
                ...(v.paidDate === undefined ? null : { paidDate: v.paidDate }),
                ...(v.payableNotes === undefined ? null : { payableNotes: v.payableNotes }),
                ...(v.payableStatus === undefined ? null : { payableStatus: v.payableStatus }),
                ...(v.reimbursableExpense === undefined
                    ? null
                    : { reimbursableExpense: v.reimbursableExpense }),
                ...(v.workflowSubStatus === undefined
                    ? null
                    : { workflowSubStatus: v.workflowSubStatus }),
            };
        });

    export type Outbound = {
        amount?: number | null | undefined;
        attachmentId?: string | null | undefined;
        bulkPayableBatchId?: string | null | undefined;
        bulkPayableItemMergeKey?: string | null | undefined;
        bulkPayableItemReference?: string | null | undefined;
        clientId?: string | null | undefined;
        collaboratorEmail?: string | null | undefined;
        collaboratorExternalId?: string | null | undefined;
        collaboratorId?: string | null | undefined;
        dueDate?: string | null | undefined;
        labels?: Record<string, string> | null | undefined;
        lineItemDescription?: string | null | undefined;
        lineItemDetail?: string | null | undefined;
        paidDate?: string | null | undefined;
        payableNotes?: string | null | undefined;
        payableStatus?: BulkPayableItemUpdatePayableStatus | null | undefined;
        reimbursableExpense?: boolean | null | undefined;
        workflowSubStatus?: BulkPayableItemUpdateWorkflowSubStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, BulkPayableItemUpdate> = z
        .object({
            amount: z.number().nullable().optional(),
            attachmentId: z.string().nullable().optional(),
            bulkPayableBatchId: z.string().nullable().optional(),
            bulkPayableItemMergeKey: z.string().nullable().optional(),
            bulkPayableItemReference: z.string().nullable().optional(),
            clientId: z.string().nullable().optional(),
            collaboratorEmail: z.string().nullable().optional(),
            collaboratorExternalId: z.string().nullable().optional(),
            collaboratorId: z.string().nullable().optional(),
            dueDate: z.string().nullable().optional(),
            labels: z.record(z.string()).nullable().optional(),
            lineItemDescription: z.string().nullable().optional(),
            lineItemDetail: z.string().nullable().optional(),
            paidDate: z.string().nullable().optional(),
            payableNotes: z.string().nullable().optional(),
            payableStatus: BulkPayableItemUpdatePayableStatus$.nullable().optional(),
            reimbursableExpense: z.boolean().nullable().optional(),
            workflowSubStatus: BulkPayableItemUpdateWorkflowSubStatus$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.amount === undefined ? null : { amount: v.amount }),
                ...(v.attachmentId === undefined ? null : { attachmentId: v.attachmentId }),
                ...(v.bulkPayableBatchId === undefined
                    ? null
                    : { bulkPayableBatchId: v.bulkPayableBatchId }),
                ...(v.bulkPayableItemMergeKey === undefined
                    ? null
                    : { bulkPayableItemMergeKey: v.bulkPayableItemMergeKey }),
                ...(v.bulkPayableItemReference === undefined
                    ? null
                    : { bulkPayableItemReference: v.bulkPayableItemReference }),
                ...(v.clientId === undefined ? null : { clientId: v.clientId }),
                ...(v.collaboratorEmail === undefined
                    ? null
                    : { collaboratorEmail: v.collaboratorEmail }),
                ...(v.collaboratorExternalId === undefined
                    ? null
                    : { collaboratorExternalId: v.collaboratorExternalId }),
                ...(v.collaboratorId === undefined ? null : { collaboratorId: v.collaboratorId }),
                ...(v.dueDate === undefined ? null : { dueDate: v.dueDate }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.lineItemDescription === undefined
                    ? null
                    : { lineItemDescription: v.lineItemDescription }),
                ...(v.lineItemDetail === undefined ? null : { lineItemDetail: v.lineItemDetail }),
                ...(v.paidDate === undefined ? null : { paidDate: v.paidDate }),
                ...(v.payableNotes === undefined ? null : { payableNotes: v.payableNotes }),
                ...(v.payableStatus === undefined ? null : { payableStatus: v.payableStatus }),
                ...(v.reimbursableExpense === undefined
                    ? null
                    : { reimbursableExpense: v.reimbursableExpense }),
                ...(v.workflowSubStatus === undefined
                    ? null
                    : { workflowSubStatus: v.workflowSubStatus }),
            };
        });
}
