/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type InvoiceRefundRequest = {
    amount: number;
    description?: string | null | undefined;
};

/** @internal */
export namespace InvoiceRefundRequest$ {
    export type Inbound = {
        amount: number;
        description?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<InvoiceRefundRequest, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.number(),
            description: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                ...(v.description === undefined ? null : { description: v.description }),
            };
        });

    export type Outbound = {
        amount: number;
        description?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceRefundRequest> = z
        .object({
            amount: z.number(),
            description: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                ...(v.description === undefined ? null : { description: v.description }),
            };
        });
}
