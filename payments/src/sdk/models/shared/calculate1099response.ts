/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { MemberClient, MemberClient$ } from "./memberclient";
import { z } from "zod";

export type Calculate1099Response = {
    memberClient: MemberClient;
};

/** @internal */
export namespace Calculate1099Response$ {
    export type Inbound = {
        memberClient: MemberClient$.Inbound;
    };

    export const inboundSchema: z.ZodType<Calculate1099Response, z.ZodTypeDef, Inbound> = z
        .object({
            memberClient: MemberClient$.inboundSchema,
        })
        .transform((v) => {
            return {
                memberClient: v.memberClient,
            };
        });

    export type Outbound = {
        memberClient: MemberClient$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Calculate1099Response> = z
        .object({
            memberClient: MemberClient$.outboundSchema,
        })
        .transform((v) => {
            return {
                memberClient: v.memberClient,
            };
        });
}
