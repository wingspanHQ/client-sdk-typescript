/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EligibilityRequirement } from "./eligibilityrequirement";
import { Expose, Type } from "class-transformer";

export class CollaboratorGroupResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "collaboratorGroupId" })
    collaboratorGroupId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "collaboratorSettings" })
    collaboratorSettings?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "defaultGroup" })
    defaultGroup: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description: string;

    @SpeakeasyMetadata({ elemType: EligibilityRequirement })
    @Expose({ name: "eligibilityRequirements" })
    @Type(() => EligibilityRequirement)
    eligibilityRequirements?: EligibilityRequirement[];

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;
}
