/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type UpdatePayoutSettingRequest = {
    payoutSettingsUpdate?: shared.PayoutSettingsUpdate | undefined;
    /**
     * Unique identifier
     */
    id: string;
};

export type UpdatePayoutSettingResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * The payout settings for a member
     */
    payoutSettingsResponse?: shared.PayoutSettingsResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const UpdatePayoutSettingRequest$inboundSchema: z.ZodType<
    UpdatePayoutSettingRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        PayoutSettingsUpdate: shared.PayoutSettingsUpdate$inboundSchema.optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            PayoutSettingsUpdate: "payoutSettingsUpdate",
        });
    });

/** @internal */
export type UpdatePayoutSettingRequest$Outbound = {
    PayoutSettingsUpdate?: shared.PayoutSettingsUpdate$Outbound | undefined;
    id: string;
};

/** @internal */
export const UpdatePayoutSettingRequest$outboundSchema: z.ZodType<
    UpdatePayoutSettingRequest$Outbound,
    z.ZodTypeDef,
    UpdatePayoutSettingRequest
> = z
    .object({
        payoutSettingsUpdate: shared.PayoutSettingsUpdate$outboundSchema.optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            payoutSettingsUpdate: "PayoutSettingsUpdate",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePayoutSettingRequest$ {
    /** @deprecated use `UpdatePayoutSettingRequest$inboundSchema` instead. */
    export const inboundSchema = UpdatePayoutSettingRequest$inboundSchema;
    /** @deprecated use `UpdatePayoutSettingRequest$outboundSchema` instead. */
    export const outboundSchema = UpdatePayoutSettingRequest$outboundSchema;
    /** @deprecated use `UpdatePayoutSettingRequest$Outbound` instead. */
    export type Outbound = UpdatePayoutSettingRequest$Outbound;
}

/** @internal */
export const UpdatePayoutSettingResponse$inboundSchema: z.ZodType<
    UpdatePayoutSettingResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        PayoutSettingsResponse: shared.PayoutSettingsResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            PayoutSettingsResponse: "payoutSettingsResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type UpdatePayoutSettingResponse$Outbound = {
    ContentType: string;
    PayoutSettingsResponse?: shared.PayoutSettingsResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const UpdatePayoutSettingResponse$outboundSchema: z.ZodType<
    UpdatePayoutSettingResponse$Outbound,
    z.ZodTypeDef,
    UpdatePayoutSettingResponse
> = z
    .object({
        contentType: z.string(),
        payoutSettingsResponse: shared.PayoutSettingsResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            payoutSettingsResponse: "PayoutSettingsResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePayoutSettingResponse$ {
    /** @deprecated use `UpdatePayoutSettingResponse$inboundSchema` instead. */
    export const inboundSchema = UpdatePayoutSettingResponse$inboundSchema;
    /** @deprecated use `UpdatePayoutSettingResponse$outboundSchema` instead. */
    export const outboundSchema = UpdatePayoutSettingResponse$outboundSchema;
    /** @deprecated use `UpdatePayoutSettingResponse$Outbound` instead. */
    export type Outbound = UpdatePayoutSettingResponse$Outbound;
}
