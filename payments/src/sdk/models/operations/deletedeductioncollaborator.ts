/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type DeleteDeductionCollaboratorRequest = {
    /**
     * Unique identifier
     */
    id: string;
};

export type DeleteDeductionCollaboratorResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * A deduction
     */
    deductionResponse?: shared.DeductionResponse | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const DeleteDeductionCollaboratorRequest$inboundSchema: z.ZodType<
    DeleteDeductionCollaboratorRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type DeleteDeductionCollaboratorRequest$Outbound = {
    id: string;
};

/** @internal */
export const DeleteDeductionCollaboratorRequest$outboundSchema: z.ZodType<
    DeleteDeductionCollaboratorRequest$Outbound,
    z.ZodTypeDef,
    DeleteDeductionCollaboratorRequest
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDeductionCollaboratorRequest$ {
    /** @deprecated use `DeleteDeductionCollaboratorRequest$inboundSchema` instead. */
    export const inboundSchema = DeleteDeductionCollaboratorRequest$inboundSchema;
    /** @deprecated use `DeleteDeductionCollaboratorRequest$outboundSchema` instead. */
    export const outboundSchema = DeleteDeductionCollaboratorRequest$outboundSchema;
    /** @deprecated use `DeleteDeductionCollaboratorRequest$Outbound` instead. */
    export type Outbound = DeleteDeductionCollaboratorRequest$Outbound;
}

/** @internal */
export const DeleteDeductionCollaboratorResponse$inboundSchema: z.ZodType<
    DeleteDeductionCollaboratorResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ContentType: z.string(),
        DeductionResponse: shared.DeductionResponse$inboundSchema.optional(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            ContentType: "contentType",
            DeductionResponse: "deductionResponse",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type DeleteDeductionCollaboratorResponse$Outbound = {
    ContentType: string;
    DeductionResponse?: shared.DeductionResponse$Outbound | undefined;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const DeleteDeductionCollaboratorResponse$outboundSchema: z.ZodType<
    DeleteDeductionCollaboratorResponse$Outbound,
    z.ZodTypeDef,
    DeleteDeductionCollaboratorResponse
> = z
    .object({
        contentType: z.string(),
        deductionResponse: shared.DeductionResponse$outboundSchema.optional(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            contentType: "ContentType",
            deductionResponse: "DeductionResponse",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteDeductionCollaboratorResponse$ {
    /** @deprecated use `DeleteDeductionCollaboratorResponse$inboundSchema` instead. */
    export const inboundSchema = DeleteDeductionCollaboratorResponse$inboundSchema;
    /** @deprecated use `DeleteDeductionCollaboratorResponse$outboundSchema` instead. */
    export const outboundSchema = DeleteDeductionCollaboratorResponse$outboundSchema;
    /** @deprecated use `DeleteDeductionCollaboratorResponse$Outbound` instead. */
    export type Outbound = DeleteDeductionCollaboratorResponse$Outbound;
}
