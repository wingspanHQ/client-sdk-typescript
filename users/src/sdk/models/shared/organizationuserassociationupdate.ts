/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    OrganizationInheritanceStrategy,
    OrganizationInheritanceStrategy$,
} from "./organizationinheritancestrategy";
import { z } from "zod";

export type OrganizationUserAssociationUpdate = {
    inheritanceStrategy?: OrganizationInheritanceStrategy | null | undefined;
};

/** @internal */
export namespace OrganizationUserAssociationUpdate$ {
    export type Inbound = {
        inheritanceStrategy?: OrganizationInheritanceStrategy$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        OrganizationUserAssociationUpdate,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            inheritanceStrategy: z
                .nullable(OrganizationInheritanceStrategy$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.inheritanceStrategy === undefined
                    ? null
                    : { inheritanceStrategy: v.inheritanceStrategy }),
            };
        });

    export type Outbound = {
        inheritanceStrategy?: OrganizationInheritanceStrategy$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        OrganizationUserAssociationUpdate
    > = z
        .object({
            inheritanceStrategy: z
                .nullable(OrganizationInheritanceStrategy$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.inheritanceStrategy === undefined
                    ? null
                    : { inheritanceStrategy: v.inheritanceStrategy }),
            };
        });
}
