/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a,
  B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$inboundSchema,
  B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$Outbound,
  B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$outboundSchema,
} from "./b22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a.js";
import {
  CollaboratorEvents,
  CollaboratorEvents$inboundSchema,
  CollaboratorEvents$Outbound,
  CollaboratorEvents$outboundSchema,
} from "./collaboratorevents.js";
import {
  CollaboratorPayoutsSummary,
  CollaboratorPayoutsSummary$inboundSchema,
  CollaboratorPayoutsSummary$Outbound,
  CollaboratorPayoutsSummary$outboundSchema,
} from "./collaboratorpayoutssummary.js";
import {
  RedactedMember,
  RedactedMember$inboundSchema,
  RedactedMember$Outbound,
  RedactedMember$outboundSchema,
} from "./redactedmember.js";
import {
  SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d,
  SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$inboundSchema,
  SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$Outbound,
  SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$outboundSchema,
} from "./sixtysixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d.js";

export type Labels = {};

export const CollaboratorsPayoutsSummaryReportResponseStatus = {
  Active: "Active",
  Inactive: "Inactive",
  Pending: "Pending",
} as const;
export type CollaboratorsPayoutsSummaryReportResponseStatus = ClosedEnum<
  typeof CollaboratorsPayoutsSummaryReportResponseStatus
>;

export const CollaboratorsPayoutsSummaryReportResponseTaxStatus = {
  Complete: "Complete",
  Failed: "Failed",
  Pending: "Pending",
  Incomplete: "Incomplete",
} as const;
export type CollaboratorsPayoutsSummaryReportResponseTaxStatus = ClosedEnum<
  typeof CollaboratorsPayoutsSummaryReportResponseTaxStatus
>;

export type CollaboratorsPayoutsSummaryReportResponse = {
  clientId: string;
  collaboratorGroups: Array<
    SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d
  >;
  createdAt: string;
  externalId?: string | null | undefined;
  inviteEmail: string;
  labels?: Labels | null | undefined;
  member: RedactedMember;
  memberClientId: string;
  memberEvents?: CollaboratorEvents | null | undefined;
  memberId: string;
  payoutsSummary: CollaboratorPayoutsSummary;
  servicesStatus:
    B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a;
  status: CollaboratorsPayoutsSummaryReportResponseStatus;
  taxDocumentStared?: boolean | null | undefined;
  taxStatus: CollaboratorsPayoutsSummaryReportResponseTaxStatus;
  updatedAt: string;
};

/** @internal */
export const Labels$inboundSchema: z.ZodType<Labels, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Labels$Outbound = {};

/** @internal */
export const Labels$outboundSchema: z.ZodType<
  Labels$Outbound,
  z.ZodTypeDef,
  Labels
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Labels$ {
  /** @deprecated use `Labels$inboundSchema` instead. */
  export const inboundSchema = Labels$inboundSchema;
  /** @deprecated use `Labels$outboundSchema` instead. */
  export const outboundSchema = Labels$outboundSchema;
  /** @deprecated use `Labels$Outbound` instead. */
  export type Outbound = Labels$Outbound;
}

/** @internal */
export const CollaboratorsPayoutsSummaryReportResponseStatus$inboundSchema:
  z.ZodNativeEnum<typeof CollaboratorsPayoutsSummaryReportResponseStatus> = z
    .nativeEnum(CollaboratorsPayoutsSummaryReportResponseStatus);

/** @internal */
export const CollaboratorsPayoutsSummaryReportResponseStatus$outboundSchema:
  z.ZodNativeEnum<typeof CollaboratorsPayoutsSummaryReportResponseStatus> =
    CollaboratorsPayoutsSummaryReportResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollaboratorsPayoutsSummaryReportResponseStatus$ {
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponseStatus$inboundSchema` instead. */
  export const inboundSchema =
    CollaboratorsPayoutsSummaryReportResponseStatus$inboundSchema;
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponseStatus$outboundSchema` instead. */
  export const outboundSchema =
    CollaboratorsPayoutsSummaryReportResponseStatus$outboundSchema;
}

/** @internal */
export const CollaboratorsPayoutsSummaryReportResponseTaxStatus$inboundSchema:
  z.ZodNativeEnum<typeof CollaboratorsPayoutsSummaryReportResponseTaxStatus> = z
    .nativeEnum(CollaboratorsPayoutsSummaryReportResponseTaxStatus);

/** @internal */
export const CollaboratorsPayoutsSummaryReportResponseTaxStatus$outboundSchema:
  z.ZodNativeEnum<typeof CollaboratorsPayoutsSummaryReportResponseTaxStatus> =
    CollaboratorsPayoutsSummaryReportResponseTaxStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollaboratorsPayoutsSummaryReportResponseTaxStatus$ {
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponseTaxStatus$inboundSchema` instead. */
  export const inboundSchema =
    CollaboratorsPayoutsSummaryReportResponseTaxStatus$inboundSchema;
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponseTaxStatus$outboundSchema` instead. */
  export const outboundSchema =
    CollaboratorsPayoutsSummaryReportResponseTaxStatus$outboundSchema;
}

/** @internal */
export const CollaboratorsPayoutsSummaryReportResponse$inboundSchema: z.ZodType<
  CollaboratorsPayoutsSummaryReportResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  clientId: z.string(),
  collaboratorGroups: z.array(
    SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$inboundSchema,
  ),
  createdAt: z.string(),
  externalId: z.nullable(z.string()).optional(),
  inviteEmail: z.string(),
  labels: z.nullable(z.lazy(() => Labels$inboundSchema)).optional(),
  member: RedactedMember$inboundSchema,
  memberClientId: z.string(),
  memberEvents: z.nullable(CollaboratorEvents$inboundSchema).optional(),
  memberId: z.string(),
  payoutsSummary: CollaboratorPayoutsSummary$inboundSchema,
  servicesStatus:
    B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$inboundSchema,
  status: CollaboratorsPayoutsSummaryReportResponseStatus$inboundSchema,
  taxDocumentStared: z.nullable(z.boolean()).optional(),
  taxStatus: CollaboratorsPayoutsSummaryReportResponseTaxStatus$inboundSchema,
  updatedAt: z.string(),
});

/** @internal */
export type CollaboratorsPayoutsSummaryReportResponse$Outbound = {
  clientId: string;
  collaboratorGroups: Array<
    SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$Outbound
  >;
  createdAt: string;
  externalId?: string | null | undefined;
  inviteEmail: string;
  labels?: Labels$Outbound | null | undefined;
  member: RedactedMember$Outbound;
  memberClientId: string;
  memberEvents?: CollaboratorEvents$Outbound | null | undefined;
  memberId: string;
  payoutsSummary: CollaboratorPayoutsSummary$Outbound;
  servicesStatus:
    B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$Outbound;
  status: string;
  taxDocumentStared?: boolean | null | undefined;
  taxStatus: string;
  updatedAt: string;
};

/** @internal */
export const CollaboratorsPayoutsSummaryReportResponse$outboundSchema:
  z.ZodType<
    CollaboratorsPayoutsSummaryReportResponse$Outbound,
    z.ZodTypeDef,
    CollaboratorsPayoutsSummaryReportResponse
  > = z.object({
    clientId: z.string(),
    collaboratorGroups: z.array(
      SixtySixad6f986038e3285c36e0faa5c61b52a02882d1460acb116b601a30abfb6c1d$outboundSchema,
    ),
    createdAt: z.string(),
    externalId: z.nullable(z.string()).optional(),
    inviteEmail: z.string(),
    labels: z.nullable(z.lazy(() => Labels$outboundSchema)).optional(),
    member: RedactedMember$outboundSchema,
    memberClientId: z.string(),
    memberEvents: z.nullable(CollaboratorEvents$outboundSchema).optional(),
    memberId: z.string(),
    payoutsSummary: CollaboratorPayoutsSummary$outboundSchema,
    servicesStatus:
      B22a2532acff782df851c03041e55a58727ff8e8805b1738c7dcb4dd1dd2505a$outboundSchema,
    status: CollaboratorsPayoutsSummaryReportResponseStatus$outboundSchema,
    taxDocumentStared: z.nullable(z.boolean()).optional(),
    taxStatus:
      CollaboratorsPayoutsSummaryReportResponseTaxStatus$outboundSchema,
    updatedAt: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CollaboratorsPayoutsSummaryReportResponse$ {
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponse$inboundSchema` instead. */
  export const inboundSchema =
    CollaboratorsPayoutsSummaryReportResponse$inboundSchema;
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponse$outboundSchema` instead. */
  export const outboundSchema =
    CollaboratorsPayoutsSummaryReportResponse$outboundSchema;
  /** @deprecated use `CollaboratorsPayoutsSummaryReportResponse$Outbound` instead. */
  export type Outbound = CollaboratorsPayoutsSummaryReportResponse$Outbound;
}
