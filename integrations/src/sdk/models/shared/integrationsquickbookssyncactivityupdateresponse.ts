/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export enum IntegrationsQuickbooksSyncActivityUpdateResponseAction {
    Create = "Create",
    Update = "Update",
    Delete = "Delete",
}

export class IntegrationsQuickbooksSyncActivityUpdateResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "action" })
    action: IntegrationsQuickbooksSyncActivityUpdateResponseAction;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "displayName" })
    displayName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "entityId" })
    entityId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "entityName" })
    entityName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "eventActors" })
    eventActors: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "integrationsId" })
    integrationsId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "isError" })
    isError?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "isHidden" })
    isHidden?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "message" })
    message?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "qboEntityId" })
    qboEntityId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "qboEntityName" })
    qboEntityName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "syncActivityId" })
    syncActivityId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userId" })
    userId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;
}
