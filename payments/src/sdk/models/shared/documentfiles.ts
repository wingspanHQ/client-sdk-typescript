/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type DocumentFiles = {
    client?: string | null | undefined;
    member?: string | null | undefined;
};

/** @internal */
export namespace DocumentFiles$ {
    export type Inbound = {
        client?: string | null | undefined;
        member?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<DocumentFiles, z.ZodTypeDef, Inbound> = z
        .object({
            client: z.string().nullable().optional(),
            member: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.client === undefined ? null : { client: v.client }),
                ...(v.member === undefined ? null : { member: v.member }),
            };
        });

    export type Outbound = {
        client?: string | null | undefined;
        member?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DocumentFiles> = z
        .object({
            client: z.string().nullable().optional(),
            member: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.client === undefined ? null : { client: v.client }),
                ...(v.member === undefined ? null : { member: v.member }),
            };
        });
}
