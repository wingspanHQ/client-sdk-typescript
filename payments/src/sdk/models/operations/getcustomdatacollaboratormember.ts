/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetCustomDataCollaboratorMemberRequest = {
  /**
   * Unique identifier
   */
  id: string;
};

export type GetCustomDataCollaboratorMemberResponse = {
  /**
   * Custom fields that are set on memberClient object to describe collaborator-member
   */
  additionalData?: shared.AdditionalData | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const GetCustomDataCollaboratorMemberRequest$inboundSchema: z.ZodType<
  GetCustomDataCollaboratorMemberRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetCustomDataCollaboratorMemberRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetCustomDataCollaboratorMemberRequest$outboundSchema: z.ZodType<
  GetCustomDataCollaboratorMemberRequest$Outbound,
  z.ZodTypeDef,
  GetCustomDataCollaboratorMemberRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomDataCollaboratorMemberRequest$ {
  /** @deprecated use `GetCustomDataCollaboratorMemberRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetCustomDataCollaboratorMemberRequest$inboundSchema;
  /** @deprecated use `GetCustomDataCollaboratorMemberRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetCustomDataCollaboratorMemberRequest$outboundSchema;
  /** @deprecated use `GetCustomDataCollaboratorMemberRequest$Outbound` instead. */
  export type Outbound = GetCustomDataCollaboratorMemberRequest$Outbound;
}

/** @internal */
export const GetCustomDataCollaboratorMemberResponse$inboundSchema: z.ZodType<
  GetCustomDataCollaboratorMemberResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  AdditionalData: shared.AdditionalData$inboundSchema.optional(),
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "AdditionalData": "additionalData",
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type GetCustomDataCollaboratorMemberResponse$Outbound = {
  AdditionalData?: shared.AdditionalData$Outbound | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const GetCustomDataCollaboratorMemberResponse$outboundSchema: z.ZodType<
  GetCustomDataCollaboratorMemberResponse$Outbound,
  z.ZodTypeDef,
  GetCustomDataCollaboratorMemberResponse
> = z.object({
  additionalData: shared.AdditionalData$outboundSchema.optional(),
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    additionalData: "AdditionalData",
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCustomDataCollaboratorMemberResponse$ {
  /** @deprecated use `GetCustomDataCollaboratorMemberResponse$inboundSchema` instead. */
  export const inboundSchema =
    GetCustomDataCollaboratorMemberResponse$inboundSchema;
  /** @deprecated use `GetCustomDataCollaboratorMemberResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetCustomDataCollaboratorMemberResponse$outboundSchema;
  /** @deprecated use `GetCustomDataCollaboratorMemberResponse$Outbound` instead. */
  export type Outbound = GetCustomDataCollaboratorMemberResponse$Outbound;
}
