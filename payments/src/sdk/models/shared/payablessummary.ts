/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type PayablesSummary = {
    invoicesApproved: number;
    invoicesDraft: number;
    invoicesOpen: number;
    invoicesOverdue: number;
    invoicesPaid: number;
    invoicesPending: number;
    memberId: string;
    totalApproved: number;
    totalOpen: number;
    totalOverdue: number;
    totalPaid: number;
};

/** @internal */
export namespace PayablesSummary$ {
    export type Inbound = {
        invoicesApproved: number;
        invoicesDraft: number;
        invoicesOpen: number;
        invoicesOverdue: number;
        invoicesPaid: number;
        invoicesPending: number;
        memberId: string;
        totalApproved: number;
        totalOpen: number;
        totalOverdue: number;
        totalPaid: number;
    };

    export const inboundSchema: z.ZodType<PayablesSummary, z.ZodTypeDef, Inbound> = z
        .object({
            invoicesApproved: z.number(),
            invoicesDraft: z.number(),
            invoicesOpen: z.number(),
            invoicesOverdue: z.number(),
            invoicesPaid: z.number(),
            invoicesPending: z.number(),
            memberId: z.string(),
            totalApproved: z.number(),
            totalOpen: z.number(),
            totalOverdue: z.number(),
            totalPaid: z.number(),
        })
        .transform((v) => {
            return {
                invoicesApproved: v.invoicesApproved,
                invoicesDraft: v.invoicesDraft,
                invoicesOpen: v.invoicesOpen,
                invoicesOverdue: v.invoicesOverdue,
                invoicesPaid: v.invoicesPaid,
                invoicesPending: v.invoicesPending,
                memberId: v.memberId,
                totalApproved: v.totalApproved,
                totalOpen: v.totalOpen,
                totalOverdue: v.totalOverdue,
                totalPaid: v.totalPaid,
            };
        });

    export type Outbound = {
        invoicesApproved: number;
        invoicesDraft: number;
        invoicesOpen: number;
        invoicesOverdue: number;
        invoicesPaid: number;
        invoicesPending: number;
        memberId: string;
        totalApproved: number;
        totalOpen: number;
        totalOverdue: number;
        totalPaid: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PayablesSummary> = z
        .object({
            invoicesApproved: z.number(),
            invoicesDraft: z.number(),
            invoicesOpen: z.number(),
            invoicesOverdue: z.number(),
            invoicesPaid: z.number(),
            invoicesPending: z.number(),
            memberId: z.string(),
            totalApproved: z.number(),
            totalOpen: z.number(),
            totalOverdue: z.number(),
            totalPaid: z.number(),
        })
        .transform((v) => {
            return {
                invoicesApproved: v.invoicesApproved,
                invoicesDraft: v.invoicesDraft,
                invoicesOpen: v.invoicesOpen,
                invoicesOverdue: v.invoicesOverdue,
                invoicesPaid: v.invoicesPaid,
                invoicesPending: v.invoicesPending,
                memberId: v.memberId,
                totalApproved: v.totalApproved,
                totalOpen: v.totalOpen,
                totalOverdue: v.totalOverdue,
                totalPaid: v.totalPaid,
            };
        });
}
