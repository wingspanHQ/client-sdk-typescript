/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    FrequencyUpdate,
    FrequencyUpdate$inboundSchema,
    FrequencyUpdate$Outbound,
    FrequencyUpdate$outboundSchema,
} from "./frequencyupdate.js";
import {
    InvoiceUpdateRequest,
    InvoiceUpdateRequest$inboundSchema,
    InvoiceUpdateRequest$Outbound,
    InvoiceUpdateRequest$outboundSchema,
} from "./invoiceupdaterequest.js";
import {
    ScheduleDateUpdate,
    ScheduleDateUpdate$inboundSchema,
    ScheduleDateUpdate$Outbound,
    ScheduleDateUpdate$outboundSchema,
} from "./scheduledateupdate.js";
import * as z from "zod";

export const InvoiceTemplateUpdateRequestStatus = {
    Active: "Active",
    Draft: "Draft",
    Expired: "Expired",
    Cancelled: "Cancelled",
} as const;
export type InvoiceTemplateUpdateRequestStatus = ClosedEnum<
    typeof InvoiceTemplateUpdateRequestStatus
>;

export type InvoiceTemplateUpdateRequest = {
    accountId?: string | null | undefined;
    autoPaymentRequired?: boolean | null | undefined;
    dueInDays?: number | null | undefined;
    frequency?: FrequencyUpdate | null | undefined;
    invoiceData?: InvoiceUpdateRequest | null | undefined;
    isSchedulingOnly?: boolean | null | undefined;
    labels?: { [k: string]: string } | null | undefined;
    paymentMethodId?: string | null | undefined;
    scheduleDates?: Array<ScheduleDateUpdate> | null | undefined;
    sendEmails?: boolean | null | undefined;
    status?: InvoiceTemplateUpdateRequestStatus | null | undefined;
};

/** @internal */
export const InvoiceTemplateUpdateRequestStatus$inboundSchema: z.ZodNativeEnum<
    typeof InvoiceTemplateUpdateRequestStatus
> = z.nativeEnum(InvoiceTemplateUpdateRequestStatus);

/** @internal */
export const InvoiceTemplateUpdateRequestStatus$outboundSchema: z.ZodNativeEnum<
    typeof InvoiceTemplateUpdateRequestStatus
> = InvoiceTemplateUpdateRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceTemplateUpdateRequestStatus$ {
    /** @deprecated use `InvoiceTemplateUpdateRequestStatus$inboundSchema` instead. */
    export const inboundSchema = InvoiceTemplateUpdateRequestStatus$inboundSchema;
    /** @deprecated use `InvoiceTemplateUpdateRequestStatus$outboundSchema` instead. */
    export const outboundSchema = InvoiceTemplateUpdateRequestStatus$outboundSchema;
}

/** @internal */
export const InvoiceTemplateUpdateRequest$inboundSchema: z.ZodType<
    InvoiceTemplateUpdateRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    accountId: z.nullable(z.string()).optional(),
    autoPaymentRequired: z.nullable(z.boolean()).optional(),
    dueInDays: z.nullable(z.number()).optional(),
    frequency: z.nullable(FrequencyUpdate$inboundSchema).optional(),
    invoiceData: z.nullable(InvoiceUpdateRequest$inboundSchema).optional(),
    isSchedulingOnly: z.nullable(z.boolean()).optional(),
    labels: z.nullable(z.record(z.string())).optional(),
    paymentMethodId: z.nullable(z.string()).optional(),
    scheduleDates: z.nullable(z.array(ScheduleDateUpdate$inboundSchema)).optional(),
    sendEmails: z.nullable(z.boolean()).optional(),
    status: z.nullable(InvoiceTemplateUpdateRequestStatus$inboundSchema).optional(),
});

/** @internal */
export type InvoiceTemplateUpdateRequest$Outbound = {
    accountId?: string | null | undefined;
    autoPaymentRequired?: boolean | null | undefined;
    dueInDays?: number | null | undefined;
    frequency?: FrequencyUpdate$Outbound | null | undefined;
    invoiceData?: InvoiceUpdateRequest$Outbound | null | undefined;
    isSchedulingOnly?: boolean | null | undefined;
    labels?: { [k: string]: string } | null | undefined;
    paymentMethodId?: string | null | undefined;
    scheduleDates?: Array<ScheduleDateUpdate$Outbound> | null | undefined;
    sendEmails?: boolean | null | undefined;
    status?: string | null | undefined;
};

/** @internal */
export const InvoiceTemplateUpdateRequest$outboundSchema: z.ZodType<
    InvoiceTemplateUpdateRequest$Outbound,
    z.ZodTypeDef,
    InvoiceTemplateUpdateRequest
> = z.object({
    accountId: z.nullable(z.string()).optional(),
    autoPaymentRequired: z.nullable(z.boolean()).optional(),
    dueInDays: z.nullable(z.number()).optional(),
    frequency: z.nullable(FrequencyUpdate$outboundSchema).optional(),
    invoiceData: z.nullable(InvoiceUpdateRequest$outboundSchema).optional(),
    isSchedulingOnly: z.nullable(z.boolean()).optional(),
    labels: z.nullable(z.record(z.string())).optional(),
    paymentMethodId: z.nullable(z.string()).optional(),
    scheduleDates: z.nullable(z.array(ScheduleDateUpdate$outboundSchema)).optional(),
    sendEmails: z.nullable(z.boolean()).optional(),
    status: z.nullable(InvoiceTemplateUpdateRequestStatus$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoiceTemplateUpdateRequest$ {
    /** @deprecated use `InvoiceTemplateUpdateRequest$inboundSchema` instead. */
    export const inboundSchema = InvoiceTemplateUpdateRequest$inboundSchema;
    /** @deprecated use `InvoiceTemplateUpdateRequest$outboundSchema` instead. */
    export const outboundSchema = InvoiceTemplateUpdateRequest$outboundSchema;
    /** @deprecated use `InvoiceTemplateUpdateRequest$Outbound` instead. */
    export type Outbound = InvoiceTemplateUpdateRequest$Outbound;
}
