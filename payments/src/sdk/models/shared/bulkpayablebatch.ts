/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  RedactedMember,
  RedactedMember$inboundSchema,
  RedactedMember$Outbound,
  RedactedMember$outboundSchema,
} from "./redactedmember.js";
import {
  SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2,
  SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$inboundSchema,
  SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$Outbound,
  SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$outboundSchema,
} from "./sevenhundredandfiftysevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2.js";
import {
  UserRoles,
  UserRoles$inboundSchema,
  UserRoles$Outbound,
  UserRoles$outboundSchema,
} from "./userroles.js";

export const BulkPayableBatchProcessingStrategy = {
  Merge: "Merge",
  Single: "Single",
} as const;
export type BulkPayableBatchProcessingStrategy = ClosedEnum<
  typeof BulkPayableBatchProcessingStrategy
>;

export const BulkPayableBatchStatus = {
  Open: "Open",
  Pending: "Pending",
  Processing: "Processing",
  Complete: "Complete",
  Failed: "Failed",
} as const;
export type BulkPayableBatchStatus = ClosedEnum<typeof BulkPayableBatchStatus>;

export type BulkPayableBatch = {
  bulkPayableBatchId: string;
  client: RedactedMember;
  clientId: string;
  createdAt: string;
  eventActors: { [k: string]: string };
  labels: { [k: string]: string };
  processingStrategy: BulkPayableBatchProcessingStrategy;
  statistics?:
    | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2
    | null
    | undefined;
  status: BulkPayableBatchStatus;
  updatedAt: string;
  userRoles: UserRoles;
};

/** @internal */
export const BulkPayableBatchProcessingStrategy$inboundSchema: z.ZodNativeEnum<
  typeof BulkPayableBatchProcessingStrategy
> = z.nativeEnum(BulkPayableBatchProcessingStrategy);

/** @internal */
export const BulkPayableBatchProcessingStrategy$outboundSchema: z.ZodNativeEnum<
  typeof BulkPayableBatchProcessingStrategy
> = BulkPayableBatchProcessingStrategy$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableBatchProcessingStrategy$ {
  /** @deprecated use `BulkPayableBatchProcessingStrategy$inboundSchema` instead. */
  export const inboundSchema = BulkPayableBatchProcessingStrategy$inboundSchema;
  /** @deprecated use `BulkPayableBatchProcessingStrategy$outboundSchema` instead. */
  export const outboundSchema =
    BulkPayableBatchProcessingStrategy$outboundSchema;
}

/** @internal */
export const BulkPayableBatchStatus$inboundSchema: z.ZodNativeEnum<
  typeof BulkPayableBatchStatus
> = z.nativeEnum(BulkPayableBatchStatus);

/** @internal */
export const BulkPayableBatchStatus$outboundSchema: z.ZodNativeEnum<
  typeof BulkPayableBatchStatus
> = BulkPayableBatchStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableBatchStatus$ {
  /** @deprecated use `BulkPayableBatchStatus$inboundSchema` instead. */
  export const inboundSchema = BulkPayableBatchStatus$inboundSchema;
  /** @deprecated use `BulkPayableBatchStatus$outboundSchema` instead. */
  export const outboundSchema = BulkPayableBatchStatus$outboundSchema;
}

/** @internal */
export const BulkPayableBatch$inboundSchema: z.ZodType<
  BulkPayableBatch,
  z.ZodTypeDef,
  unknown
> = z.object({
  bulkPayableBatchId: z.string(),
  client: RedactedMember$inboundSchema,
  clientId: z.string(),
  createdAt: z.string(),
  eventActors: z.record(z.string()),
  labels: z.record(z.string()),
  processingStrategy: BulkPayableBatchProcessingStrategy$inboundSchema,
  statistics: z.nullable(
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$inboundSchema,
  ).optional(),
  status: BulkPayableBatchStatus$inboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$inboundSchema,
});

/** @internal */
export type BulkPayableBatch$Outbound = {
  bulkPayableBatchId: string;
  client: RedactedMember$Outbound;
  clientId: string;
  createdAt: string;
  eventActors: { [k: string]: string };
  labels: { [k: string]: string };
  processingStrategy: string;
  statistics?:
    | SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$Outbound
    | null
    | undefined;
  status: string;
  updatedAt: string;
  userRoles: UserRoles$Outbound;
};

/** @internal */
export const BulkPayableBatch$outboundSchema: z.ZodType<
  BulkPayableBatch$Outbound,
  z.ZodTypeDef,
  BulkPayableBatch
> = z.object({
  bulkPayableBatchId: z.string(),
  client: RedactedMember$outboundSchema,
  clientId: z.string(),
  createdAt: z.string(),
  eventActors: z.record(z.string()),
  labels: z.record(z.string()),
  processingStrategy: BulkPayableBatchProcessingStrategy$outboundSchema,
  statistics: z.nullable(
    SevenHundredAndFiftySevenf4961b94334fd41cedc27262be7b14583377703cda6490b996969bd4e66c2$outboundSchema,
  ).optional(),
  status: BulkPayableBatchStatus$outboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableBatch$ {
  /** @deprecated use `BulkPayableBatch$inboundSchema` instead. */
  export const inboundSchema = BulkPayableBatch$inboundSchema;
  /** @deprecated use `BulkPayableBatch$outboundSchema` instead. */
  export const outboundSchema = BulkPayableBatch$outboundSchema;
  /** @deprecated use `BulkPayableBatch$Outbound` instead. */
  export type Outbound = BulkPayableBatch$Outbound;
}
