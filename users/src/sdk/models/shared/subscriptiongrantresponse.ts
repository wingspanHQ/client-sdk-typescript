/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RedactedMember } from "./redactedmember";
import { RedactedUser } from "./redacteduser";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export enum SubscriptionGrantResponsePackage {
    None = "None",
    Benefits = "Benefits",
    Essentials = "Essentials",
    Professional = "Professional",
    Corporate = "Corporate",
}

export enum SubscriptionGrantResponsePackageTier {
    Basic = "Basic",
    Premium = "Premium",
}

export enum SubscriptionGrantResponseStatus {
    Pending = "Pending",
    Active = "Active",
    Canceled = "Canceled",
}

export class SubscriptionGrantResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "eventActors" })
    eventActors: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "granteeId" })
    granteeId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "granteeMember" })
    @Type(() => RedactedMember)
    granteeMember: RedactedMember;

    @SpeakeasyMetadata()
    @Expose({ name: "granteeUser" })
    @Type(() => RedactedUser)
    granteeUser: RedactedUser;

    @SpeakeasyMetadata()
    @Expose({ name: "grantorMember" })
    @Type(() => RedactedMember)
    grantorMember: RedactedMember;

    @SpeakeasyMetadata()
    @Expose({ name: "grantorUser" })
    @Type(() => RedactedUser)
    grantorUser: RedactedUser;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "memberId" })
    memberId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package: SubscriptionGrantResponsePackage;

    @SpeakeasyMetadata()
    @Expose({ name: "packageTier" })
    packageTier: SubscriptionGrantResponsePackageTier;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: SubscriptionGrantResponseStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "subscriptionGrantId" })
    subscriptionGrantId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;
}
