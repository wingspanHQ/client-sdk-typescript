/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../../../sdk/models/shared";
import { z } from "zod";

export type CreateDebitCardRequest = {
    checkbookCardCreate?: shared.CheckbookCardCreate | undefined;
    /**
     * Unique identifier of a member
     */
    memberId: string;
};

export type CreateDebitCardResponse = {
    /**
     * A payout debit card
     */
    checkbookCard?: shared.CheckbookCard | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace CreateDebitCardRequest$ {
    export type Inbound = {
        CheckbookCardCreate?: shared.CheckbookCardCreate$.Inbound | undefined;
        memberId: string;
    };

    export const inboundSchema: z.ZodType<CreateDebitCardRequest, z.ZodTypeDef, Inbound> = z
        .object({
            CheckbookCardCreate: shared.CheckbookCardCreate$.inboundSchema.optional(),
            memberId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.CheckbookCardCreate === undefined
                    ? null
                    : { checkbookCardCreate: v.CheckbookCardCreate }),
                memberId: v.memberId,
            };
        });

    export type Outbound = {
        CheckbookCardCreate?: shared.CheckbookCardCreate$.Outbound | undefined;
        memberId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateDebitCardRequest> = z
        .object({
            checkbookCardCreate: shared.CheckbookCardCreate$.outboundSchema.optional(),
            memberId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.checkbookCardCreate === undefined
                    ? null
                    : { CheckbookCardCreate: v.checkbookCardCreate }),
                memberId: v.memberId,
            };
        });
}

/** @internal */
export namespace CreateDebitCardResponse$ {
    export type Inbound = {
        CheckbookCard?: shared.CheckbookCard$.Inbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<CreateDebitCardResponse, z.ZodTypeDef, Inbound> = z
        .object({
            CheckbookCard: shared.CheckbookCard$.inboundSchema.optional(),
            ContentType: z.string(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                ...(v.CheckbookCard === undefined ? null : { checkbookCard: v.CheckbookCard }),
                contentType: v.ContentType,
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        CheckbookCard?: shared.CheckbookCard$.Outbound | undefined;
        ContentType: string;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateDebitCardResponse> = z
        .object({
            checkbookCard: shared.CheckbookCard$.outboundSchema.optional(),
            contentType: z.string(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ...(v.checkbookCard === undefined ? null : { CheckbookCard: v.checkbookCard }),
                ContentType: v.contentType,
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
