/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum Gender {
    Male = "Male",
    Female = "Female",
    Other = "Other",
}

export type UserProfile = {
    dob?: string | null | undefined;
    firstName?: string | null | undefined;
    gender?: Gender | null | undefined;
    lastName?: string | null | undefined;
    photo?: string | null | undefined;
    preferredName?: string | null | undefined;
};

/** @internal */
export const Gender$ = z.nativeEnum(Gender);

/** @internal */
export namespace UserProfile$ {
    export type Inbound = {
        dob?: string | null | undefined;
        firstName?: string | null | undefined;
        gender?: Gender | null | undefined;
        lastName?: string | null | undefined;
        photo?: string | null | undefined;
        preferredName?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<UserProfile, z.ZodTypeDef, Inbound> = z
        .object({
            dob: z.nullable(z.string()).optional(),
            firstName: z.nullable(z.string()).optional(),
            gender: z.nullable(Gender$).optional(),
            lastName: z.nullable(z.string()).optional(),
            photo: z.nullable(z.string()).optional(),
            preferredName: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.dob === undefined ? null : { dob: v.dob }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.photo === undefined ? null : { photo: v.photo }),
                ...(v.preferredName === undefined ? null : { preferredName: v.preferredName }),
            };
        });

    export type Outbound = {
        dob?: string | null | undefined;
        firstName?: string | null | undefined;
        gender?: Gender | null | undefined;
        lastName?: string | null | undefined;
        photo?: string | null | undefined;
        preferredName?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UserProfile> = z
        .object({
            dob: z.nullable(z.string()).optional(),
            firstName: z.nullable(z.string()).optional(),
            gender: z.nullable(Gender$).optional(),
            lastName: z.nullable(z.string()).optional(),
            photo: z.nullable(z.string()).optional(),
            preferredName: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.dob === undefined ? null : { dob: v.dob }),
                ...(v.firstName === undefined ? null : { firstName: v.firstName }),
                ...(v.gender === undefined ? null : { gender: v.gender }),
                ...(v.lastName === undefined ? null : { lastName: v.lastName }),
                ...(v.photo === undefined ? null : { photo: v.photo }),
                ...(v.preferredName === undefined ? null : { preferredName: v.preferredName }),
            };
        });
}
