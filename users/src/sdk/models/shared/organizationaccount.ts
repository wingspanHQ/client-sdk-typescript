/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrganizationInheritanceStrategy } from "./organizationinheritancestrategy";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export class OrganizationAccount extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "billingUserId" })
    billingUserId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "childUserId" })
    childUserId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "eventActors" })
    eventActors: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "inheritanceStrategy" })
    @Type(() => OrganizationInheritanceStrategy)
    inheritanceStrategy: OrganizationInheritanceStrategy;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "organizationId" })
    organizationId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "parentUserId" })
    parentUserId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userId" })
    userId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;
}
