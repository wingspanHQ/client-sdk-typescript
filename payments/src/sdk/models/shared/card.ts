/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum CardStatus {
    Active = "Active",
    Inactive = "Inactive",
    Stolen = "Stolen",
    Lost = "Lost",
    Frozen = "Frozen",
    ClosedByCustomer = "ClosedByCustomer",
    SuspectedFraud = "SuspectedFraud",
}

export enum CardType {
    IndividualDebitCard = "individualDebitCard",
    BusinessDebitCard = "businessDebitCard",
    IndividualVirtualDebitCard = "individualVirtualDebitCard",
    BusinessVirtualDebitCard = "businessVirtualDebitCard",
}

export type Card = {
    brand: string;
    createdAt: string;
    expirationDate: string;
    last4Digits: string;
    status: CardStatus;
    type: CardType;
};

/** @internal */
export const CardStatus$ = z.nativeEnum(CardStatus);

/** @internal */
export const CardType$ = z.nativeEnum(CardType);

/** @internal */
export namespace Card$ {
    export type Inbound = {
        brand: string;
        createdAt: string;
        expirationDate: string;
        last4Digits: string;
        status: CardStatus;
        type: CardType;
    };

    export const inboundSchema: z.ZodType<Card, z.ZodTypeDef, Inbound> = z
        .object({
            brand: z.string(),
            createdAt: z.string(),
            expirationDate: z.string(),
            last4Digits: z.string(),
            status: CardStatus$,
            type: CardType$,
        })
        .transform((v) => {
            return {
                brand: v.brand,
                createdAt: v.createdAt,
                expirationDate: v.expirationDate,
                last4Digits: v.last4Digits,
                status: v.status,
                type: v.type,
            };
        });

    export type Outbound = {
        brand: string;
        createdAt: string;
        expirationDate: string;
        last4Digits: string;
        status: CardStatus;
        type: CardType;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Card> = z
        .object({
            brand: z.string(),
            createdAt: z.string(),
            expirationDate: z.string(),
            last4Digits: z.string(),
            status: CardStatus$,
            type: CardType$,
        })
        .transform((v) => {
            return {
                brand: v.brand,
                createdAt: v.createdAt,
                expirationDate: v.expirationDate,
                last4Digits: v.last4Digits,
                status: v.status,
                type: v.type,
            };
        });
}
