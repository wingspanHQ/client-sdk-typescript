/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b,
    Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$,
} from "./facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b";
import {
    ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461,
    ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$,
} from "./threebilliononehundredandninetymillionsixhundredandeightyfivethousandeighthundredandthirtytwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461";
import { z } from "zod";

export type InvoiceLineItemsCreateRequest = {
    costPerUnit?: number | null | undefined;
    description?: string | null | undefined;
    detail?: string | null | undefined;
    discount?: Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b | null | undefined;
    integration?:
        | ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461
        | null
        | undefined;
    labels?: Record<string, string> | null | undefined;
    quantity?: number | null | undefined;
    reimbursableExpense?: boolean | null | undefined;
    totalCost?: number | null | undefined;
    unit?: string | null | undefined;
};

/** @internal */
export namespace InvoiceLineItemsCreateRequest$ {
    export type Inbound = {
        costPerUnit?: number | null | undefined;
        description?: string | null | undefined;
        detail?: string | null | undefined;
        discount?:
            | Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.Inbound
            | null
            | undefined;
        integration?:
            | ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$.Inbound
            | null
            | undefined;
        labels?: Record<string, string> | null | undefined;
        quantity?: number | null | undefined;
        reimbursableExpense?: boolean | null | undefined;
        totalCost?: number | null | undefined;
        unit?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<InvoiceLineItemsCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            costPerUnit: z.number().nullable().optional(),
            description: z.string().nullable().optional(),
            detail: z.string().nullable().optional(),
            discount:
                Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.inboundSchema
                    .nullable()
                    .optional(),
            integration:
                ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$.inboundSchema
                    .nullable()
                    .optional(),
            labels: z.record(z.string()).nullable().optional(),
            quantity: z.number().nullable().optional(),
            reimbursableExpense: z.boolean().nullable().optional(),
            totalCost: z.number().nullable().optional(),
            unit: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.costPerUnit === undefined ? null : { costPerUnit: v.costPerUnit }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.detail === undefined ? null : { detail: v.detail }),
                ...(v.discount === undefined ? null : { discount: v.discount }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                ...(v.reimbursableExpense === undefined
                    ? null
                    : { reimbursableExpense: v.reimbursableExpense }),
                ...(v.totalCost === undefined ? null : { totalCost: v.totalCost }),
                ...(v.unit === undefined ? null : { unit: v.unit }),
            };
        });

    export type Outbound = {
        costPerUnit?: number | null | undefined;
        description?: string | null | undefined;
        detail?: string | null | undefined;
        discount?:
            | Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.Outbound
            | null
            | undefined;
        integration?:
            | ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$.Outbound
            | null
            | undefined;
        labels?: Record<string, string> | null | undefined;
        quantity?: number | null | undefined;
        reimbursableExpense?: boolean | null | undefined;
        totalCost?: number | null | undefined;
        unit?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, InvoiceLineItemsCreateRequest> =
        z
            .object({
                costPerUnit: z.number().nullable().optional(),
                description: z.string().nullable().optional(),
                detail: z.string().nullable().optional(),
                discount:
                    Facb8048736dba546c4c76242d9f8c7111011a7a7483528f37d80226698a1f2b$.outboundSchema
                        .nullable()
                        .optional(),
                integration:
                    ThreeBillionOneHundredAndNinetyMillionSixHundredAndEightyFiveThousandEightHundredAndThirtyTwoa4970525ea5b0803efff0b36a0202062e1fd8a0bc187acbe156461$.outboundSchema
                        .nullable()
                        .optional(),
                labels: z.record(z.string()).nullable().optional(),
                quantity: z.number().nullable().optional(),
                reimbursableExpense: z.boolean().nullable().optional(),
                totalCost: z.number().nullable().optional(),
                unit: z.string().nullable().optional(),
            })
            .transform((v) => {
                return {
                    ...(v.costPerUnit === undefined ? null : { costPerUnit: v.costPerUnit }),
                    ...(v.description === undefined ? null : { description: v.description }),
                    ...(v.detail === undefined ? null : { detail: v.detail }),
                    ...(v.discount === undefined ? null : { discount: v.discount }),
                    ...(v.integration === undefined ? null : { integration: v.integration }),
                    ...(v.labels === undefined ? null : { labels: v.labels }),
                    ...(v.quantity === undefined ? null : { quantity: v.quantity }),
                    ...(v.reimbursableExpense === undefined
                        ? null
                        : { reimbursableExpense: v.reimbursableExpense }),
                    ...(v.totalCost === undefined ? null : { totalCost: v.totalCost }),
                    ...(v.unit === undefined ? null : { unit: v.unit }),
                };
            });
}
