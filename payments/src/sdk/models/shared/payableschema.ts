/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { BankAccount } from "./bankaccount";
import { ClientOptions } from "./clientoptions";
import { FeeHandlingConfig } from "./feehandlingconfig";
import { Fees } from "./fees";
import { InvoiceAttachments } from "./invoiceattachments";
import { InvoiceEvents } from "./invoiceevents";
import { InvoiceLineItem } from "./invoicelineitem";
import { InvoiceMetadata } from "./invoicemetadata";
import { InvoiceNotificationPreferences } from "./invoicenotificationpreferences";
import { LateFeeConfig } from "./latefeeconfig";
import { MemberOptions } from "./memberoptions";
import { ScheduleDate } from "./scheduledate";
import { Sixb94b58d661f3eabc1444a7a43ac4b99580f0d050123b7bf38184e2f0d7bd66e } from "./sixb94b58d661f3eabc1444a7a43ac4b99580f0d050123b7bf38184e2f0d7bd66e";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export enum PayableSchemaAcceptedPaymentMethods {
    Credit = "Credit",
    Ach = "ACH",
    Manual = "Manual",
    LessThanNilGreaterThan = "<nil>",
}

export enum PayableSchemaCurrency {
    Usd = "USD",
    Cad = "CAD",
}

export enum PayableSchemaStatus {
    Draft = "Draft",
    Open = "Open",
    Overdue = "Overdue",
    Cancelled = "Cancelled",
    Pending = "Pending",
    PaymentInTransit = "PaymentInTransit",
    Paid = "Paid",
}

export class PayableSchema extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "acceptedPaymentMethods" })
    acceptedPaymentMethods?: PayableSchemaAcceptedPaymentMethods[];

    @SpeakeasyMetadata()
    @Expose({ name: "accountId" })
    accountId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "amount" })
    amount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "attachments" })
    @Type(() => InvoiceAttachments)
    attachments: InvoiceAttachments;

    @SpeakeasyMetadata()
    @Expose({ name: "bankTransferInfo" })
    @Type(() => BankAccount)
    bankTransferInfo?: BankAccount;

    @SpeakeasyMetadata()
    @Expose({ name: "chargedFees" })
    @Type(() => Fees)
    chargedFees?: Fees;

    @SpeakeasyMetadata()
    @Expose({ name: "client" })
    @Type(() => ClientOptions)
    client: ClientOptions;

    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "collaboratorId" })
    collaboratorId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "creditFeeHandling" })
    @Type(() => FeeHandlingConfig)
    creditFeeHandling: FeeHandlingConfig;

    @SpeakeasyMetadata()
    @Expose({ name: "currency" })
    currency: PayableSchemaCurrency;

    @SpeakeasyMetadata()
    @Expose({ name: "dueDate" })
    dueDate: string;

    @SpeakeasyMetadata()
    @Expose({ name: "eventActors" })
    eventActors: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "events" })
    @Type(() => InvoiceEvents)
    events: InvoiceEvents;

    @SpeakeasyMetadata()
    @Expose({ name: "integration" })
    @Type(() => Sixb94b58d661f3eabc1444a7a43ac4b99580f0d050123b7bf38184e2f0d7bd66e)
    integration: Sixb94b58d661f3eabc1444a7a43ac4b99580f0d050123b7bf38184e2f0d7bd66e;

    @SpeakeasyMetadata()
    @Expose({ name: "internationalBankTransferInfo" })
    @Type(() => BankAccount)
    internationalBankTransferInfo?: BankAccount;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceNotes" })
    invoiceNotes: string;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceNumber" })
    invoiceNumber: string;

    @SpeakeasyMetadata()
    @Expose({ name: "invoiceTemplateId" })
    invoiceTemplateId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "lateFeeHandling" })
    @Type(() => LateFeeConfig)
    lateFeeHandling: LateFeeConfig;

    @SpeakeasyMetadata({ elemType: InvoiceLineItem })
    @Expose({ name: "lineItems" })
    @Type(() => InvoiceLineItem)
    lineItems: InvoiceLineItem[];

    @SpeakeasyMetadata()
    @Expose({ name: "member" })
    @Type(() => MemberOptions)
    member: MemberOptions;

    @SpeakeasyMetadata()
    @Expose({ name: "memberAddress" })
    @Type(() => Address)
    memberAddress: Address;

    @SpeakeasyMetadata()
    @Expose({ name: "memberFormattedAddressLines" })
    memberFormattedAddressLines?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "memberId" })
    memberId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    @Type(() => InvoiceMetadata)
    metadata?: InvoiceMetadata;

    @SpeakeasyMetadata()
    @Expose({ name: "nextPayrollExecutionDate" })
    @Type(() => ScheduleDate)
    nextPayrollExecutionDate?: ScheduleDate;

    @SpeakeasyMetadata()
    @Expose({ name: "notificationPreferences" })
    @Type(() => InvoiceNotificationPreferences)
    notificationPreferences: InvoiceNotificationPreferences;

    @SpeakeasyMetadata()
    @Expose({ name: "payableId" })
    payableId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "paymentMethodId" })
    paymentMethodId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sourceId" })
    sourceId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: PayableSchemaStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;
}
