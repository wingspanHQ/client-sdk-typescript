/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f =
  {
    iban?: string | null | undefined;
    accountNumber?: string | null | undefined;
    accountRouting?: string | null | undefined;
    brand?: string | null | undefined;
    expiryMonth?: string | null | undefined;
    expiryYear?: string | null | undefined;
    last4?: string | null | undefined;
  };

/** @internal */
export const EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$inboundSchema:
  z.ZodType<
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f,
    z.ZodTypeDef,
    unknown
  > = z.object({
    IBAN: z.nullable(z.string()).optional(),
    accountNumber: z.nullable(z.string()).optional(),
    accountRouting: z.nullable(z.string()).optional(),
    brand: z.nullable(z.string()).optional(),
    expiryMonth: z.nullable(z.string()).optional(),
    expiryYear: z.nullable(z.string()).optional(),
    last4: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "IBAN": "iban",
    });
  });

/** @internal */
export type EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$Outbound =
  {
    IBAN?: string | null | undefined;
    accountNumber?: string | null | undefined;
    accountRouting?: string | null | undefined;
    brand?: string | null | undefined;
    expiryMonth?: string | null | undefined;
    expiryYear?: string | null | undefined;
    last4?: string | null | undefined;
  };

/** @internal */
export const EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$outboundSchema:
  z.ZodType<
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$Outbound,
    z.ZodTypeDef,
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f
  > = z.object({
    iban: z.nullable(z.string()).optional(),
    accountNumber: z.nullable(z.string()).optional(),
    accountRouting: z.nullable(z.string()).optional(),
    brand: z.nullable(z.string()).optional(),
    expiryMonth: z.nullable(z.string()).optional(),
    expiryYear: z.nullable(z.string()).optional(),
    last4: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      iban: "IBAN",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$ {
  /** @deprecated use `EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$inboundSchema` instead. */
  export const inboundSchema =
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$inboundSchema;
  /** @deprecated use `EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$outboundSchema` instead. */
  export const outboundSchema =
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$outboundSchema;
  /** @deprecated use `EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$Outbound` instead. */
  export type Outbound =
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$Outbound;
}

export function eightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1fToJSON(
  eightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f:
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f,
): string {
  return JSON.stringify(
    EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$outboundSchema
      .parse(
        eightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f,
      ),
  );
}

export function eightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1fFromJSON(
  jsonString: string,
): SafeParseResult<
  EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'EightThousandTwoHundredAndTwelveee55b9e13fc32935c9417826f64b3550a203b665a04aacb02c4cac363c1f' from JSON`,
  );
}
