/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum Interval {
    Day = "day",
    Week = "week",
    Month = "month",
    Year = "year",
}

export type Plan = {
    amount: number;
    currency: string;
    interval: Interval;
    planId: string;
    title: string;
    trialPeriodDays: number;
};

/** @internal */
export const Interval$ = z.nativeEnum(Interval);

/** @internal */
export namespace Plan$ {
    export type Inbound = {
        amount: number;
        currency: string;
        interval: Interval;
        planId: string;
        title: string;
        trialPeriodDays: number;
    };

    export const inboundSchema: z.ZodType<Plan, z.ZodTypeDef, Inbound> = z
        .object({
            amount: z.number(),
            currency: z.string(),
            interval: Interval$,
            planId: z.string(),
            title: z.string(),
            trialPeriodDays: z.number(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                currency: v.currency,
                interval: v.interval,
                planId: v.planId,
                title: v.title,
                trialPeriodDays: v.trialPeriodDays,
            };
        });

    export type Outbound = {
        amount: number;
        currency: string;
        interval: Interval;
        planId: string;
        title: string;
        trialPeriodDays: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Plan> = z
        .object({
            amount: z.number(),
            currency: z.string(),
            interval: Interval$,
            planId: z.string(),
            title: z.string(),
            trialPeriodDays: z.number(),
        })
        .transform((v) => {
            return {
                amount: v.amount,
                currency: v.currency,
                interval: v.interval,
                planId: v.planId,
                title: v.title,
                trialPeriodDays: v.trialPeriodDays,
            };
        });
}
