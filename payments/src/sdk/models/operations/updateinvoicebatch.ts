/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type UpdateInvoiceBatchRequest = {
  bulkInvoiceBatchUpdate?: shared.BulkInvoiceBatchUpdate | undefined;
  /**
   * Unique identifier for a batch
   */
  batchId: string;
};

export type UpdateInvoiceBatchResponse = {
  /**
   * A batch of items for importing as invoices
   */
  bulkInvoiceBatch?: shared.BulkInvoiceBatch | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const UpdateInvoiceBatchRequest$inboundSchema: z.ZodType<
  UpdateInvoiceBatchRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  BulkInvoiceBatchUpdate: shared.BulkInvoiceBatchUpdate$inboundSchema
    .optional(),
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    "BulkInvoiceBatchUpdate": "bulkInvoiceBatchUpdate",
  });
});

/** @internal */
export type UpdateInvoiceBatchRequest$Outbound = {
  BulkInvoiceBatchUpdate?: shared.BulkInvoiceBatchUpdate$Outbound | undefined;
  batchId: string;
};

/** @internal */
export const UpdateInvoiceBatchRequest$outboundSchema: z.ZodType<
  UpdateInvoiceBatchRequest$Outbound,
  z.ZodTypeDef,
  UpdateInvoiceBatchRequest
> = z.object({
  bulkInvoiceBatchUpdate: shared.BulkInvoiceBatchUpdate$outboundSchema
    .optional(),
  batchId: z.string(),
}).transform((v) => {
  return remap$(v, {
    bulkInvoiceBatchUpdate: "BulkInvoiceBatchUpdate",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateInvoiceBatchRequest$ {
  /** @deprecated use `UpdateInvoiceBatchRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateInvoiceBatchRequest$inboundSchema;
  /** @deprecated use `UpdateInvoiceBatchRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateInvoiceBatchRequest$outboundSchema;
  /** @deprecated use `UpdateInvoiceBatchRequest$Outbound` instead. */
  export type Outbound = UpdateInvoiceBatchRequest$Outbound;
}

/** @internal */
export const UpdateInvoiceBatchResponse$inboundSchema: z.ZodType<
  UpdateInvoiceBatchResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BulkInvoiceBatch: shared.BulkInvoiceBatch$inboundSchema.optional(),
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "BulkInvoiceBatch": "bulkInvoiceBatch",
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type UpdateInvoiceBatchResponse$Outbound = {
  BulkInvoiceBatch?: shared.BulkInvoiceBatch$Outbound | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const UpdateInvoiceBatchResponse$outboundSchema: z.ZodType<
  UpdateInvoiceBatchResponse$Outbound,
  z.ZodTypeDef,
  UpdateInvoiceBatchResponse
> = z.object({
  bulkInvoiceBatch: shared.BulkInvoiceBatch$outboundSchema.optional(),
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    bulkInvoiceBatch: "BulkInvoiceBatch",
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateInvoiceBatchResponse$ {
  /** @deprecated use `UpdateInvoiceBatchResponse$inboundSchema` instead. */
  export const inboundSchema = UpdateInvoiceBatchResponse$inboundSchema;
  /** @deprecated use `UpdateInvoiceBatchResponse$outboundSchema` instead. */
  export const outboundSchema = UpdateInvoiceBatchResponse$outboundSchema;
  /** @deprecated use `UpdateInvoiceBatchResponse$Outbound` instead. */
  export type Outbound = UpdateInvoiceBatchResponse$Outbound;
}
