/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum ApiSessionResponseSessionType {
    User = "User",
    Api = "API",
    Guest = "Guest",
}

export class ApiSessionResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "expiration" })
    expiration: string;

    @SpeakeasyMetadata()
    @Expose({ name: "isUnlimitedExpiration" })
    isUnlimitedExpiration: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels?: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "sessionId" })
    sessionId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "sessionType" })
    sessionType: ApiSessionResponseSessionType;

    @SpeakeasyMetadata()
    @Expose({ name: "token" })
    token?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userId" })
    userId?: string;
}
