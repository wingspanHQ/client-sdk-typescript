/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const DestinationType = {
    Account: "Account",
    Card: "Card",
    InternalAccount: "InternalAccount",
    PaperCheck: "PaperCheck",
    WeGift: "WeGift",
} as const;
export type DestinationType = ClosedEnum<typeof DestinationType>;

export const PayoutMethod = {
    Standard: "Standard",
    Instant: "Instant",
    Expedited: "Expedited",
    Check: "Check",
    ECheck: "ECheck",
} as const;
export type PayoutMethod = ClosedEnum<typeof PayoutMethod>;

export type InvoicePayoutDestination = {
    amount: number;
    brand?: string | null | undefined;
    description: string;
    destinationId?: string | null | undefined;
    destinationType: DestinationType;
    last4?: string | null | undefined;
    payoutMethod: PayoutMethod;
    percentage: number;
    transferId: string;
};

/** @internal */
export const DestinationType$inboundSchema: z.ZodNativeEnum<typeof DestinationType> =
    z.nativeEnum(DestinationType);

/** @internal */
export const DestinationType$outboundSchema: z.ZodNativeEnum<typeof DestinationType> =
    DestinationType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationType$ {
    /** @deprecated use `DestinationType$inboundSchema` instead. */
    export const inboundSchema = DestinationType$inboundSchema;
    /** @deprecated use `DestinationType$outboundSchema` instead. */
    export const outboundSchema = DestinationType$outboundSchema;
}

/** @internal */
export const PayoutMethod$inboundSchema: z.ZodNativeEnum<typeof PayoutMethod> =
    z.nativeEnum(PayoutMethod);

/** @internal */
export const PayoutMethod$outboundSchema: z.ZodNativeEnum<typeof PayoutMethod> =
    PayoutMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayoutMethod$ {
    /** @deprecated use `PayoutMethod$inboundSchema` instead. */
    export const inboundSchema = PayoutMethod$inboundSchema;
    /** @deprecated use `PayoutMethod$outboundSchema` instead. */
    export const outboundSchema = PayoutMethod$outboundSchema;
}

/** @internal */
export const InvoicePayoutDestination$inboundSchema: z.ZodType<
    InvoicePayoutDestination,
    z.ZodTypeDef,
    unknown
> = z.object({
    amount: z.number(),
    brand: z.nullable(z.string()).optional(),
    description: z.string(),
    destinationId: z.nullable(z.string()).optional(),
    destinationType: DestinationType$inboundSchema,
    last4: z.nullable(z.string()).optional(),
    payoutMethod: PayoutMethod$inboundSchema,
    percentage: z.number(),
    transferId: z.string(),
});

/** @internal */
export type InvoicePayoutDestination$Outbound = {
    amount: number;
    brand?: string | null | undefined;
    description: string;
    destinationId?: string | null | undefined;
    destinationType: string;
    last4?: string | null | undefined;
    payoutMethod: string;
    percentage: number;
    transferId: string;
};

/** @internal */
export const InvoicePayoutDestination$outboundSchema: z.ZodType<
    InvoicePayoutDestination$Outbound,
    z.ZodTypeDef,
    InvoicePayoutDestination
> = z.object({
    amount: z.number(),
    brand: z.nullable(z.string()).optional(),
    description: z.string(),
    destinationId: z.nullable(z.string()).optional(),
    destinationType: DestinationType$outboundSchema,
    last4: z.nullable(z.string()).optional(),
    payoutMethod: PayoutMethod$outboundSchema,
    percentage: z.number(),
    transferId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoicePayoutDestination$ {
    /** @deprecated use `InvoicePayoutDestination$inboundSchema` instead. */
    export const inboundSchema = InvoicePayoutDestination$inboundSchema;
    /** @deprecated use `InvoicePayoutDestination$outboundSchema` instead. */
    export const outboundSchema = InvoicePayoutDestination$outboundSchema;
    /** @deprecated use `InvoicePayoutDestination$Outbound` instead. */
    export type Outbound = InvoicePayoutDestination$Outbound;
}
