/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c,
    B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$,
} from "./b9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c";
import { ClientData, ClientData$ } from "./clientdata";
import { ExternalIds, ExternalIds$ } from "./externalids";
import { MemberClientEvents, MemberClientEvents$ } from "./memberclientevents";
import { MemberClientFormW9Info, MemberClientFormW9Info$ } from "./memberclientformw9info";
import {
    MemberClientRequirementResponse,
    MemberClientRequirementResponse$,
} from "./memberclientrequirementresponse";
import { MemberClientWireAccount, MemberClientWireAccount$ } from "./memberclientwireaccount";
import { MemberData, MemberData$ } from "./memberdata";
import { RedactedMember, RedactedMember$ } from "./redactedmember";
import {
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f,
    Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$,
} from "./threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f";
import { UserRoles, UserRoles$ } from "./userroles";
import { z } from "zod";

export enum ClientUserAccountType {
    Member = "member",
    Enterprise = "enterprise",
}

export enum MemberClientStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
}

export enum MemberClientTaxStatus {
    Complete = "Complete",
    Failed = "Failed",
    Pending = "Pending",
    Incomplete = "Incomplete",
}

export type MemberClient = {
    achCreditAccount: MemberClientWireAccount;
    client: RedactedMember;
    clientData: ClientData;
    clientId: string;
    clientUserAccountType: ClientUserAccountType;
    collaboratorGroupId?: string | null | undefined;
    collaboratorGroupIds?: Array<string> | null | undefined;
    company?: string | null | undefined;
    createdAt: string;
    eligibilityRequirements?: Array<MemberClientRequirementResponse> | null | undefined;
    emailCC?: Array<string> | null | undefined;
    emailTo: string;
    eventActors: Record<string, string>;
    events: MemberClientEvents;
    externalIds: ExternalIds;
    form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c;
    formW9Data: MemberClientFormW9Info;
    integration?:
        | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f
        | null
        | undefined;
    internationalWireAccount: MemberClientWireAccount;
    labels: Record<string, string>;
    member: RedactedMember;
    memberClientId: string;
    memberData: MemberData;
    memberId: string;
    name?: string | null | undefined;
    parentMemberClientId: string;
    payerPayeeId: string;
    status: MemberClientStatus;
    taxStatus: MemberClientTaxStatus;
    updatedAt: string;
    userRoles: UserRoles;
};

/** @internal */
export const ClientUserAccountType$ = z.nativeEnum(ClientUserAccountType);

/** @internal */
export const MemberClientStatus$ = z.nativeEnum(MemberClientStatus);

/** @internal */
export const MemberClientTaxStatus$ = z.nativeEnum(MemberClientTaxStatus);

/** @internal */
export namespace MemberClient$ {
    export type Inbound = {
        achCreditAccount: MemberClientWireAccount$.Inbound;
        client: RedactedMember$.Inbound;
        clientData: ClientData$.Inbound;
        clientId: string;
        clientUserAccountType: ClientUserAccountType;
        collaboratorGroupId?: string | null | undefined;
        collaboratorGroupIds?: Array<string> | null | undefined;
        company?: string | null | undefined;
        createdAt: string;
        eligibilityRequirements?:
            | Array<MemberClientRequirementResponse$.Inbound>
            | null
            | undefined;
        emailCC?: Array<string> | null | undefined;
        emailTo: string;
        eventActors: Record<string, string>;
        events: MemberClientEvents$.Inbound;
        externalIds: ExternalIds$.Inbound;
        form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.Inbound;
        formW9Data: MemberClientFormW9Info$.Inbound;
        integration?:
            | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$.Inbound
            | null
            | undefined;
        internationalWireAccount: MemberClientWireAccount$.Inbound;
        labels: Record<string, string>;
        member: RedactedMember$.Inbound;
        memberClientId: string;
        memberData: MemberData$.Inbound;
        memberId: string;
        name?: string | null | undefined;
        parentMemberClientId: string;
        payerPayeeId: string;
        status: MemberClientStatus;
        taxStatus: MemberClientTaxStatus;
        updatedAt: string;
        userRoles: UserRoles$.Inbound;
    };

    export const inboundSchema: z.ZodType<MemberClient, z.ZodTypeDef, Inbound> = z
        .object({
            achCreditAccount: MemberClientWireAccount$.inboundSchema,
            client: RedactedMember$.inboundSchema,
            clientData: ClientData$.inboundSchema,
            clientId: z.string(),
            clientUserAccountType: ClientUserAccountType$,
            collaboratorGroupId: z.string().nullable().optional(),
            collaboratorGroupIds: z.array(z.string()).nullable().optional(),
            company: z.string().nullable().optional(),
            createdAt: z.string(),
            eligibilityRequirements: z
                .array(MemberClientRequirementResponse$.inboundSchema)
                .nullable()
                .optional(),
            emailCC: z.array(z.string()).nullable().optional(),
            emailTo: z.string(),
            eventActors: z.record(z.string()),
            events: MemberClientEvents$.inboundSchema,
            externalIds: ExternalIds$.inboundSchema,
            form1099Balances:
                B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.inboundSchema,
            formW9Data: MemberClientFormW9Info$.inboundSchema,
            integration:
                Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$.inboundSchema
                    .nullable()
                    .optional(),
            internationalWireAccount: MemberClientWireAccount$.inboundSchema,
            labels: z.record(z.string()),
            member: RedactedMember$.inboundSchema,
            memberClientId: z.string(),
            memberData: MemberData$.inboundSchema,
            memberId: z.string(),
            name: z.string().nullable().optional(),
            parentMemberClientId: z.string(),
            payerPayeeId: z.string(),
            status: MemberClientStatus$,
            taxStatus: MemberClientTaxStatus$,
            updatedAt: z.string(),
            userRoles: UserRoles$.inboundSchema,
        })
        .transform((v) => {
            return {
                achCreditAccount: v.achCreditAccount,
                client: v.client,
                clientData: v.clientData,
                clientId: v.clientId,
                clientUserAccountType: v.clientUserAccountType,
                ...(v.collaboratorGroupId === undefined
                    ? null
                    : { collaboratorGroupId: v.collaboratorGroupId }),
                ...(v.collaboratorGroupIds === undefined
                    ? null
                    : { collaboratorGroupIds: v.collaboratorGroupIds }),
                ...(v.company === undefined ? null : { company: v.company }),
                createdAt: v.createdAt,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                ...(v.emailCC === undefined ? null : { emailCC: v.emailCC }),
                emailTo: v.emailTo,
                eventActors: v.eventActors,
                events: v.events,
                externalIds: v.externalIds,
                form1099Balances: v.form1099Balances,
                formW9Data: v.formW9Data,
                ...(v.integration === undefined ? null : { integration: v.integration }),
                internationalWireAccount: v.internationalWireAccount,
                labels: v.labels,
                member: v.member,
                memberClientId: v.memberClientId,
                memberData: v.memberData,
                memberId: v.memberId,
                ...(v.name === undefined ? null : { name: v.name }),
                parentMemberClientId: v.parentMemberClientId,
                payerPayeeId: v.payerPayeeId,
                status: v.status,
                taxStatus: v.taxStatus,
                updatedAt: v.updatedAt,
                userRoles: v.userRoles,
            };
        });

    export type Outbound = {
        achCreditAccount: MemberClientWireAccount$.Outbound;
        client: RedactedMember$.Outbound;
        clientData: ClientData$.Outbound;
        clientId: string;
        clientUserAccountType: ClientUserAccountType;
        collaboratorGroupId?: string | null | undefined;
        collaboratorGroupIds?: Array<string> | null | undefined;
        company?: string | null | undefined;
        createdAt: string;
        eligibilityRequirements?:
            | Array<MemberClientRequirementResponse$.Outbound>
            | null
            | undefined;
        emailCC?: Array<string> | null | undefined;
        emailTo: string;
        eventActors: Record<string, string>;
        events: MemberClientEvents$.Outbound;
        externalIds: ExternalIds$.Outbound;
        form1099Balances: B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.Outbound;
        formW9Data: MemberClientFormW9Info$.Outbound;
        integration?:
            | Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$.Outbound
            | null
            | undefined;
        internationalWireAccount: MemberClientWireAccount$.Outbound;
        labels: Record<string, string>;
        member: RedactedMember$.Outbound;
        memberClientId: string;
        memberData: MemberData$.Outbound;
        memberId: string;
        name?: string | null | undefined;
        parentMemberClientId: string;
        payerPayeeId: string;
        status: MemberClientStatus;
        taxStatus: MemberClientTaxStatus;
        updatedAt: string;
        userRoles: UserRoles$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberClient> = z
        .object({
            achCreditAccount: MemberClientWireAccount$.outboundSchema,
            client: RedactedMember$.outboundSchema,
            clientData: ClientData$.outboundSchema,
            clientId: z.string(),
            clientUserAccountType: ClientUserAccountType$,
            collaboratorGroupId: z.string().nullable().optional(),
            collaboratorGroupIds: z.array(z.string()).nullable().optional(),
            company: z.string().nullable().optional(),
            createdAt: z.string(),
            eligibilityRequirements: z
                .array(MemberClientRequirementResponse$.outboundSchema)
                .nullable()
                .optional(),
            emailCC: z.array(z.string()).nullable().optional(),
            emailTo: z.string(),
            eventActors: z.record(z.string()),
            events: MemberClientEvents$.outboundSchema,
            externalIds: ExternalIds$.outboundSchema,
            form1099Balances:
                B9789f45f8c8070ff38a64d80c2e4a8732ddaf329e46546474400d26f84c0f1c$.outboundSchema,
            formW9Data: MemberClientFormW9Info$.outboundSchema,
            integration:
                Threed33fba3f009de957b3be92fba006d6383af7e39f823cc1fd213506f6205100f$.outboundSchema
                    .nullable()
                    .optional(),
            internationalWireAccount: MemberClientWireAccount$.outboundSchema,
            labels: z.record(z.string()),
            member: RedactedMember$.outboundSchema,
            memberClientId: z.string(),
            memberData: MemberData$.outboundSchema,
            memberId: z.string(),
            name: z.string().nullable().optional(),
            parentMemberClientId: z.string(),
            payerPayeeId: z.string(),
            status: MemberClientStatus$,
            taxStatus: MemberClientTaxStatus$,
            updatedAt: z.string(),
            userRoles: UserRoles$.outboundSchema,
        })
        .transform((v) => {
            return {
                achCreditAccount: v.achCreditAccount,
                client: v.client,
                clientData: v.clientData,
                clientId: v.clientId,
                clientUserAccountType: v.clientUserAccountType,
                ...(v.collaboratorGroupId === undefined
                    ? null
                    : { collaboratorGroupId: v.collaboratorGroupId }),
                ...(v.collaboratorGroupIds === undefined
                    ? null
                    : { collaboratorGroupIds: v.collaboratorGroupIds }),
                ...(v.company === undefined ? null : { company: v.company }),
                createdAt: v.createdAt,
                ...(v.eligibilityRequirements === undefined
                    ? null
                    : { eligibilityRequirements: v.eligibilityRequirements }),
                ...(v.emailCC === undefined ? null : { emailCC: v.emailCC }),
                emailTo: v.emailTo,
                eventActors: v.eventActors,
                events: v.events,
                externalIds: v.externalIds,
                form1099Balances: v.form1099Balances,
                formW9Data: v.formW9Data,
                ...(v.integration === undefined ? null : { integration: v.integration }),
                internationalWireAccount: v.internationalWireAccount,
                labels: v.labels,
                member: v.member,
                memberClientId: v.memberClientId,
                memberData: v.memberData,
                memberId: v.memberId,
                ...(v.name === undefined ? null : { name: v.name }),
                parentMemberClientId: v.parentMemberClientId,
                payerPayeeId: v.payerPayeeId,
                status: v.status,
                taxStatus: v.taxStatus,
                updatedAt: v.updatedAt,
                userRoles: v.userRoles,
            };
        });
}
