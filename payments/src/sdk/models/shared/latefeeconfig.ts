/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Frequency,
  Frequency$inboundSchema,
  Frequency$Outbound,
  Frequency$outboundSchema,
} from "./frequency.js";

export type LateFeeConfig = {
  frequency: Frequency;
  lateFeeAmount?: number | null | undefined;
  lateFeePercentage?: number | null | undefined;
};

/** @internal */
export const LateFeeConfig$inboundSchema: z.ZodType<
  LateFeeConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  frequency: Frequency$inboundSchema,
  lateFeeAmount: z.nullable(z.number()).optional(),
  lateFeePercentage: z.nullable(z.number()).optional(),
});

/** @internal */
export type LateFeeConfig$Outbound = {
  frequency: Frequency$Outbound;
  lateFeeAmount?: number | null | undefined;
  lateFeePercentage?: number | null | undefined;
};

/** @internal */
export const LateFeeConfig$outboundSchema: z.ZodType<
  LateFeeConfig$Outbound,
  z.ZodTypeDef,
  LateFeeConfig
> = z.object({
  frequency: Frequency$outboundSchema,
  lateFeeAmount: z.nullable(z.number()).optional(),
  lateFeePercentage: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LateFeeConfig$ {
  /** @deprecated use `LateFeeConfig$inboundSchema` instead. */
  export const inboundSchema = LateFeeConfig$inboundSchema;
  /** @deprecated use `LateFeeConfig$outboundSchema` instead. */
  export const outboundSchema = LateFeeConfig$outboundSchema;
  /** @deprecated use `LateFeeConfig$Outbound` instead. */
  export type Outbound = LateFeeConfig$Outbound;
}

export function lateFeeConfigToJSON(lateFeeConfig: LateFeeConfig): string {
  return JSON.stringify(LateFeeConfig$outboundSchema.parse(lateFeeConfig));
}

export function lateFeeConfigFromJSON(
  jsonString: string,
): SafeParseResult<LateFeeConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LateFeeConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LateFeeConfig' from JSON`,
  );
}
