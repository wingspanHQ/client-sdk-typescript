/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PayerTaxFormResponse, PayerTaxFormResponse$ } from "./payertaxformresponse";
import { z } from "zod";

export type TaxFormResponse = PayerTaxFormResponse | Array<PayerTaxFormResponse>;

/** @internal */
export namespace TaxFormResponse$ {
    export type Inbound = PayerTaxFormResponse$.Inbound | Array<PayerTaxFormResponse$.Inbound>;

    export type Outbound = PayerTaxFormResponse$.Outbound | Array<PayerTaxFormResponse$.Outbound>;

    export const inboundSchema: z.ZodType<TaxFormResponse, z.ZodTypeDef, Inbound> = z.union([
        PayerTaxFormResponse$.inboundSchema,
        z.array(PayerTaxFormResponse$.inboundSchema),
    ]);

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TaxFormResponse> = z.union([
        PayerTaxFormResponse$.outboundSchema,
        z.array(PayerTaxFormResponse$.outboundSchema),
    ]);
}
