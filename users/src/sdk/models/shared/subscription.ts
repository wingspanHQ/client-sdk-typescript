/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PreviouslyBilled } from "./previouslybilled";
import { ScheduledChange } from "./scheduledchange";
import { UserRoles } from "./userroles";
import { Expose, Type } from "class-transformer";

export enum LatestPaymentStatus {
    Failed = "Failed",
    Succeeded = "Succeeded",
    ActionRequired = "ActionRequired",
}

export enum SubscriptionPackage {
    None = "None",
    Benefits = "Benefits",
    Essentials = "Essentials",
    Professional = "Professional",
    Corporate = "Corporate",
}

export enum SubscriptionPackageTier {
    Basic = "Basic",
    Premium = "Premium",
}

export enum SubscriptionStatus {
    Incomplete = "incomplete",
    IncompleteExpired = "incomplete_expired",
    Trialing = "trialing",
    Active = "active",
    PastDue = "past_due",
    Canceled = "canceled",
    Unpaid = "unpaid",
}

export enum SubscriptionTerm {
    Yearly = "Yearly",
    Monthly = "Monthly",
}

export class Subscription extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "cancelAtPeriodEnd" })
    cancelAtPeriodEnd?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "createdAt" })
    createdAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "currentPeriodEnd" })
    currentPeriodEnd: string;

    @SpeakeasyMetadata()
    @Expose({ name: "currentPeriodStart" })
    currentPeriodStart: string;

    @SpeakeasyMetadata()
    @Expose({ name: "discountCode" })
    discountCode: string;

    @SpeakeasyMetadata()
    @Expose({ name: "eventActors" })
    eventActors: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "gracePeriodEnd" })
    gracePeriodEnd: string;

    @SpeakeasyMetadata()
    @Expose({ name: "labels" })
    labels: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "latestPaymentStatus" })
    latestPaymentStatus: LatestPaymentStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "memberId" })
    memberId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "nextBillingAmount" })
    nextBillingAmount?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "package" })
    package: SubscriptionPackage;

    @SpeakeasyMetadata()
    @Expose({ name: "packageTier" })
    packageTier: SubscriptionPackageTier;

    @SpeakeasyMetadata()
    @Expose({ name: "previouslyBilled" })
    @Type(() => PreviouslyBilled)
    previouslyBilled: PreviouslyBilled;

    @SpeakeasyMetadata({ elemType: ScheduledChange })
    @Expose({ name: "scheduledChanges" })
    @Type(() => ScheduledChange)
    scheduledChanges?: ScheduledChange[];

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: SubscriptionStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "subscriptionGrantId" })
    subscriptionGrantId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "subscriptionId" })
    subscriptionId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "term" })
    term: SubscriptionTerm;

    @SpeakeasyMetadata()
    @Expose({ name: "trialEnd" })
    trialEnd: string;

    @SpeakeasyMetadata()
    @Expose({ name: "updatedAt" })
    updatedAt: string;

    @SpeakeasyMetadata()
    @Expose({ name: "userRoles" })
    @Type(() => UserRoles)
    userRoles: UserRoles;
}
