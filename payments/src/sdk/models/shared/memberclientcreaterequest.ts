/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0,
    D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$,
} from "./d750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0";
import { MemberData, MemberData$ } from "./memberdata";
import { z } from "zod";

export enum MemberClientCreateRequestStatus {
    Active = "Active",
    Inactive = "Inactive",
    Pending = "Pending",
    LessThanNilGreaterThan = "<nil>",
}

export type MemberClientCreateRequest = {
    clientId?: string | null | undefined;
    company?: string | null | undefined;
    emailCC?: Array<string> | null | undefined;
    emailTo?: string | null | undefined;
    integration?:
        | D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0
        | null
        | undefined;
    labels?: Record<string, string> | null | undefined;
    memberData?: MemberData | null | undefined;
    memberId?: string | null | undefined;
    name?: string | null | undefined;
    status?: MemberClientCreateRequestStatus | null | undefined;
};

/** @internal */
export const MemberClientCreateRequestStatus$ = z.nativeEnum(MemberClientCreateRequestStatus);

/** @internal */
export namespace MemberClientCreateRequest$ {
    export type Inbound = {
        clientId?: string | null | undefined;
        company?: string | null | undefined;
        emailCC?: Array<string> | null | undefined;
        emailTo?: string | null | undefined;
        integration?:
            | D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$.Inbound
            | null
            | undefined;
        labels?: Record<string, string> | null | undefined;
        memberData?: MemberData$.Inbound | null | undefined;
        memberId?: string | null | undefined;
        name?: string | null | undefined;
        status?: MemberClientCreateRequestStatus | null | undefined;
    };

    export const inboundSchema: z.ZodType<MemberClientCreateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            clientId: z.string().nullable().optional(),
            company: z.string().nullable().optional(),
            emailCC: z.array(z.string()).nullable().optional(),
            emailTo: z.string().nullable().optional(),
            integration:
                D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$.inboundSchema
                    .nullable()
                    .optional(),
            labels: z.record(z.string()).nullable().optional(),
            memberData: MemberData$.inboundSchema.nullable().optional(),
            memberId: z.string().nullable().optional(),
            name: z.string().nullable().optional(),
            status: MemberClientCreateRequestStatus$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.clientId === undefined ? null : { clientId: v.clientId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.emailCC === undefined ? null : { emailCC: v.emailCC }),
                ...(v.emailTo === undefined ? null : { emailTo: v.emailTo }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.memberData === undefined ? null : { memberData: v.memberData }),
                ...(v.memberId === undefined ? null : { memberId: v.memberId }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        clientId?: string | null | undefined;
        company?: string | null | undefined;
        emailCC?: Array<string> | null | undefined;
        emailTo?: string | null | undefined;
        integration?:
            | D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$.Outbound
            | null
            | undefined;
        labels?: Record<string, string> | null | undefined;
        memberData?: MemberData$.Outbound | null | undefined;
        memberId?: string | null | undefined;
        name?: string | null | undefined;
        status?: MemberClientCreateRequestStatus | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberClientCreateRequest> = z
        .object({
            clientId: z.string().nullable().optional(),
            company: z.string().nullable().optional(),
            emailCC: z.array(z.string()).nullable().optional(),
            emailTo: z.string().nullable().optional(),
            integration:
                D750b2d9403b5bcbdb3c96c89f1cc713df563d587f16e5f39f5ab546c08a20a0$.outboundSchema
                    .nullable()
                    .optional(),
            labels: z.record(z.string()).nullable().optional(),
            memberData: MemberData$.outboundSchema.nullable().optional(),
            memberId: z.string().nullable().optional(),
            name: z.string().nullable().optional(),
            status: MemberClientCreateRequestStatus$.nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.clientId === undefined ? null : { clientId: v.clientId }),
                ...(v.company === undefined ? null : { company: v.company }),
                ...(v.emailCC === undefined ? null : { emailCC: v.emailCC }),
                ...(v.emailTo === undefined ? null : { emailTo: v.emailTo }),
                ...(v.integration === undefined ? null : { integration: v.integration }),
                ...(v.labels === undefined ? null : { labels: v.labels }),
                ...(v.memberData === undefined ? null : { memberData: v.memberData }),
                ...(v.memberId === undefined ? null : { memberId: v.memberId }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
