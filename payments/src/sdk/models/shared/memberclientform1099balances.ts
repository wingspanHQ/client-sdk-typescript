/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5,
  Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$inboundSchema,
  Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$Outbound,
  Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$outboundSchema,
} from "./eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5.js";
import {
  Form1099Correction,
  Form1099Correction$inboundSchema,
  Form1099Correction$Outbound,
  Form1099Correction$outboundSchema,
} from "./form1099correction.js";
import {
  Form1099Events,
  Form1099Events$inboundSchema,
  Form1099Events$Outbound,
  Form1099Events$outboundSchema,
} from "./form1099events.js";

export const MemberClientForm1099BalancesDeliveryMethod = {
  Electronic: "Electronic",
  Mail: "Mail",
} as const;
export type MemberClientForm1099BalancesDeliveryMethod = ClosedEnum<
  typeof MemberClientForm1099BalancesDeliveryMethod
>;

export const ExclusionReason = {
  BelowThreshold: "BelowThreshold",
  CompanyStructure: "CompanyStructure",
  NonUsEntity: "NonUsEntity",
} as const;
export type ExclusionReason = ClosedEnum<typeof ExclusionReason>;

export const MemberClientForm1099BalancesStatus = {
  Ready: "Ready",
  NeedsActionInfo: "NeedsActionInfo",
  NeedsActionDispute: "NeedsActionDispute",
  Submitted: "Submitted",
  Rejected: "Rejected",
  Accepted: "Accepted",
  Excluded: "Excluded",
} as const;
export type MemberClientForm1099BalancesStatus = ClosedEnum<
  typeof MemberClientForm1099BalancesStatus
>;

export type TaxForm = {};

export const MemberClientForm1099BalancesType = {
  Nec: "NEC",
} as const;
export type MemberClientForm1099BalancesType = ClosedEnum<
  typeof MemberClientForm1099BalancesType
>;

export type MemberClientForm1099Balances = {
  adjustments: number;
  correction?: Form1099Correction | null | undefined;
  deliveryMethod: MemberClientForm1099BalancesDeliveryMethod;
  dispute?:
    | Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5
    | null
    | undefined;
  events?: Form1099Events | null | undefined;
  exclusionReason: ExclusionReason;
  form1099Generated: boolean;
  paymentProcessingFees: number;
  platformIncome: number;
  status: MemberClientForm1099BalancesStatus;
  taxForm?: TaxForm | null | undefined;
  taxFormId?: string | null | undefined;
  type: MemberClientForm1099BalancesType;
};

/** @internal */
export const MemberClientForm1099BalancesDeliveryMethod$inboundSchema:
  z.ZodNativeEnum<typeof MemberClientForm1099BalancesDeliveryMethod> = z
    .nativeEnum(MemberClientForm1099BalancesDeliveryMethod);

/** @internal */
export const MemberClientForm1099BalancesDeliveryMethod$outboundSchema:
  z.ZodNativeEnum<typeof MemberClientForm1099BalancesDeliveryMethod> =
    MemberClientForm1099BalancesDeliveryMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientForm1099BalancesDeliveryMethod$ {
  /** @deprecated use `MemberClientForm1099BalancesDeliveryMethod$inboundSchema` instead. */
  export const inboundSchema =
    MemberClientForm1099BalancesDeliveryMethod$inboundSchema;
  /** @deprecated use `MemberClientForm1099BalancesDeliveryMethod$outboundSchema` instead. */
  export const outboundSchema =
    MemberClientForm1099BalancesDeliveryMethod$outboundSchema;
}

/** @internal */
export const ExclusionReason$inboundSchema: z.ZodNativeEnum<
  typeof ExclusionReason
> = z.nativeEnum(ExclusionReason);

/** @internal */
export const ExclusionReason$outboundSchema: z.ZodNativeEnum<
  typeof ExclusionReason
> = ExclusionReason$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExclusionReason$ {
  /** @deprecated use `ExclusionReason$inboundSchema` instead. */
  export const inboundSchema = ExclusionReason$inboundSchema;
  /** @deprecated use `ExclusionReason$outboundSchema` instead. */
  export const outboundSchema = ExclusionReason$outboundSchema;
}

/** @internal */
export const MemberClientForm1099BalancesStatus$inboundSchema: z.ZodNativeEnum<
  typeof MemberClientForm1099BalancesStatus
> = z.nativeEnum(MemberClientForm1099BalancesStatus);

/** @internal */
export const MemberClientForm1099BalancesStatus$outboundSchema: z.ZodNativeEnum<
  typeof MemberClientForm1099BalancesStatus
> = MemberClientForm1099BalancesStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientForm1099BalancesStatus$ {
  /** @deprecated use `MemberClientForm1099BalancesStatus$inboundSchema` instead. */
  export const inboundSchema = MemberClientForm1099BalancesStatus$inboundSchema;
  /** @deprecated use `MemberClientForm1099BalancesStatus$outboundSchema` instead. */
  export const outboundSchema =
    MemberClientForm1099BalancesStatus$outboundSchema;
}

/** @internal */
export const TaxForm$inboundSchema: z.ZodType<TaxForm, z.ZodTypeDef, unknown> =
  z.object({});

/** @internal */
export type TaxForm$Outbound = {};

/** @internal */
export const TaxForm$outboundSchema: z.ZodType<
  TaxForm$Outbound,
  z.ZodTypeDef,
  TaxForm
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxForm$ {
  /** @deprecated use `TaxForm$inboundSchema` instead. */
  export const inboundSchema = TaxForm$inboundSchema;
  /** @deprecated use `TaxForm$outboundSchema` instead. */
  export const outboundSchema = TaxForm$outboundSchema;
  /** @deprecated use `TaxForm$Outbound` instead. */
  export type Outbound = TaxForm$Outbound;
}

export function taxFormToJSON(taxForm: TaxForm): string {
  return JSON.stringify(TaxForm$outboundSchema.parse(taxForm));
}

export function taxFormFromJSON(
  jsonString: string,
): SafeParseResult<TaxForm, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TaxForm$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TaxForm' from JSON`,
  );
}

/** @internal */
export const MemberClientForm1099BalancesType$inboundSchema: z.ZodNativeEnum<
  typeof MemberClientForm1099BalancesType
> = z.nativeEnum(MemberClientForm1099BalancesType);

/** @internal */
export const MemberClientForm1099BalancesType$outboundSchema: z.ZodNativeEnum<
  typeof MemberClientForm1099BalancesType
> = MemberClientForm1099BalancesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientForm1099BalancesType$ {
  /** @deprecated use `MemberClientForm1099BalancesType$inboundSchema` instead. */
  export const inboundSchema = MemberClientForm1099BalancesType$inboundSchema;
  /** @deprecated use `MemberClientForm1099BalancesType$outboundSchema` instead. */
  export const outboundSchema = MemberClientForm1099BalancesType$outboundSchema;
}

/** @internal */
export const MemberClientForm1099Balances$inboundSchema: z.ZodType<
  MemberClientForm1099Balances,
  z.ZodTypeDef,
  unknown
> = z.object({
  adjustments: z.number(),
  correction: z.nullable(Form1099Correction$inboundSchema).optional(),
  deliveryMethod: MemberClientForm1099BalancesDeliveryMethod$inboundSchema,
  dispute: z.nullable(
    Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$inboundSchema,
  ).optional(),
  events: z.nullable(Form1099Events$inboundSchema).optional(),
  exclusionReason: ExclusionReason$inboundSchema,
  form1099Generated: z.boolean(),
  paymentProcessingFees: z.number(),
  platformIncome: z.number(),
  status: MemberClientForm1099BalancesStatus$inboundSchema,
  taxForm: z.nullable(z.lazy(() => TaxForm$inboundSchema)).optional(),
  taxFormId: z.nullable(z.string()).optional(),
  type: MemberClientForm1099BalancesType$inboundSchema,
});

/** @internal */
export type MemberClientForm1099Balances$Outbound = {
  adjustments: number;
  correction?: Form1099Correction$Outbound | null | undefined;
  deliveryMethod: string;
  dispute?:
    | Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$Outbound
    | null
    | undefined;
  events?: Form1099Events$Outbound | null | undefined;
  exclusionReason: string;
  form1099Generated: boolean;
  paymentProcessingFees: number;
  platformIncome: number;
  status: string;
  taxForm?: TaxForm$Outbound | null | undefined;
  taxFormId?: string | null | undefined;
  type: string;
};

/** @internal */
export const MemberClientForm1099Balances$outboundSchema: z.ZodType<
  MemberClientForm1099Balances$Outbound,
  z.ZodTypeDef,
  MemberClientForm1099Balances
> = z.object({
  adjustments: z.number(),
  correction: z.nullable(Form1099Correction$outboundSchema).optional(),
  deliveryMethod: MemberClientForm1099BalancesDeliveryMethod$outboundSchema,
  dispute: z.nullable(
    Eighta9c6cb49482a98cdd603ff09858cdc3e5ef6ad9807c876c4161d925a96694a5$outboundSchema,
  ).optional(),
  events: z.nullable(Form1099Events$outboundSchema).optional(),
  exclusionReason: ExclusionReason$outboundSchema,
  form1099Generated: z.boolean(),
  paymentProcessingFees: z.number(),
  platformIncome: z.number(),
  status: MemberClientForm1099BalancesStatus$outboundSchema,
  taxForm: z.nullable(z.lazy(() => TaxForm$outboundSchema)).optional(),
  taxFormId: z.nullable(z.string()).optional(),
  type: MemberClientForm1099BalancesType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace MemberClientForm1099Balances$ {
  /** @deprecated use `MemberClientForm1099Balances$inboundSchema` instead. */
  export const inboundSchema = MemberClientForm1099Balances$inboundSchema;
  /** @deprecated use `MemberClientForm1099Balances$outboundSchema` instead. */
  export const outboundSchema = MemberClientForm1099Balances$outboundSchema;
  /** @deprecated use `MemberClientForm1099Balances$Outbound` instead. */
  export type Outbound = MemberClientForm1099Balances$Outbound;
}

export function memberClientForm1099BalancesToJSON(
  memberClientForm1099Balances: MemberClientForm1099Balances,
): string {
  return JSON.stringify(
    MemberClientForm1099Balances$outboundSchema.parse(
      memberClientForm1099Balances,
    ),
  );
}

export function memberClientForm1099BalancesFromJSON(
  jsonString: string,
): SafeParseResult<MemberClientForm1099Balances, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => MemberClientForm1099Balances$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'MemberClientForm1099Balances' from JSON`,
  );
}
