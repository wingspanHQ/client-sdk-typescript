/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const BulkPayableBatchUpdateStatus = {
  Open: "Open",
  Pending: "Pending",
  Processing: "Processing",
  Complete: "Complete",
  Failed: "Failed",
} as const;
export type BulkPayableBatchUpdateStatus = ClosedEnum<
  typeof BulkPayableBatchUpdateStatus
>;

export type BulkPayableBatchUpdate = {
  labels?: { [k: string]: string } | null | undefined;
  status?: BulkPayableBatchUpdateStatus | null | undefined;
};

/** @internal */
export const BulkPayableBatchUpdateStatus$inboundSchema: z.ZodNativeEnum<
  typeof BulkPayableBatchUpdateStatus
> = z.nativeEnum(BulkPayableBatchUpdateStatus);

/** @internal */
export const BulkPayableBatchUpdateStatus$outboundSchema: z.ZodNativeEnum<
  typeof BulkPayableBatchUpdateStatus
> = BulkPayableBatchUpdateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableBatchUpdateStatus$ {
  /** @deprecated use `BulkPayableBatchUpdateStatus$inboundSchema` instead. */
  export const inboundSchema = BulkPayableBatchUpdateStatus$inboundSchema;
  /** @deprecated use `BulkPayableBatchUpdateStatus$outboundSchema` instead. */
  export const outboundSchema = BulkPayableBatchUpdateStatus$outboundSchema;
}

/** @internal */
export const BulkPayableBatchUpdate$inboundSchema: z.ZodType<
  BulkPayableBatchUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  labels: z.nullable(z.record(z.string())).optional(),
  status: z.nullable(BulkPayableBatchUpdateStatus$inboundSchema).optional(),
});

/** @internal */
export type BulkPayableBatchUpdate$Outbound = {
  labels?: { [k: string]: string } | null | undefined;
  status?: string | null | undefined;
};

/** @internal */
export const BulkPayableBatchUpdate$outboundSchema: z.ZodType<
  BulkPayableBatchUpdate$Outbound,
  z.ZodTypeDef,
  BulkPayableBatchUpdate
> = z.object({
  labels: z.nullable(z.record(z.string())).optional(),
  status: z.nullable(BulkPayableBatchUpdateStatus$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkPayableBatchUpdate$ {
  /** @deprecated use `BulkPayableBatchUpdate$inboundSchema` instead. */
  export const inboundSchema = BulkPayableBatchUpdate$inboundSchema;
  /** @deprecated use `BulkPayableBatchUpdate$outboundSchema` instead. */
  export const outboundSchema = BulkPayableBatchUpdate$outboundSchema;
  /** @deprecated use `BulkPayableBatchUpdate$Outbound` instead. */
  export type Outbound = BulkPayableBatchUpdate$Outbound;
}

export function bulkPayableBatchUpdateToJSON(
  bulkPayableBatchUpdate: BulkPayableBatchUpdate,
): string {
  return JSON.stringify(
    BulkPayableBatchUpdate$outboundSchema.parse(bulkPayableBatchUpdate),
  );
}

export function bulkPayableBatchUpdateFromJSON(
  jsonString: string,
): SafeParseResult<BulkPayableBatchUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkPayableBatchUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkPayableBatchUpdate' from JSON`,
  );
}
