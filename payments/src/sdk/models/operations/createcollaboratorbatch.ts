/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type CreateCollaboratorBatchResponse = {
  /**
   * A batch of items for importing as collaborators
   */
  bulkCollaboratorBatch?: shared.BulkCollaboratorBatch | undefined;
  /**
   * HTTP response content type for this operation
   */
  contentType: string;
  /**
   * HTTP response status code for this operation
   */
  statusCode: number;
  /**
   * Raw HTTP response; suitable for custom response parsing
   */
  rawResponse: Response;
};

/** @internal */
export const CreateCollaboratorBatchResponse$inboundSchema: z.ZodType<
  CreateCollaboratorBatchResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  BulkCollaboratorBatch: shared.BulkCollaboratorBatch$inboundSchema.optional(),
  ContentType: z.string(),
  StatusCode: z.number().int(),
  RawResponse: z.instanceof(Response),
}).transform((v) => {
  return remap$(v, {
    "BulkCollaboratorBatch": "bulkCollaboratorBatch",
    "ContentType": "contentType",
    "StatusCode": "statusCode",
    "RawResponse": "rawResponse",
  });
});

/** @internal */
export type CreateCollaboratorBatchResponse$Outbound = {
  BulkCollaboratorBatch?: shared.BulkCollaboratorBatch$Outbound | undefined;
  ContentType: string;
  StatusCode: number;
  RawResponse: never;
};

/** @internal */
export const CreateCollaboratorBatchResponse$outboundSchema: z.ZodType<
  CreateCollaboratorBatchResponse$Outbound,
  z.ZodTypeDef,
  CreateCollaboratorBatchResponse
> = z.object({
  bulkCollaboratorBatch: shared.BulkCollaboratorBatch$outboundSchema.optional(),
  contentType: z.string(),
  statusCode: z.number().int(),
  rawResponse: z.instanceof(Response).transform(() => {
    throw new Error("Response cannot be serialized");
  }),
}).transform((v) => {
  return remap$(v, {
    bulkCollaboratorBatch: "BulkCollaboratorBatch",
    contentType: "ContentType",
    statusCode: "StatusCode",
    rawResponse: "RawResponse",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateCollaboratorBatchResponse$ {
  /** @deprecated use `CreateCollaboratorBatchResponse$inboundSchema` instead. */
  export const inboundSchema = CreateCollaboratorBatchResponse$inboundSchema;
  /** @deprecated use `CreateCollaboratorBatchResponse$outboundSchema` instead. */
  export const outboundSchema = CreateCollaboratorBatchResponse$outboundSchema;
  /** @deprecated use `CreateCollaboratorBatchResponse$Outbound` instead. */
  export type Outbound = CreateCollaboratorBatchResponse$Outbound;
}
