/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14,
  EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14$inboundSchema,
  EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14$Outbound,
  EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14$outboundSchema,
} from "./eighthundredandsixtyfivethousandninehundredandsixtyninebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14.js";
import {
  UserRoles,
  UserRoles$inboundSchema,
  UserRoles$Outbound,
  UserRoles$outboundSchema,
} from "./userroles.js";

export const CalculationType = {
  Balances: "Balances",
  Submissions: "Submissions",
} as const;
export type CalculationType = ClosedEnum<typeof CalculationType>;

export const BulkCalculation1099ItemStatus = {
  Open: "Open",
  Pending: "Pending",
  Processing: "Processing",
  Complete: "Complete",
  Failed: "Failed",
} as const;
export type BulkCalculation1099ItemStatus = ClosedEnum<
  typeof BulkCalculation1099ItemStatus
>;

export type BulkCalculation1099Item = {
  bulkCalculation1099BatchId: string;
  bulkCalculation1099ItemId: string;
  calculationType: CalculationType;
  clientId: string;
  createdAt: string;
  eventActors: { [k: string]: string };
  labels: { [k: string]: string };
  metadata?:
    | EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14
    | null
    | undefined;
  status: BulkCalculation1099ItemStatus;
  updatedAt: string;
  userRoles: UserRoles;
  year: number;
};

/** @internal */
export const CalculationType$inboundSchema: z.ZodNativeEnum<
  typeof CalculationType
> = z.nativeEnum(CalculationType);

/** @internal */
export const CalculationType$outboundSchema: z.ZodNativeEnum<
  typeof CalculationType
> = CalculationType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CalculationType$ {
  /** @deprecated use `CalculationType$inboundSchema` instead. */
  export const inboundSchema = CalculationType$inboundSchema;
  /** @deprecated use `CalculationType$outboundSchema` instead. */
  export const outboundSchema = CalculationType$outboundSchema;
}

/** @internal */
export const BulkCalculation1099ItemStatus$inboundSchema: z.ZodNativeEnum<
  typeof BulkCalculation1099ItemStatus
> = z.nativeEnum(BulkCalculation1099ItemStatus);

/** @internal */
export const BulkCalculation1099ItemStatus$outboundSchema: z.ZodNativeEnum<
  typeof BulkCalculation1099ItemStatus
> = BulkCalculation1099ItemStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkCalculation1099ItemStatus$ {
  /** @deprecated use `BulkCalculation1099ItemStatus$inboundSchema` instead. */
  export const inboundSchema = BulkCalculation1099ItemStatus$inboundSchema;
  /** @deprecated use `BulkCalculation1099ItemStatus$outboundSchema` instead. */
  export const outboundSchema = BulkCalculation1099ItemStatus$outboundSchema;
}

/** @internal */
export const BulkCalculation1099Item$inboundSchema: z.ZodType<
  BulkCalculation1099Item,
  z.ZodTypeDef,
  unknown
> = z.object({
  bulkCalculation1099BatchId: z.string(),
  bulkCalculation1099ItemId: z.string(),
  calculationType: CalculationType$inboundSchema,
  clientId: z.string(),
  createdAt: z.string(),
  eventActors: z.record(z.string()),
  labels: z.record(z.string()),
  metadata: z.nullable(
    EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14$inboundSchema,
  ).optional(),
  status: BulkCalculation1099ItemStatus$inboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$inboundSchema,
  year: z.number(),
});

/** @internal */
export type BulkCalculation1099Item$Outbound = {
  bulkCalculation1099BatchId: string;
  bulkCalculation1099ItemId: string;
  calculationType: string;
  clientId: string;
  createdAt: string;
  eventActors: { [k: string]: string };
  labels: { [k: string]: string };
  metadata?:
    | EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14$Outbound
    | null
    | undefined;
  status: string;
  updatedAt: string;
  userRoles: UserRoles$Outbound;
  year: number;
};

/** @internal */
export const BulkCalculation1099Item$outboundSchema: z.ZodType<
  BulkCalculation1099Item$Outbound,
  z.ZodTypeDef,
  BulkCalculation1099Item
> = z.object({
  bulkCalculation1099BatchId: z.string(),
  bulkCalculation1099ItemId: z.string(),
  calculationType: CalculationType$outboundSchema,
  clientId: z.string(),
  createdAt: z.string(),
  eventActors: z.record(z.string()),
  labels: z.record(z.string()),
  metadata: z.nullable(
    EightHundredAndSixtyFiveThousandNineHundredAndSixtyNinebc2d9a3cb12c3263d4f941da6e1c7783024804b469db4a6eab9bc12f14$outboundSchema,
  ).optional(),
  status: BulkCalculation1099ItemStatus$outboundSchema,
  updatedAt: z.string(),
  userRoles: UserRoles$outboundSchema,
  year: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BulkCalculation1099Item$ {
  /** @deprecated use `BulkCalculation1099Item$inboundSchema` instead. */
  export const inboundSchema = BulkCalculation1099Item$inboundSchema;
  /** @deprecated use `BulkCalculation1099Item$outboundSchema` instead. */
  export const outboundSchema = BulkCalculation1099Item$outboundSchema;
  /** @deprecated use `BulkCalculation1099Item$Outbound` instead. */
  export type Outbound = BulkCalculation1099Item$Outbound;
}

export function bulkCalculation1099ItemToJSON(
  bulkCalculation1099Item: BulkCalculation1099Item,
): string {
  return JSON.stringify(
    BulkCalculation1099Item$outboundSchema.parse(bulkCalculation1099Item),
  );
}

export function bulkCalculation1099ItemFromJSON(
  jsonString: string,
): SafeParseResult<BulkCalculation1099Item, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BulkCalculation1099Item$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BulkCalculation1099Item' from JSON`,
  );
}
