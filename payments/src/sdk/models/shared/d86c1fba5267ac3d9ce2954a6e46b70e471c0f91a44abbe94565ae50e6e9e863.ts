/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type D86c1fba5267ac3d9ce2954a6e46b70e471c0f91a44abbe94565ae50e6e9e863 = {
    customerId?: string | null | undefined;
    expenseAccountId?: string | null | undefined;
    itemId?: string | null | undefined;
    vendorId?: string | null | undefined;
};

/** @internal */
export namespace D86c1fba5267ac3d9ce2954a6e46b70e471c0f91a44abbe94565ae50e6e9e863$ {
    export type Inbound = {
        customerId?: string | null | undefined;
        expenseAccountId?: string | null | undefined;
        itemId?: string | null | undefined;
        vendorId?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        D86c1fba5267ac3d9ce2954a6e46b70e471c0f91a44abbe94565ae50e6e9e863,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            customerId: z.string().nullable().optional(),
            expenseAccountId: z.string().nullable().optional(),
            itemId: z.string().nullable().optional(),
            vendorId: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.customerId === undefined ? null : { customerId: v.customerId }),
                ...(v.expenseAccountId === undefined
                    ? null
                    : { expenseAccountId: v.expenseAccountId }),
                ...(v.itemId === undefined ? null : { itemId: v.itemId }),
                ...(v.vendorId === undefined ? null : { vendorId: v.vendorId }),
            };
        });

    export type Outbound = {
        customerId?: string | null | undefined;
        expenseAccountId?: string | null | undefined;
        itemId?: string | null | undefined;
        vendorId?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        D86c1fba5267ac3d9ce2954a6e46b70e471c0f91a44abbe94565ae50e6e9e863
    > = z
        .object({
            customerId: z.string().nullable().optional(),
            expenseAccountId: z.string().nullable().optional(),
            itemId: z.string().nullable().optional(),
            vendorId: z.string().nullable().optional(),
        })
        .transform((v) => {
            return {
                ...(v.customerId === undefined ? null : { customerId: v.customerId }),
                ...(v.expenseAccountId === undefined
                    ? null
                    : { expenseAccountId: v.expenseAccountId }),
                ...(v.itemId === undefined ? null : { itemId: v.itemId }),
                ...(v.vendorId === undefined ? null : { vendorId: v.vendorId }),
            };
        });
}
