/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKHooks } from "../hooks";
import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { AccountAndBankingOperations } from "./accountandbankingoperations";
import { ActivityAndUsageTracking } from "./activityandusagetracking";
import { AuthorizationAndPermissions } from "./authorizationandpermissions";
import { Deprecated } from "./deprecated";
import { OrganizationAccountManagement } from "./organizationaccountmanagement";
import { SessionAndAuthentication } from "./sessionandauthentication";
import { SubscriptionAndGrantsManagement } from "./subscriptionandgrantsmanagement";
import { SubscriptionManagement } from "./subscriptionmanagement";
import { UserAndMemberManagement } from "./userandmembermanagement";

export class Users extends ClientSDK {
    private readonly options$: SDKOptions & { hooks?: SDKHooks };

    constructor(options: SDKOptions = {}) {
        const opt = options as unknown;
        let hooks: SDKHooks;
        if (
            typeof opt === "object" &&
            opt != null &&
            "hooks" in opt &&
            opt.hooks instanceof SDKHooks
        ) {
            hooks = opt.hooks;
        } else {
            hooks = new SDKHooks();
        }

        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
            hooks,
        });

        this.options$ = { ...options, hooks };
        void this.options$;
    }

    private _userAndMemberManagement?: UserAndMemberManagement;
    get userAndMemberManagement() {
        return (this._userAndMemberManagement ??= new UserAndMemberManagement(this.options$));
    }

    private _accountAndBankingOperations?: AccountAndBankingOperations;
    get accountAndBankingOperations() {
        return (this._accountAndBankingOperations ??= new AccountAndBankingOperations(
            this.options$
        ));
    }

    private _activityAndUsageTracking?: ActivityAndUsageTracking;
    get activityAndUsageTracking() {
        return (this._activityAndUsageTracking ??= new ActivityAndUsageTracking(this.options$));
    }

    private _sessionAndAuthentication?: SessionAndAuthentication;
    get sessionAndAuthentication() {
        return (this._sessionAndAuthentication ??= new SessionAndAuthentication(this.options$));
    }

    private _authorizationAndPermissions?: AuthorizationAndPermissions;
    get authorizationAndPermissions() {
        return (this._authorizationAndPermissions ??= new AuthorizationAndPermissions(
            this.options$
        ));
    }

    private _organizationAccountManagement?: OrganizationAccountManagement;
    get organizationAccountManagement() {
        return (this._organizationAccountManagement ??= new OrganizationAccountManagement(
            this.options$
        ));
    }

    private _subscriptionAndGrantsManagement?: SubscriptionAndGrantsManagement;
    get subscriptionAndGrantsManagement() {
        return (this._subscriptionAndGrantsManagement ??= new SubscriptionAndGrantsManagement(
            this.options$
        ));
    }

    private _deprecated?: Deprecated;
    get deprecated() {
        return (this._deprecated ??= new Deprecated(this.options$));
    }

    private _subscriptionManagement?: SubscriptionManagement;
    get subscriptionManagement() {
        return (this._subscriptionManagement ??= new SubscriptionManagement(this.options$));
    }
}
