/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ExternalIdsBulkImport = {
  bulkItemMergeKey?: string | null | undefined;
};

/** @internal */
export const ExternalIdsBulkImport$inboundSchema: z.ZodType<
  ExternalIdsBulkImport,
  z.ZodTypeDef,
  unknown
> = z.object({
  bulkItemMergeKey: z.nullable(z.string()).optional(),
});

/** @internal */
export type ExternalIdsBulkImport$Outbound = {
  bulkItemMergeKey?: string | null | undefined;
};

/** @internal */
export const ExternalIdsBulkImport$outboundSchema: z.ZodType<
  ExternalIdsBulkImport$Outbound,
  z.ZodTypeDef,
  ExternalIdsBulkImport
> = z.object({
  bulkItemMergeKey: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ExternalIdsBulkImport$ {
  /** @deprecated use `ExternalIdsBulkImport$inboundSchema` instead. */
  export const inboundSchema = ExternalIdsBulkImport$inboundSchema;
  /** @deprecated use `ExternalIdsBulkImport$outboundSchema` instead. */
  export const outboundSchema = ExternalIdsBulkImport$outboundSchema;
  /** @deprecated use `ExternalIdsBulkImport$Outbound` instead. */
  export type Outbound = ExternalIdsBulkImport$Outbound;
}

export function externalIdsBulkImportToJSON(
  externalIdsBulkImport: ExternalIdsBulkImport,
): string {
  return JSON.stringify(
    ExternalIdsBulkImport$outboundSchema.parse(externalIdsBulkImport),
  );
}

export function externalIdsBulkImportFromJSON(
  jsonString: string,
): SafeParseResult<ExternalIdsBulkImport, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ExternalIdsBulkImport$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ExternalIdsBulkImport' from JSON`,
  );
}
