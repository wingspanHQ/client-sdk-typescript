/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4,
  Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4$inboundSchema,
  Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4$Outbound,
  Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4$outboundSchema,
} from "./fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4.js";
import {
  Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9,
  Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9$inboundSchema,
  Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9$Outbound,
  Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9$outboundSchema,
} from "./fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9.js";

export const SourceType = {
  Account: "Account",
  Card: "Card",
  InternalAccount: "InternalAccount",
} as const;
export type SourceType = ClosedEnum<typeof SourceType>;

export const InvoicePaymentStatus = {
  Created: "Created",
  Failed: "Failed",
  Pending: "Pending",
  Sent: "Sent",
  Cleared: "Cleared",
  Returned: "Returned",
} as const;
export type InvoicePaymentStatus = ClosedEnum<typeof InvoicePaymentStatus>;

export const StatusReason = {
  InsufficientFunds: "InsufficientFunds",
  AccountNotFound: "AccountNotFound",
  Unauthorized: "Unauthorized",
  GenericBankError: "GenericBankError",
  GenericCardError: "GenericCardError",
  CardCurrencyNotSupported: "CardCurrencyNotSupported",
  CardExpired: "CardExpired",
  CardInputInvalid: "CardInputInvalid",
} as const;
export type StatusReason = ClosedEnum<typeof StatusReason>;

export type InvoicePayment = {
  amount: number;
  createdAt: string;
  events: Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9;
  labels: { [k: string]: string };
  paymentId: string;
  sourceId: string;
  sourceMetadata:
    Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4;
  sourceType: SourceType;
  status: InvoicePaymentStatus;
  statusReason?: StatusReason | null | undefined;
  updatedAt: string;
};

/** @internal */
export const SourceType$inboundSchema: z.ZodNativeEnum<typeof SourceType> = z
  .nativeEnum(SourceType);

/** @internal */
export const SourceType$outboundSchema: z.ZodNativeEnum<typeof SourceType> =
  SourceType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SourceType$ {
  /** @deprecated use `SourceType$inboundSchema` instead. */
  export const inboundSchema = SourceType$inboundSchema;
  /** @deprecated use `SourceType$outboundSchema` instead. */
  export const outboundSchema = SourceType$outboundSchema;
}

/** @internal */
export const InvoicePaymentStatus$inboundSchema: z.ZodNativeEnum<
  typeof InvoicePaymentStatus
> = z.nativeEnum(InvoicePaymentStatus);

/** @internal */
export const InvoicePaymentStatus$outboundSchema: z.ZodNativeEnum<
  typeof InvoicePaymentStatus
> = InvoicePaymentStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoicePaymentStatus$ {
  /** @deprecated use `InvoicePaymentStatus$inboundSchema` instead. */
  export const inboundSchema = InvoicePaymentStatus$inboundSchema;
  /** @deprecated use `InvoicePaymentStatus$outboundSchema` instead. */
  export const outboundSchema = InvoicePaymentStatus$outboundSchema;
}

/** @internal */
export const StatusReason$inboundSchema: z.ZodNativeEnum<typeof StatusReason> =
  z.nativeEnum(StatusReason);

/** @internal */
export const StatusReason$outboundSchema: z.ZodNativeEnum<typeof StatusReason> =
  StatusReason$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StatusReason$ {
  /** @deprecated use `StatusReason$inboundSchema` instead. */
  export const inboundSchema = StatusReason$inboundSchema;
  /** @deprecated use `StatusReason$outboundSchema` instead. */
  export const outboundSchema = StatusReason$outboundSchema;
}

/** @internal */
export const InvoicePayment$inboundSchema: z.ZodType<
  InvoicePayment,
  z.ZodTypeDef,
  unknown
> = z.object({
  amount: z.number(),
  createdAt: z.string(),
  events:
    Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9$inboundSchema,
  labels: z.record(z.string()),
  paymentId: z.string(),
  sourceId: z.string(),
  sourceMetadata:
    Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4$inboundSchema,
  sourceType: SourceType$inboundSchema,
  status: InvoicePaymentStatus$inboundSchema,
  statusReason: z.nullable(StatusReason$inboundSchema).optional(),
  updatedAt: z.string(),
});

/** @internal */
export type InvoicePayment$Outbound = {
  amount: number;
  createdAt: string;
  events:
    Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9$Outbound;
  labels: { [k: string]: string };
  paymentId: string;
  sourceId: string;
  sourceMetadata:
    Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4$Outbound;
  sourceType: string;
  status: string;
  statusReason?: string | null | undefined;
  updatedAt: string;
};

/** @internal */
export const InvoicePayment$outboundSchema: z.ZodType<
  InvoicePayment$Outbound,
  z.ZodTypeDef,
  InvoicePayment
> = z.object({
  amount: z.number(),
  createdAt: z.string(),
  events:
    Fdde61b278ad2b0bef3e1f411d3749ff7bc345ae633a85eb25e5990d251fb3a9$outboundSchema,
  labels: z.record(z.string()),
  paymentId: z.string(),
  sourceId: z.string(),
  sourceMetadata:
    Fa804b4efa97e487035ead1834462b69564f5e4ebbbd376106a1847d1c1aa4f4$outboundSchema,
  sourceType: SourceType$outboundSchema,
  status: InvoicePaymentStatus$outboundSchema,
  statusReason: z.nullable(StatusReason$outboundSchema).optional(),
  updatedAt: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InvoicePayment$ {
  /** @deprecated use `InvoicePayment$inboundSchema` instead. */
  export const inboundSchema = InvoicePayment$inboundSchema;
  /** @deprecated use `InvoicePayment$outboundSchema` instead. */
  export const outboundSchema = InvoicePayment$outboundSchema;
  /** @deprecated use `InvoicePayment$Outbound` instead. */
  export type Outbound = InvoicePayment$Outbound;
}

export function invoicePaymentToJSON(invoicePayment: InvoicePayment): string {
  return JSON.stringify(InvoicePayment$outboundSchema.parse(invoicePayment));
}

export function invoicePaymentFromJSON(
  jsonString: string,
): SafeParseResult<InvoicePayment, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => InvoicePayment$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'InvoicePayment' from JSON`,
  );
}
