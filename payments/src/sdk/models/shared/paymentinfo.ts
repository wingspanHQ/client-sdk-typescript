/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum MeansType {
    Card = "Card",
    Account = "Account",
    InternalAccount = "InternalAccount",
}

export type PaymentInfo = {
    brandImageUrl?: string | null | undefined;
    cardBrand?: string | null | undefined;
    meansDescription?: string | null | undefined;
    meansLast4?: string | null | undefined;
    meansType: MeansType;
};

/** @internal */
export const MeansType$ = z.nativeEnum(MeansType);

/** @internal */
export namespace PaymentInfo$ {
    export type Inbound = {
        brandImageUrl?: string | null | undefined;
        cardBrand?: string | null | undefined;
        meansDescription?: string | null | undefined;
        meansLast4?: string | null | undefined;
        meansType: MeansType;
    };

    export const inboundSchema: z.ZodType<PaymentInfo, z.ZodTypeDef, Inbound> = z
        .object({
            brandImageUrl: z.nullable(z.string()).optional(),
            cardBrand: z.nullable(z.string()).optional(),
            meansDescription: z.nullable(z.string()).optional(),
            meansLast4: z.nullable(z.string()).optional(),
            meansType: MeansType$,
        })
        .transform((v) => {
            return {
                ...(v.brandImageUrl === undefined ? null : { brandImageUrl: v.brandImageUrl }),
                ...(v.cardBrand === undefined ? null : { cardBrand: v.cardBrand }),
                ...(v.meansDescription === undefined
                    ? null
                    : { meansDescription: v.meansDescription }),
                ...(v.meansLast4 === undefined ? null : { meansLast4: v.meansLast4 }),
                meansType: v.meansType,
            };
        });

    export type Outbound = {
        brandImageUrl?: string | null | undefined;
        cardBrand?: string | null | undefined;
        meansDescription?: string | null | undefined;
        meansLast4?: string | null | undefined;
        meansType: MeansType;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PaymentInfo> = z
        .object({
            brandImageUrl: z.nullable(z.string()).optional(),
            cardBrand: z.nullable(z.string()).optional(),
            meansDescription: z.nullable(z.string()).optional(),
            meansLast4: z.nullable(z.string()).optional(),
            meansType: MeansType$,
        })
        .transform((v) => {
            return {
                ...(v.brandImageUrl === undefined ? null : { brandImageUrl: v.brandImageUrl }),
                ...(v.cardBrand === undefined ? null : { cardBrand: v.cardBrand }),
                ...(v.meansDescription === undefined
                    ? null
                    : { meansDescription: v.meansDescription }),
                ...(v.meansLast4 === undefined ? null : { meansLast4: v.meansLast4 }),
                meansType: v.meansType,
            };
        });
}
