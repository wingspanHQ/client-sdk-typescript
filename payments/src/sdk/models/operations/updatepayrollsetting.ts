/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as shared from "../../../sdk/models/shared";
import { z } from "zod";

export type UpdatePayrollSettingRequest = {
    payrollSettingsUpdate?: shared.PayrollSettingsUpdate | undefined;
    /**
     * Unique identifier
     */
    id: string;
};

export type UpdatePayrollSettingResponse = {
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * The payroll settings for a member
     */
    payrollSettings?: shared.PayrollSettings | undefined;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export namespace UpdatePayrollSettingRequest$ {
    export type Inbound = {
        PayrollSettingsUpdate?: shared.PayrollSettingsUpdate$.Inbound | undefined;
        id: string;
    };

    export const inboundSchema: z.ZodType<UpdatePayrollSettingRequest, z.ZodTypeDef, Inbound> = z
        .object({
            PayrollSettingsUpdate: shared.PayrollSettingsUpdate$.inboundSchema.optional(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.PayrollSettingsUpdate === undefined
                    ? null
                    : { payrollSettingsUpdate: v.PayrollSettingsUpdate }),
                id: v.id,
            };
        });

    export type Outbound = {
        PayrollSettingsUpdate?: shared.PayrollSettingsUpdate$.Outbound | undefined;
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdatePayrollSettingRequest> = z
        .object({
            payrollSettingsUpdate: shared.PayrollSettingsUpdate$.outboundSchema.optional(),
            id: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.payrollSettingsUpdate === undefined
                    ? null
                    : { PayrollSettingsUpdate: v.payrollSettingsUpdate }),
                id: v.id,
            };
        });
}

/** @internal */
export namespace UpdatePayrollSettingResponse$ {
    export type Inbound = {
        ContentType: string;
        PayrollSettings?: shared.PayrollSettings$.Inbound | undefined;
        StatusCode: number;
        RawResponse: Response;
    };

    export const inboundSchema: z.ZodType<UpdatePayrollSettingResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ContentType: z.string(),
            PayrollSettings: shared.PayrollSettings$.inboundSchema.optional(),
            StatusCode: z.number().int(),
            RawResponse: z.instanceof(Response),
        })
        .transform((v) => {
            return {
                contentType: v.ContentType,
                ...(v.PayrollSettings === undefined
                    ? null
                    : { payrollSettings: v.PayrollSettings }),
                statusCode: v.StatusCode,
                rawResponse: v.RawResponse,
            };
        });

    export type Outbound = {
        ContentType: string;
        PayrollSettings?: shared.PayrollSettings$.Outbound | undefined;
        StatusCode: number;
        RawResponse: never;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdatePayrollSettingResponse> = z
        .object({
            contentType: z.string(),
            payrollSettings: shared.PayrollSettings$.outboundSchema.optional(),
            statusCode: z.number().int(),
            rawResponse: z.instanceof(Response).transform(() => {
                throw new Error("Response cannot be serialized");
            }),
        })
        .transform((v) => {
            return {
                ContentType: v.contentType,
                ...(v.payrollSettings === undefined
                    ? null
                    : { PayrollSettings: v.payrollSettings }),
                StatusCode: v.statusCode,
                RawResponse: v.rawResponse,
            };
        });
}
