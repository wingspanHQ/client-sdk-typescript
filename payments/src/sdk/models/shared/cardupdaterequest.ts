/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CardUpdateRequestStatus = {
  Active: "Active",
  Inactive: "Inactive",
  Stolen: "Stolen",
  Lost: "Lost",
  Frozen: "Frozen",
  ClosedByCustomer: "ClosedByCustomer",
} as const;
export type CardUpdateRequestStatus = ClosedEnum<
  typeof CardUpdateRequestStatus
>;

export type CardUpdateRequest = {
  status: CardUpdateRequestStatus;
};

/** @internal */
export const CardUpdateRequestStatus$inboundSchema: z.ZodNativeEnum<
  typeof CardUpdateRequestStatus
> = z.nativeEnum(CardUpdateRequestStatus);

/** @internal */
export const CardUpdateRequestStatus$outboundSchema: z.ZodNativeEnum<
  typeof CardUpdateRequestStatus
> = CardUpdateRequestStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardUpdateRequestStatus$ {
  /** @deprecated use `CardUpdateRequestStatus$inboundSchema` instead. */
  export const inboundSchema = CardUpdateRequestStatus$inboundSchema;
  /** @deprecated use `CardUpdateRequestStatus$outboundSchema` instead. */
  export const outboundSchema = CardUpdateRequestStatus$outboundSchema;
}

/** @internal */
export const CardUpdateRequest$inboundSchema: z.ZodType<
  CardUpdateRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: CardUpdateRequestStatus$inboundSchema,
});

/** @internal */
export type CardUpdateRequest$Outbound = {
  status: string;
};

/** @internal */
export const CardUpdateRequest$outboundSchema: z.ZodType<
  CardUpdateRequest$Outbound,
  z.ZodTypeDef,
  CardUpdateRequest
> = z.object({
  status: CardUpdateRequestStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardUpdateRequest$ {
  /** @deprecated use `CardUpdateRequest$inboundSchema` instead. */
  export const inboundSchema = CardUpdateRequest$inboundSchema;
  /** @deprecated use `CardUpdateRequest$outboundSchema` instead. */
  export const outboundSchema = CardUpdateRequest$outboundSchema;
  /** @deprecated use `CardUpdateRequest$Outbound` instead. */
  export type Outbound = CardUpdateRequest$Outbound;
}

export function cardUpdateRequestToJSON(
  cardUpdateRequest: CardUpdateRequest,
): string {
  return JSON.stringify(
    CardUpdateRequest$outboundSchema.parse(cardUpdateRequest),
  );
}

export function cardUpdateRequestFromJSON(
  jsonString: string,
): SafeParseResult<CardUpdateRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardUpdateRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardUpdateRequest' from JSON`,
  );
}
