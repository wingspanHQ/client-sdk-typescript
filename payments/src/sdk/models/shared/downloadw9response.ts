/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DownloadW9Response = {};

/** @internal */
export const DownloadW9Response$inboundSchema: z.ZodType<
  DownloadW9Response,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DownloadW9Response$Outbound = {};

/** @internal */
export const DownloadW9Response$outboundSchema: z.ZodType<
  DownloadW9Response$Outbound,
  z.ZodTypeDef,
  DownloadW9Response
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DownloadW9Response$ {
  /** @deprecated use `DownloadW9Response$inboundSchema` instead. */
  export const inboundSchema = DownloadW9Response$inboundSchema;
  /** @deprecated use `DownloadW9Response$outboundSchema` instead. */
  export const outboundSchema = DownloadW9Response$outboundSchema;
  /** @deprecated use `DownloadW9Response$Outbound` instead. */
  export type Outbound = DownloadW9Response$Outbound;
}

export function downloadW9ResponseToJSON(
  downloadW9Response: DownloadW9Response,
): string {
  return JSON.stringify(
    DownloadW9Response$outboundSchema.parse(downloadW9Response),
  );
}

export function downloadW9ResponseFromJSON(
  jsonString: string,
): SafeParseResult<DownloadW9Response, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DownloadW9Response$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DownloadW9Response' from JSON`,
  );
}
