/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type MemberFileSummaryResponse = {
    fileId: string;
    filename: string;
    url: string;
};

/** @internal */
export namespace MemberFileSummaryResponse$ {
    export type Inbound = {
        fileId: string;
        filename: string;
        url: string;
    };

    export const inboundSchema: z.ZodType<MemberFileSummaryResponse, z.ZodTypeDef, Inbound> = z
        .object({
            fileId: z.string(),
            filename: z.string(),
            url: z.string(),
        })
        .transform((v) => {
            return {
                fileId: v.fileId,
                filename: v.filename,
                url: v.url,
            };
        });

    export type Outbound = {
        fileId: string;
        filename: string;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MemberFileSummaryResponse> = z
        .object({
            fileId: z.string(),
            filename: z.string(),
            url: z.string(),
        })
        .transform((v) => {
            return {
                fileId: v.fileId,
                filename: v.filename,
                url: v.url,
            };
        });
}
