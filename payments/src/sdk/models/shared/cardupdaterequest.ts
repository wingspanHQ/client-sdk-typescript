/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export enum CardUpdateRequestStatus {
    Active = "Active",
    Inactive = "Inactive",
    Stolen = "Stolen",
    Lost = "Lost",
    Frozen = "Frozen",
    ClosedByCustomer = "ClosedByCustomer",
}

export type CardUpdateRequest = {
    status: CardUpdateRequestStatus;
};

/** @internal */
export const CardUpdateRequestStatus$ = z.nativeEnum(CardUpdateRequestStatus);

/** @internal */
export namespace CardUpdateRequest$ {
    export type Inbound = {
        status: CardUpdateRequestStatus;
    };

    export const inboundSchema: z.ZodType<CardUpdateRequest, z.ZodTypeDef, Inbound> = z
        .object({
            status: CardUpdateRequestStatus$,
        })
        .transform((v) => {
            return {
                status: v.status,
            };
        });

    export type Outbound = {
        status: CardUpdateRequestStatus;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CardUpdateRequest> = z
        .object({
            status: CardUpdateRequestStatus$,
        })
        .transform((v) => {
            return {
                status: v.status,
            };
        });
}
