/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    RedactedTaxFormW9Info,
    RedactedTaxFormW9Info$inboundSchema,
    RedactedTaxFormW9Info$Outbound,
    RedactedTaxFormW9Info$outboundSchema,
} from "./redactedtaxformw9info.js";
import * as z from "zod";

export const TaxFormRedactedSubmissionDataDeliveryMethod = {
    Electronic: "Electronic",
    Mail: "Mail",
} as const;
export type TaxFormRedactedSubmissionDataDeliveryMethod = ClosedEnum<
    typeof TaxFormRedactedSubmissionDataDeliveryMethod
>;

export type TaxFormRedactedSubmissionData = {
    adjustments?: number | null | undefined;
    deliveryMethod?: TaxFormRedactedSubmissionDataDeliveryMethod | null | undefined;
    filingStateCode?: string | null | undefined;
    paymentProcessingFees?: number | null | undefined;
    platformIncome?: number | null | undefined;
    totalAmount?: number | null | undefined;
    w9Info?: RedactedTaxFormW9Info | null | undefined;
};

/** @internal */
export const TaxFormRedactedSubmissionDataDeliveryMethod$inboundSchema: z.ZodNativeEnum<
    typeof TaxFormRedactedSubmissionDataDeliveryMethod
> = z.nativeEnum(TaxFormRedactedSubmissionDataDeliveryMethod);

/** @internal */
export const TaxFormRedactedSubmissionDataDeliveryMethod$outboundSchema: z.ZodNativeEnum<
    typeof TaxFormRedactedSubmissionDataDeliveryMethod
> = TaxFormRedactedSubmissionDataDeliveryMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxFormRedactedSubmissionDataDeliveryMethod$ {
    /** @deprecated use `TaxFormRedactedSubmissionDataDeliveryMethod$inboundSchema` instead. */
    export const inboundSchema = TaxFormRedactedSubmissionDataDeliveryMethod$inboundSchema;
    /** @deprecated use `TaxFormRedactedSubmissionDataDeliveryMethod$outboundSchema` instead. */
    export const outboundSchema = TaxFormRedactedSubmissionDataDeliveryMethod$outboundSchema;
}

/** @internal */
export const TaxFormRedactedSubmissionData$inboundSchema: z.ZodType<
    TaxFormRedactedSubmissionData,
    z.ZodTypeDef,
    unknown
> = z.object({
    adjustments: z.nullable(z.number()).optional(),
    deliveryMethod: z
        .nullable(TaxFormRedactedSubmissionDataDeliveryMethod$inboundSchema)
        .optional(),
    filingStateCode: z.nullable(z.string()).optional(),
    paymentProcessingFees: z.nullable(z.number()).optional(),
    platformIncome: z.nullable(z.number()).optional(),
    totalAmount: z.nullable(z.number()).optional(),
    w9Info: z.nullable(RedactedTaxFormW9Info$inboundSchema).optional(),
});

/** @internal */
export type TaxFormRedactedSubmissionData$Outbound = {
    adjustments?: number | null | undefined;
    deliveryMethod?: string | null | undefined;
    filingStateCode?: string | null | undefined;
    paymentProcessingFees?: number | null | undefined;
    platformIncome?: number | null | undefined;
    totalAmount?: number | null | undefined;
    w9Info?: RedactedTaxFormW9Info$Outbound | null | undefined;
};

/** @internal */
export const TaxFormRedactedSubmissionData$outboundSchema: z.ZodType<
    TaxFormRedactedSubmissionData$Outbound,
    z.ZodTypeDef,
    TaxFormRedactedSubmissionData
> = z.object({
    adjustments: z.nullable(z.number()).optional(),
    deliveryMethod: z
        .nullable(TaxFormRedactedSubmissionDataDeliveryMethod$outboundSchema)
        .optional(),
    filingStateCode: z.nullable(z.string()).optional(),
    paymentProcessingFees: z.nullable(z.number()).optional(),
    platformIncome: z.nullable(z.number()).optional(),
    totalAmount: z.nullable(z.number()).optional(),
    w9Info: z.nullable(RedactedTaxFormW9Info$outboundSchema).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TaxFormRedactedSubmissionData$ {
    /** @deprecated use `TaxFormRedactedSubmissionData$inboundSchema` instead. */
    export const inboundSchema = TaxFormRedactedSubmissionData$inboundSchema;
    /** @deprecated use `TaxFormRedactedSubmissionData$outboundSchema` instead. */
    export const outboundSchema = TaxFormRedactedSubmissionData$outboundSchema;
    /** @deprecated use `TaxFormRedactedSubmissionData$Outbound` instead. */
    export type Outbound = TaxFormRedactedSubmissionData$Outbound;
}
