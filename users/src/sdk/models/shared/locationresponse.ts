/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type LocationResponse = {
    countryName: string;
    isoCode: string;
};

/** @internal */
export namespace LocationResponse$ {
    export type Inbound = {
        countryName: string;
        isoCode: string;
    };

    export const inboundSchema: z.ZodType<LocationResponse, z.ZodTypeDef, Inbound> = z
        .object({
            countryName: z.string(),
            isoCode: z.string(),
        })
        .transform((v) => {
            return {
                countryName: v.countryName,
                isoCode: v.isoCode,
            };
        });

    export type Outbound = {
        countryName: string;
        isoCode: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LocationResponse> = z
        .object({
            countryName: z.string(),
            isoCode: z.string(),
        })
        .transform((v) => {
            return {
                countryName: v.countryName,
                isoCode: v.isoCode,
            };
        });
}
