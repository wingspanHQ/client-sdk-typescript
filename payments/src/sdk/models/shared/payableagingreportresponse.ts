/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import {
  RedactedMember,
  RedactedMember$inboundSchema,
  RedactedMember$Outbound,
  RedactedMember$outboundSchema,
} from "./redactedmember.js";

export type PayableAgingReportResponseLabels = {};

export const PayableAgingReportResponseStatus = {
  Draft: "Draft",
  Open: "Open",
  Overdue: "Overdue",
  Cancelled: "Cancelled",
  Pending: "Pending",
  PaymentInTransit: "PaymentInTransit",
  Paid: "Paid",
} as const;
export type PayableAgingReportResponseStatus = ClosedEnum<
  typeof PayableAgingReportResponseStatus
>;

export type PayableAgingReportResponse = {
  ageGroup: string;
  amount: number;
  approverName?: string | null | undefined;
  createdAt: string;
  currency: string;
  dueDate: string;
  invoiceId: string;
  invoiceNumber: string;
  invoicePdf: string;
  labels?: PayableAgingReportResponseLabels | null | undefined;
  member: RedactedMember;
  memberClientId: string;
  memberExternalId?: number | null | undefined;
  memberId: string;
  notes?: string | null | undefined;
  paidDate?: string | null | undefined;
  payoutDestination?: string | null | undefined;
  projectName?: string | null | undefined;
  purchaseOrderNumber?: string | null | undefined;
  receiptPdf: string;
  sentDate?: string | null | undefined;
  status: PayableAgingReportResponseStatus;
  updatedAt: string;
};

/** @internal */
export const PayableAgingReportResponseLabels$inboundSchema: z.ZodType<
  PayableAgingReportResponseLabels,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type PayableAgingReportResponseLabels$Outbound = {};

/** @internal */
export const PayableAgingReportResponseLabels$outboundSchema: z.ZodType<
  PayableAgingReportResponseLabels$Outbound,
  z.ZodTypeDef,
  PayableAgingReportResponseLabels
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayableAgingReportResponseLabels$ {
  /** @deprecated use `PayableAgingReportResponseLabels$inboundSchema` instead. */
  export const inboundSchema = PayableAgingReportResponseLabels$inboundSchema;
  /** @deprecated use `PayableAgingReportResponseLabels$outboundSchema` instead. */
  export const outboundSchema = PayableAgingReportResponseLabels$outboundSchema;
  /** @deprecated use `PayableAgingReportResponseLabels$Outbound` instead. */
  export type Outbound = PayableAgingReportResponseLabels$Outbound;
}

/** @internal */
export const PayableAgingReportResponseStatus$inboundSchema: z.ZodNativeEnum<
  typeof PayableAgingReportResponseStatus
> = z.nativeEnum(PayableAgingReportResponseStatus);

/** @internal */
export const PayableAgingReportResponseStatus$outboundSchema: z.ZodNativeEnum<
  typeof PayableAgingReportResponseStatus
> = PayableAgingReportResponseStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayableAgingReportResponseStatus$ {
  /** @deprecated use `PayableAgingReportResponseStatus$inboundSchema` instead. */
  export const inboundSchema = PayableAgingReportResponseStatus$inboundSchema;
  /** @deprecated use `PayableAgingReportResponseStatus$outboundSchema` instead. */
  export const outboundSchema = PayableAgingReportResponseStatus$outboundSchema;
}

/** @internal */
export const PayableAgingReportResponse$inboundSchema: z.ZodType<
  PayableAgingReportResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ageGroup: z.string(),
  amount: z.number(),
  approverName: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  currency: z.string(),
  dueDate: z.string(),
  invoiceId: z.string(),
  invoiceNumber: z.string(),
  invoicePdf: z.string(),
  labels: z.nullable(
    z.lazy(() => PayableAgingReportResponseLabels$inboundSchema),
  ).optional(),
  member: RedactedMember$inboundSchema,
  memberClientId: z.string(),
  memberExternalId: z.nullable(z.number()).optional(),
  memberId: z.string(),
  notes: z.nullable(z.string()).optional(),
  paidDate: z.nullable(z.string()).optional(),
  payoutDestination: z.nullable(z.string()).optional(),
  projectName: z.nullable(z.string()).optional(),
  purchaseOrderNumber: z.nullable(z.string()).optional(),
  receiptPdf: z.string(),
  sentDate: z.nullable(z.string()).optional(),
  status: PayableAgingReportResponseStatus$inboundSchema,
  updatedAt: z.string(),
});

/** @internal */
export type PayableAgingReportResponse$Outbound = {
  ageGroup: string;
  amount: number;
  approverName?: string | null | undefined;
  createdAt: string;
  currency: string;
  dueDate: string;
  invoiceId: string;
  invoiceNumber: string;
  invoicePdf: string;
  labels?: PayableAgingReportResponseLabels$Outbound | null | undefined;
  member: RedactedMember$Outbound;
  memberClientId: string;
  memberExternalId?: number | null | undefined;
  memberId: string;
  notes?: string | null | undefined;
  paidDate?: string | null | undefined;
  payoutDestination?: string | null | undefined;
  projectName?: string | null | undefined;
  purchaseOrderNumber?: string | null | undefined;
  receiptPdf: string;
  sentDate?: string | null | undefined;
  status: string;
  updatedAt: string;
};

/** @internal */
export const PayableAgingReportResponse$outboundSchema: z.ZodType<
  PayableAgingReportResponse$Outbound,
  z.ZodTypeDef,
  PayableAgingReportResponse
> = z.object({
  ageGroup: z.string(),
  amount: z.number(),
  approverName: z.nullable(z.string()).optional(),
  createdAt: z.string(),
  currency: z.string(),
  dueDate: z.string(),
  invoiceId: z.string(),
  invoiceNumber: z.string(),
  invoicePdf: z.string(),
  labels: z.nullable(
    z.lazy(() => PayableAgingReportResponseLabels$outboundSchema),
  ).optional(),
  member: RedactedMember$outboundSchema,
  memberClientId: z.string(),
  memberExternalId: z.nullable(z.number()).optional(),
  memberId: z.string(),
  notes: z.nullable(z.string()).optional(),
  paidDate: z.nullable(z.string()).optional(),
  payoutDestination: z.nullable(z.string()).optional(),
  projectName: z.nullable(z.string()).optional(),
  purchaseOrderNumber: z.nullable(z.string()).optional(),
  receiptPdf: z.string(),
  sentDate: z.nullable(z.string()).optional(),
  status: PayableAgingReportResponseStatus$outboundSchema,
  updatedAt: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PayableAgingReportResponse$ {
  /** @deprecated use `PayableAgingReportResponse$inboundSchema` instead. */
  export const inboundSchema = PayableAgingReportResponse$inboundSchema;
  /** @deprecated use `PayableAgingReportResponse$outboundSchema` instead. */
  export const outboundSchema = PayableAgingReportResponse$outboundSchema;
  /** @deprecated use `PayableAgingReportResponse$Outbound` instead. */
  export type Outbound = PayableAgingReportResponse$Outbound;
}
