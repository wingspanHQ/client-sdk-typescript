/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type RequestCardAuthenticationRequest = {
    cardCodeRequest?: shared.CardCodeRequest | undefined;
    /**
     * Unique identifier
     */
    id: string;
};

export type RequestCardAuthenticationResponse = {
    /**
     * A card code response
     */
    cardCodeResponse?: shared.CardCodeResponse | undefined;
    /**
     * HTTP response content type for this operation
     */
    contentType: string;
    /**
     * HTTP response status code for this operation
     */
    statusCode: number;
    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    rawResponse: Response;
};

/** @internal */
export const RequestCardAuthenticationRequest$inboundSchema: z.ZodType<
    RequestCardAuthenticationRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        CardCodeRequest: shared.CardCodeRequest$inboundSchema.optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            CardCodeRequest: "cardCodeRequest",
        });
    });

/** @internal */
export type RequestCardAuthenticationRequest$Outbound = {
    CardCodeRequest?: shared.CardCodeRequest$Outbound | undefined;
    id: string;
};

/** @internal */
export const RequestCardAuthenticationRequest$outboundSchema: z.ZodType<
    RequestCardAuthenticationRequest$Outbound,
    z.ZodTypeDef,
    RequestCardAuthenticationRequest
> = z
    .object({
        cardCodeRequest: shared.CardCodeRequest$outboundSchema.optional(),
        id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            cardCodeRequest: "CardCodeRequest",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCardAuthenticationRequest$ {
    /** @deprecated use `RequestCardAuthenticationRequest$inboundSchema` instead. */
    export const inboundSchema = RequestCardAuthenticationRequest$inboundSchema;
    /** @deprecated use `RequestCardAuthenticationRequest$outboundSchema` instead. */
    export const outboundSchema = RequestCardAuthenticationRequest$outboundSchema;
    /** @deprecated use `RequestCardAuthenticationRequest$Outbound` instead. */
    export type Outbound = RequestCardAuthenticationRequest$Outbound;
}

/** @internal */
export const RequestCardAuthenticationResponse$inboundSchema: z.ZodType<
    RequestCardAuthenticationResponse,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        CardCodeResponse: shared.CardCodeResponse$inboundSchema.optional(),
        ContentType: z.string(),
        StatusCode: z.number().int(),
        RawResponse: z.instanceof(Response),
    })
    .transform((v) => {
        return remap$(v, {
            CardCodeResponse: "cardCodeResponse",
            ContentType: "contentType",
            StatusCode: "statusCode",
            RawResponse: "rawResponse",
        });
    });

/** @internal */
export type RequestCardAuthenticationResponse$Outbound = {
    CardCodeResponse?: shared.CardCodeResponse$Outbound | undefined;
    ContentType: string;
    StatusCode: number;
    RawResponse: never;
};

/** @internal */
export const RequestCardAuthenticationResponse$outboundSchema: z.ZodType<
    RequestCardAuthenticationResponse$Outbound,
    z.ZodTypeDef,
    RequestCardAuthenticationResponse
> = z
    .object({
        cardCodeResponse: shared.CardCodeResponse$outboundSchema.optional(),
        contentType: z.string(),
        statusCode: z.number().int(),
        rawResponse: z.instanceof(Response).transform(() => {
            throw new Error("Response cannot be serialized");
        }),
    })
    .transform((v) => {
        return remap$(v, {
            cardCodeResponse: "CardCodeResponse",
            contentType: "ContentType",
            statusCode: "StatusCode",
            rawResponse: "RawResponse",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestCardAuthenticationResponse$ {
    /** @deprecated use `RequestCardAuthenticationResponse$inboundSchema` instead. */
    export const inboundSchema = RequestCardAuthenticationResponse$inboundSchema;
    /** @deprecated use `RequestCardAuthenticationResponse$outboundSchema` instead. */
    export const outboundSchema = RequestCardAuthenticationResponse$outboundSchema;
    /** @deprecated use `RequestCardAuthenticationResponse$Outbound` instead. */
    export type Outbound = RequestCardAuthenticationResponse$Outbound;
}
