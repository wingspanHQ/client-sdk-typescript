/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum PayoutPreferences {
    Standard = "Standard",
    Instant = "Instant",
    Expedited = "Expedited",
    Check = "Check",
    ECheck = "ECheck",
    LessThanNilGreaterThan = "<nil>",
}

export enum MemberOptionsWorkflowStatus {
    Disputed = "Disputed",
    Accepted = "Accepted",
    Resubmitted = "Resubmitted",
    LessThanNilGreaterThan = "<nil>",
}

export enum MemberOptionsWorkflowSubStatus {
    Submitted = "Submitted",
    LessThanNilGreaterThan = "<nil>",
}

export class MemberOptions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "comment" })
    comment?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "payoutPreferences" })
    payoutPreferences?: PayoutPreferences;

    @SpeakeasyMetadata()
    @Expose({ name: "workflowStatus" })
    workflowStatus?: MemberOptionsWorkflowStatus;

    @SpeakeasyMetadata()
    @Expose({ name: "workflowSubStatus" })
    workflowSubStatus?: MemberOptionsWorkflowSubStatus;
}
