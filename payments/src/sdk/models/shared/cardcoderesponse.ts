/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CardCodeResponse = {
  phoneNumber: string;
  verificationToken: string;
};

/** @internal */
export const CardCodeResponse$inboundSchema: z.ZodType<
  CardCodeResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  phoneNumber: z.string(),
  verificationToken: z.string(),
});

/** @internal */
export type CardCodeResponse$Outbound = {
  phoneNumber: string;
  verificationToken: string;
};

/** @internal */
export const CardCodeResponse$outboundSchema: z.ZodType<
  CardCodeResponse$Outbound,
  z.ZodTypeDef,
  CardCodeResponse
> = z.object({
  phoneNumber: z.string(),
  verificationToken: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CardCodeResponse$ {
  /** @deprecated use `CardCodeResponse$inboundSchema` instead. */
  export const inboundSchema = CardCodeResponse$inboundSchema;
  /** @deprecated use `CardCodeResponse$outboundSchema` instead. */
  export const outboundSchema = CardCodeResponse$outboundSchema;
  /** @deprecated use `CardCodeResponse$Outbound` instead. */
  export type Outbound = CardCodeResponse$Outbound;
}

export function cardCodeResponseToJSON(
  cardCodeResponse: CardCodeResponse,
): string {
  return JSON.stringify(
    CardCodeResponse$outboundSchema.parse(cardCodeResponse),
  );
}

export function cardCodeResponseFromJSON(
  jsonString: string,
): SafeParseResult<CardCodeResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CardCodeResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CardCodeResponse' from JSON`,
  );
}
